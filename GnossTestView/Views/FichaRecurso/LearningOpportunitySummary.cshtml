@*[security|||learningopportunitysummary|||crfp]*@
@model ResourceViewModel
@{
    ResourceModel FichaDocumento = Model.Resource;
    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();

    if (Comunidad.IsCatalog)
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaCatalogo comGnoss fichaRecursoEducativo fichaRecursoMediateca");
    }
    else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Semantico)
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaRecurso fichaCatalogo comGnoss fichaRecursoEducativo fichaRecursoMediateca");
    }
    else
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaRecurso comGnoss fichaRecursoEducativo fichaRecursoMediateca");
    }

    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty
        (FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        Html.GetListaCSS().Add(Html.GetBaseUrlContent() + "/" + Es.Riam.Util.UtilArchivos.ContentOntologias + "/Archivos/" + FichaDocumento.ItemLinked.ToString().Substring(0, 3) + "/" + FichaDocumento.ItemLinked.ToString() + ".css?v=" + FichaDocumento.ItemLinkedFotoVersion);
        Html.GetListaJS().Add(Html.GetBaseUrlContent() + "/" + Es.Riam.Util.UtilArchivos.ContentOntologias + "/Archivos/" + FichaDocumento.ItemLinked.ToString().Substring(0, 3) + "/" + FichaDocumento.ItemLinked.ToString() + ".js?v=" + FichaDocumento.ItemLinkedFotoVersion);
    }

    if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Semantico)
    {
        Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/formsemactic.js?v=" + Html.GetVersion());
        Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/formsemactic.css?v=" + Html.GetVersion());
    }

    bool PresentacionNoSocial = Comunidad.ProyectType == CommunityModel.TypeProyect.CatalogoNoSocial || Comunidad.ProyectType == CommunityModel.TypeProyect.CatalogoNoSocialConUnTipoDeRecurso;
    Recurso recurso = new Recurso(semCmsModel, FichaDocumento, Html.GetBaseUrlContent() + "/");
    string classPrincipal = "";
    if (semCmsModel.ReadMode)
    {
        classPrincipal = "formSemLectura";

        if (semCmsModel.RootEntities != null && semCmsModel.RootEntities.Count > 0)
        {
            classPrincipal += " formSemLectura_" + semCmsModel.RootEntities[0].Entity.TipoEntidadGeneracionClases;
        }
    }

}

@section breadcrumb{
    <div class="breadcrumb" id="breadcrumb">
        <div class="box">
            <p>@Html.GetText("COMMON", "ESTASEN")</p>
            <ol>
                <li><a href="@Comunidad.Url"><strong>@Html.GetText("COMMON", "HOME")</strong></a></li>
                @{
                    string urlPestanya = Comunidad.Url + "/" + Html.GetNombreUrlPestanya();
                    string nombrePestanya = Html.GetNombrePestanya();
                }
                <li><a href="@urlPestanya">@nombrePestanya</a></li>
                <li>@FichaDocumento.Title</li>
            </ol>
        </div>
    </div>
}

<div id="col02">
    <div>
        <div class="@classPrincipal">
            @{
                if (!FichaDocumento.LastVersion.Equals(FichaDocumento.Key))
                {
                    <div>
                        <div class="group utils-1 noUltVer">
                            <img src="@Html.GetBaseUrlStatic()/img/comunidades/icoNoVigilado.gif" />
                            <p>@Html.Raw(Html.GetText("PERFILBASERECURSOSFICHA", "NOULTIMAVERSION", Html.GetUrlPagina().Replace(FichaDocumento.Key.ToString(), FichaDocumento.LastVersion.ToString())))</p>
                        </div>
                    </div>
                }

                string claseItem = "resource";

                if (FichaDocumento.IsDraft)
                {
                    claseItem += " resourceDraft";
                }
            }


            <div typeof="sioc_t:Item" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:sioc_t="http://rdfs.org/sioc/types#" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:sioc="http://rdfs.org/sioc/ns#" class="@claseItem">
                <div class="box description">
                    <div class="wrapDescription">

                        @if (Model.SemanticFrom == null || !Model.SemanticFrom.HideResourceTitle)
                        {
                            <div class="contentGroup contenidoPrincipal">
                                <div class="group title">
                                    <h1 property="dcterms:title" content="@FichaDocumento.Title">
                                        @if (string.IsNullOrEmpty(FichaDocumento.UrlDocument))
                                        {
                                            @FichaDocumento.Title
                                        }
                                        else
                                        {
                                            string claseEnviarAccGogAnac = "";
                                            if (FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.Imagen || FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.FicheroServidor)
                                            {
                                                claseEnviarAccGogAnac = "class=\"linkDescargaFichero\"";
                                            }

                                            if (FichaDocumento.OpenInNewWindow)
                                            {
                                                <a target="_blank" title="@Html.GetText("PERFILBASE", "ABREVENTANANUEVA")" href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.Title</a>
                                            }
                                            else
                                            {
                                                <a href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.Title</a>
                                            }
                                        }
                                    </h1>

                                    @{
                                        string privado = "";
                                        if (FichaDocumento.Private)
                                        {
                                            privado = "privado";
                                        }
                                    }
                                </div>

                                <div class="valoracion">
                                    <div class="starrr"></div>
                                    <div class="info-valoracion">
                                        <a href="#" class="toggle"><span class="fa fa-caret-down"></span></a>
                                        <div class="dropdown">

                                            <div class="info">
                                                <p><strong>@recurso.meanScore</strong> de un máximo de <strong>5 puntos</strong></p>
                                                <p id="starsNumber" class="oculto">@recurso.starsNumber</p>
                                                <p id="isVoted" class="oculto">@FichaDocumento.Votes.IsVotedPositive</p>
                                                @if (!@FichaDocumento.Votes.IsVotedPositive)
                                                {
                                                    <p class="desc">
                                                        Puede valorar el recurso pulsando en la parte superior en la estrella que considere.
                                                    </p>
                                                }
                                                else
                                                {
                                                    <p class="desc">
                                                        Ya ha realizado una votación en el recurso.
                                                    </p>
                                                }
                                                @if (FichaDocumento.Votes != null && FichaDocumento.AllowVotes)
                                                {
                                                    <br />
                                                    <p class="nVotos">
                                                        Nº de votos: <span id="votesNumber">@recurso.votesNumber </span>
                                                    </p>
                                                }
                                            </div>
                                            <div class="pregunta oculto">
                                                <p>@Html.Translate("¿Desea valorar el recurso?")</p>
                                                <a href="#" class="btn-si">@Html.Translate("Si")</a>
                                                <a href="#" class="btn-no">@Html.Translate("No")</a>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                                        }

                        <div class="group content semanticView">

                            <div class="row-panel-info">
                                @if (recurso.annualPlan != null)
                                {
                                    <div class="plan-anual">
                                        <div class="cont cont_annualPlan" rel="emlo:annualPlan" about="@recurso.IdGnoss">
                                            <strong class="lb lb_annualPlan">Plan anual:</strong>
                                            <div class="contSelEnt contSelEnt_annualPlan">
                                                <div class="propSelEnt propSelEnt_description">
                                                    <div class="edit edit_description">
                                                        <span class="values">
                                                            <span class="value" about="@recurso.annualPlan.IdGnoss" property="dc:description">@recurso.annualPlan.description</span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (recurso.center != null)
                                {

                                    <div class="centro">
                                        <div class="cont cont_center" rel="emlo:center" about="@recurso.IdGnoss">
                                            <strong class="lb lb_center">Centro:</strong>
                                            <div class="contSelEnt contSelEnt_center">
                                                <div class="propSelEnt propSelEnt_description">

                                                    <div class="edit edit_description">
                                                        <span class="values">
                                                            <span class="value" about="@recurso.center.IdGnoss" property="dc:description">@recurso.center.description</span>
                                                        </span>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (recurso.line != null)
                                {
                                    <div class="linea">
                                        <div class="cont cont_line" rel="emlo:line" about="@recurso.IdGnoss">
                                            <strong class="lb lb_line">Línea:</strong>
                                            <div class="contSelEnt contSelEnt_line">
                                                <div class="propSelEnt propSelEnt_description">
                                                    <div class="edit edit_description">
                                                        <span class="values">
                                                            <span class="value" about="@recurso.line.IdGnoss" property="dc:description">@recurso.line.description</span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="inicio-convocatoria">
                                    <div class="edit edit_start">
                                        <strong class="lb lb_start">Fecha de inicio de la convocatoria:</strong>
                                        <span class="values">
                                            <span class="value" about="@recurso.IdGnoss" property="mlo:start">@recurso.start</span>
                                        </span>
                                    </div>
                                </div>
                                @if (recurso.content != null)
                                {
                                    <div class="contenido">
                                        <div class="cont cont_content" rel="emlo:content" about="@recurso.IdGnoss">
                                            <strong class="lb lb_content">Contenido:</strong>
                                            <div class="contSelEnt contSelEnt_content">
                                                <div class="propSelEnt propSelEnt_description">
                                                    <div class="edit edit_description">

                                                        <span class="values">
                                                            <span class="value" about="@recurso.content.IdGnoss" property="dc:description">@recurso.content.description</span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="finalizacion-convocatoria">
                                    <div class="edit edit_endCallDate">
                                        <strong class="lb lb_endCallDate">Fecha de fin de la convocatoria:</strong>
                                        <span class="values">
                                            <span class="value" about="@recurso.IdGnoss" property="emlo:endCallDate">@recurso.endCallDate</span>
                                        </span>
                                    </div>
                                </div>
                                @if (recurso.author != null && recurso.author.Count > 0)
                                {
                                    <div class="authors">
                                        <div class="cont cont_author" rel="crfp:author" about="@recurso.IdGnoss">
                                            <strong class="lb lb_author">Autores:</strong>
                                            <div>
                                                <span class="values">
                                                    @foreach (Author author in recurso.author)
                                                    {
                                                        <span class="value" style="display: block; margin-left: 10px;">@author.name</span>
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="oculto">
                                    <div class="edit edit_communityShortName">
                                        <span class="values">
                                            <span class="value" about="@recurso.IdGnoss" property="crfp:communityShortName">@recurso.communityShortName</span>
                                        </span>
                                    </div>

                                </div>
                            </div>

                            <div class="group group_info">
                                <div class="mediumLabels">
                                    <div class=" prop_description">
                                        <strong class="lb_description">Descripción: </strong><br>
                                        <div class="value" about="@recurso.IdGnoss" property="dc:description" datatype="xsd:string">
                                            @Html.Raw(recurso.description)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="group materiales-generados">

                                <div class="mediumLabels">

                                    <div class="group">
                                        <strong>Materiales generados: <span class="border_bottom"></span></strong>
                                        <div class="contentgroup">
                                            @foreach (PublicFile file in recurso.publicFile)
                                            {
                                                <div class="cont cont_publicFile" rel="crfp:publicFile" about="@recurso.IdGnoss"><span class="value" about="@file.IdGnoss" property="dc:title"><a href="@file.files" target="_blank" style="margin-left: 10px;">@file.title</a></span><br></div>
                                            }

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                        @if (!Model.HideUtilsResource)
                        {
                            if (!PresentacionNoSocial)
                            {
                                <div id="panUtils1" class="group utils-1 js-activado">
                                    <p class="info"><strong>@Html.GetText("PERFILBASERECURSOSFICHA", "ACERCADEESTERECURSO")</strong></p>
                                    @{
                                        string textoVisitas = Html.GetText("LISTARECURSOS", "VISITAS");
                                        if (FichaDocumento.NameImage == "video" || FichaDocumento.NameImage == "audio")
                                        {
                                            textoVisitas = Html.GetText("LISTARECURSOS", "REPRODUCCIONES");
                                        }
                                    }
                                    @if (!Model.HideWebsiteVisits)
                                    {
                                        <p class="visitas"><span class="literal">@textoVisitas </span><strong>@FichaDocumento.NumVisits</strong></p>
                                    }

                                    @if (FichaDocumento.Certification.Key != Guid.Empty)
                                    {
                                        <div id="contCertificado">
                                            <p class="certificado">
                                                @Html.GetText("PERFILBASERECURSOSFICHA", "RECURSOCERTIFICADO"):
                                                <strong>@MvcHtmlString.Create(FichaDocumento.Certification.Value)</strong>
                                            </p>
                                        </div>
                                    }
                                </div>
                                            }
                                        }



                        <script type="text/javascript">
                            var urlActionSemCms = '@FichaDocumento.ListActions.UrlActionSemCms';

                            $(document).ready(function () {
                                MontarFechas();

                                cargarGadgets();
                            });

                            function cargarGadgets() {
                                var gadgets = "";
                                $('#divContPanGadgets div.group.resources:empty').each(function () {
                                    if ($(this).attr("id") != undefined && $(this).attr("id") != "") {
                                        gadgets += $(this).attr("id") + ",";
                                    }
                                });

                                if (gadgets != "") {
                                    var dataPostGadgets = {
                                        callback: "CargarGadgets",
                                        gadgetsID: gadgets
                                    }

                                    @*$.post('@FichaDocumento.CompletCardLink', dataPostGadgets, function (data) {*@
                                    $.post('@Html.GetUrlContext(FichaDocumento.CompletCardLink, FichaDocumento.Key, Html.GetComunidad().ShortName)', dataPostGadgets, function (data) {
                                        for (var i in data) {
                                            if (data[i].updateTargetId.indexOf("FichaGadget_") == 0) {
                                                var panID = data[i].updateTargetId.substr(12);
                                                var htmlGadget = data[i].html;
                                                if (htmlGadget == "") {
                                                    $('#divContPanGadgets').find("#" + panID).remove();
                                                }
                                                else {
                                                    $('#divContPanGadgets').find("#" + panID).replaceWith(htmlGadget);
                                                }
                                            }
                                        }
                                        cargarGadgets();
                                    });
                                }
                                else {
                                    CompletadaCargaContextos();
                                }
                            }

                            @if (FichaDocumento.Graphs.Count > 0)
                            {
                                @:var urlPaginaCallBackGrafos = '@FichaDocumento.ListActions.UrlCallbackGraph';

                                Guid docID = FichaDocumento.Key;
                                string titulo = FichaDocumento.Title.Replace("'", "\\'");
                                Guid proyID = Comunidad.Key;
                                string UrlIntragnoss = Model.UrlIntragnoss;

                                Html.GetListaJS().Add(Html.GetBaseUrl() + "/jsweb/arbor.js?v=" + Html.GetVersion());
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/js/grafo.gnoss.js?v=" + Html.GetVersion());
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/js/jquery.qtip.min.js?v=" + Html.GetVersion());
                                Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/css/jquery.qtip.min.css?v=" + Html.GetVersion());

                                foreach (ResourceModel.GrafoRecurso grafo in FichaDocumento.Graphs)
                                {
                                    //@Html.Raw(" var dataPost = {callback: 'peticionajaxrelacionesgrafoficharec',urlintragnoss: '" + UrlIntragnoss + "',proyectoID: '" + proyID + "', documentoID: '" + docID + "', propEnlace: '" + grafo.PropEnlace + "', nodosLimiteNivel: 30,extra: '" + grafo.Extra + "', idioma: $('input.inpt_Idioma').val(), tipoRecurso: '" + grafo.TipoRecurso + "'};");
                                    @Html.Raw(" var dataPost = {urlintragnoss: '" + UrlIntragnoss + "', propEnlace: '" + grafo.PropEnlace + "', nodosLimiteNivel: 30,extra: '" + grafo.Extra + "', idioma: $('input.inpt_Idioma').val(), tipoRecurso: '" + grafo.TipoRecurso + "'};");

                                                                                                                                                                                                                                                                                     //@Html.Raw(" $(function(){MontarGrafoFicRec('" + docID + "', '" + titulo + "', '" + proyID + "', '" + grafo.PropEnlace + "', 30, '" + UrlIntragnoss + "', '" + grafo.Extra + "', '" + grafo.UrlBusqueda + "', '" + grafo.TipoRecurso + "'); $.post('" + Html.GetUrlPagina() + "', dataPost, FinTraerDatosGrafoAJAX);});");
                                    @Html.Raw(" $(function(){MontarGrafoFicRec('" + docID + "', '" + titulo + "', '" + proyID + "', '" + grafo.PropEnlace + "', 30, '" + UrlIntragnoss + "', '" + grafo.Extra + "', '" + grafo.UrlBusqueda + "', '" + grafo.TipoRecurso + "'); GnossPeticionAjax('" + FichaDocumento.ListActions.UrlLoadGraph + "', dataPost, true).done(function(data){FinTraerDatosGrafoAJAX(data)});});");
                                }
                            }
                        </script>
                        @if (!Model.HideUtilsResource)
                        {
                            <div class="group utils-2" id="contAutoresEditoresLectores">
                                @Html.PartialView("_FichaAutoresEditoresLectores", FichaDocumento)
                            </div>
                        }

                        <div id="contCategorias" class="group categorias">
                            <p>Categorías: </p>
                            <div class="mediumLabels">
                                <div class="group">
                                    <ul class="listTags"></ul>
                                </div>
                            </div>

                        </div>

                        @Html.PartialView("_FichaEtiquetas", FichaDocumento)

                        @if (FichaDocumento.Version > 0)
                        {
                            <div class="group version">
                                <p>
                                    @Html.GetText("LISTARECURSOS", "VERSIONES")@FichaDocumento.Version
                                </p>
                            </div>
                        }

                        @if (!Model.HideSharedCommunities)
                        {
                            <div class="group compartida" id="divCompartido">
                                @Html.PartialView("_FichaCompartidos", FichaDocumento)
                            </div>
                        }

                        @if (!PresentacionNoSocial || IdentidadActual.IsProyectAdmin || IdentidadActual.IsProyectSupervisor)
                        {
                            @Html.PartialView("_FichaAccionesMenu", Model)
                        }

                        @if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Newsletter)
                        {
                            <div class="group newsletter">
                                <p>
                                    <a href="@FichaDocumento.UrlSearch?gnoss:hastipodoc=11">@Html.GetText("PERFILBASERECURSOSFICHA", "VERTODASNEWSLETTERS")</a>
                                </p>
                            </div>
                        }

                        @if (FichaDocumento.Licence != "")
                        {
                            <div class="group license">
                                <p class="licencia creativeCommonds">@Html.Raw(FichaDocumento.Licence)</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (FichaDocumento.Comments != null)
    {
        <div class="resource">
            <div class="box comments" id="comments">
                <div>
                    <div>
                        <p class="what"><strong><span id="numComentarios">@FichaDocumento.NumComments</span> Comentarios</strong></p>
                        @if (!IdentidadActual.IsGuestIdentity)
                        {
                            if (FichaDocumento.AllowComments)
                            {
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/ckeditor/ckeditor.js?v=" + Html.GetVersion());
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/ckeditor/adapters/jquery.js?v=" + Html.GetVersion());
                                <div>
                                    <div class="comment-content">
                                        <fieldset class="mediumLabels">
                                            <legend>
                                                @Html.GetText("PERFILBASERECURSOSFICHA", "PUBLICARCOMENTARIO")
                                            </legend>
                                            <p>
                                                <textarea cols="20" rows="2" id="txtNuevoComentario_@FichaDocumento.Key" class="cke comentarios"></textarea>
                                            </p>
                                            <p id="error_@FichaDocumento.Key" class="error"></p>
                                            @{
                                                string funcionComentario_CrearComentario = "Comentario_CrearComentario('" + FichaDocumento.ListActions.UrlCreateComment + "', '" + FichaDocumento.Key + "');";
                                            }
                                            <input type="button" class="text medium" value="@Html.GetText("COMMON", "ENVIAR")" onclick="@funcionComentario_CrearComentario" />
                                            @*<p></p>*@
                                        </fieldset>
                                    </div>
                                </div>
                                                }
                                                else
                                                {
                                                    <label><span>@Html.GetText("CONTROLESDOCUMENTACION", "COMENTARIOSBLOQUEADOS")</span></label>
                                                    }
                                                }
                                                else
                                                {
                                                    <p>@Html.GetText("CONTROLESDOCUMENTACION", "QUIERESCOMENTAR") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "HAZTEMIEMBRO")">@Html.GetText("COMMON", "REGISTRARSE")</a> @Html.GetText("PERFIL", "VISITANTEPERFILO") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "LOGIN")">@Html.GetText("COMINICIOLOGIN", "INICIASESION")</a></p>
                                                }
                        @if (FichaDocumento.Comments != null)
                        {
                            <div id="panComentarios">
                                @foreach (CommentModel comentario in FichaDocumento.Comments)
                                {
                                    @Html.PartialView("_FichaComentario", comentario)
                                }
                            </div>
                        }
                    </div>
                    @*<div class="oculto comentariosDisponibles"></div>*@
                </div>
            </div>
            <input type="hidden" value="@Html.GetText("FREEBASE", "AVISOLEGAL")" class="inpt_avisoLegal" />
        </div>
                                                }
</div>
<div id="col01">
    <div id="panVinculadosInt">
        @Html.PartialView("_FichaVinculados", FichaDocumento)
    </div>
    @if (FichaDocumento.Gadgets != null && FichaDocumento.Gadgets.Count > 0)
    {
        <div id="divContPanGadgets">
            @foreach (GadgetModel gadget in ((List<GadgetModel>)FichaDocumento.Gadgets).OrderBy(gadget => gadget.Order))
                {
                @Html.PartialView("ControlesMVC/_FichaGadget", gadget)
            }
        </div>
    }
</div>

@if (Model.SemanticFrom != null && Model.SemanticFrom.MapAgregated)
{
    <div class="listado-mapa">
        <div id="listing-preview-map"></div>
    </div>
}


<script language="javascript" type="text/javascript">

    $(document).ready(function () {
        MontarFechaCliente();
    });

</script>

<script type="text/javascript">
    @Html.Raw(Html.GetJSExtra());
</script>

@functions{
    public static string ObtenerValorPropiedadSemCms(SemanticPropertyModel pPropiedad)
    {
        if (pPropiedad != null && pPropiedad.PropertyValues.Count > 0)
        {
            return pPropiedad.PropertyValues[0].Value;
        }

        return "";
    }
    public class Recurso
    {
        public const string crfp = "http://onto.educa.jccm.es/crfp#";
        public const string dc = "http://purl.org/dc/elements/1.1/";
        public const string emlo = "http://onto.educa.jccm.es/emlo#";

        public Recurso(SemanticResourceModel pSemCmsModel, ResourceModel pFichaDocumento, string pUrlContent)
        {
            mSemCmsModel = pSemCmsModel;

            string crfp = "http://onto.educa.jccm.es/crfp#";
            string emlo = "http://onto.educa.jccm.es/emlo#";
            string mlo = "http://purl.org/net/mlo/";
            string dc = "http://purl.org/dc/elements/1.1/";
            this.IdGnoss = pSemCmsModel.RootEntities[0].AboutRDFA;
            this.title = pSemCmsModel.GetFirstValuePropertyByPath(dc + "title");
            this.description = pSemCmsModel.GetFirstValuePropertyByPath(dc + "description");
            this.communityShortName = pSemCmsModel.GetFirstValuePropertyByPath(crfp + "communityShortName");
            SemanticPropertyModel propCenter = mSemCmsModel.GetPropertyByPath(emlo + "center");
            if (propCenter != null && propCenter.FirstPropertyValue != null)
            {
                this.center = new EducativeCenter(propCenter.FirstPropertyValue.RelatedEntity);
            }
            SemanticPropertyModel propLine = mSemCmsModel.GetPropertyByPath(emlo + "line");
            if (propLine != null && propLine.FirstPropertyValue != null)
            {
                this.line = new Line(propLine.FirstPropertyValue.RelatedEntity);
            }

            SemanticPropertyModel propContent = mSemCmsModel.GetPropertyByPath(emlo + "content");
            if (propContent != null && propContent.FirstPropertyValue != null)
            {
                this.content = new ActivityContent(propContent.FirstPropertyValue.RelatedEntity);
            }
            SemanticPropertyModel propAnnualPlan = mSemCmsModel.GetPropertyByPath(emlo + "annualPlan");
            if (propAnnualPlan != null && propAnnualPlan.FirstPropertyValue != null)
            {
                this.annualPlan = new AnnualPlan(propAnnualPlan.FirstPropertyValue.RelatedEntity);
            }
            this.start = pSemCmsModel.GetFirstValuePropertyByPath(mlo + "start");
            this.endCallDate = pSemCmsModel.GetFirstValuePropertyByPath(emlo + "endCallDate");
            this.author = GetAuthors();
            this.publicFile = GetPublicFiles();

            if (pSemCmsModel.GetFirstValuePropertyByPath(crfp + "meanScore") != null)
            {
                this.meanScore = pSemCmsModel.GetFirstValuePropertyByPath(crfp + "meanScore");
                this.starsNumber = Convert.ToInt32(Math.Floor(double.Parse(meanScore, System.Globalization.CultureInfo.InvariantCulture)));
            }
            else
            {
                this.meanScore = "-";
                this.starsNumber = 0;
            }
            if (pSemCmsModel.GetFirstValuePropertyByPath(crfp + "votesNumber") != null)
            {
                this.votesNumber = pSemCmsModel.GetFirstValuePropertyByPath(crfp + "votesNumber");
            }
            else
            {
                this.votesNumber = "0";
            }


        }

        #region propiedades
        public SemanticResourceModel mSemCmsModel { get; set; }
        public string IdGnoss { get; set; }
        public string title { get; set; }
        public string description { get; set; }
        public string communityShortName { get; set; }
        public AnnualPlan annualPlan { get; set; }
        public EducativeCenter center { get; set; }
        public Line line { get; set; }
        public ActivityContent content { get; set; }
        public string start { get; set; }
        public string endCallDate { get; set; }
        public List<Author> author { get; set; }
        public List<PublicFile> publicFile { get; set; }

        public string meanScore { get; set; }
        public int starsNumber { get; set; }
        public string votesNumber { get; set; }

        #endregion

        private List<Author> GetAuthors()
        {
            SemanticPropertyModel propiedad = mSemCmsModel.GetPropertyByPath(crfp + "author");
            List<Author> listado = new List<Author>();
            if (propiedad != null && propiedad.OntologyPropInfo.EntitySelector.LinkedResources.Count > 0)
            {
                foreach (SemanticPropertyModel.ResourceLinkedToEntitySelector valor in propiedad.OntologyPropInfo.EntitySelector.LinkedResources)
                {
                    Author author = new Author();
                    author.name = valor.Title;
                    listado.Add(author);
                }
            }

            return listado;
        }

        private List<PublicFile> GetPublicFiles()
        {
            SemanticPropertyModel propiedad = mSemCmsModel.GetPropertyByPath(crfp + "publicFile");
            List<PublicFile> listado = new List<PublicFile>();
            if (propiedad != null && propiedad.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue valor in propiedad.PropertyValues)
                {
                    PublicFile file = new PublicFile();
                    file.title = valor.RelatedEntity.GetFirstValuePropertyByPath(dc + "title");
                    if (valor.RelatedEntity.GetPropertyByPath(crfp + "files") != null)
                    {
                        try
                        {
                            file.files = valor.RelatedEntity.GetPropertyByPath(crfp + "files").PropertyValues[0].DownloadUrl;
                            file.IdGnoss = valor.RelatedEntity.AboutRDFA;
                            listado.Add(file);
                        }
                        catch (Exception e)
                        {

                        }

                    }

                }
            }

            return listado;
        }
    }


    public class PublicFile
    {
        public string title { get; set; }
        public string files { get; set; }
        public string IdGnoss { get; set; }

    }

    public class Author
    {

        public string name { get; set; }
    }
    public class AnnualPlan
    {
        public string description { get; set; }
        public string IdGnoss { get; set; }
        public AnnualPlan(SemanticEntityModel pSemanticEntityModel)
        {
            if (pSemanticEntityModel != null)
            {
                this.description = ObtenerValorPropiedadSemCms(pSemanticEntityModel.GetPropertyByPath(Recurso.dc + "description"));
                this.IdGnoss = pSemanticEntityModel.AboutRDFA;
            }
        }

    }
    public class EducativeCenter
    {

        public string description { get; set; }
        public string IdGnoss { get; set; }

        public EducativeCenter(SemanticEntityModel pSemanticEntityModel)
        {
            if (pSemanticEntityModel != null)
            {
                this.description = ObtenerValorPropiedadSemCms(pSemanticEntityModel.GetPropertyByPath(Recurso.dc + "description"));
                this.IdGnoss = pSemanticEntityModel.AboutRDFA;
            }
        }
    }
    public class ActivityContent
    {
        public string description { get; set; }
        public string IdGnoss { get; set; }

        public ActivityContent(SemanticEntityModel pSemanticEntityModel)
        {
            if (pSemanticEntityModel != null)
            {
                this.description = ObtenerValorPropiedadSemCms(pSemanticEntityModel.GetPropertyByPath(Recurso.dc + "description"));
                this.IdGnoss = pSemanticEntityModel.AboutRDFA;
            }
        }

    }
    public class Line
    {

        public string description { get; set; }
        public string IdGnoss { get; set; }
        public Line(SemanticEntityModel pSemanticEntityModel)
        {
            if (pSemanticEntityModel != null)
            {
                this.description = ObtenerValorPropiedadSemCms(pSemanticEntityModel.GetPropertyByPath(Recurso.dc + "description"));
                this.IdGnoss = pSemanticEntityModel.AboutRDFA;
            }
        }
    }
}