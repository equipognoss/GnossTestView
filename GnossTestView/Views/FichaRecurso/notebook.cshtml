@*[security|||notebook|||materialeducativo]*@
@model ResourceViewModel
@{
    ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = ViewBag.Comunidad;
    UserIdentityModel IdentidadActual = ViewBag.IdentidadActual;
    UserProfileModel perfil = ViewBag.Perfil;
    ViewBag.PintarH1 = false;

    ViewBag.BodyClass = "page-resource layout02 listadoComunidad comGnoss notebook ficha-cuadernos operativacuadernillos semanticoResource " + FichaDocumento.RdfType + "Resource";

    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty
        (FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        ViewBag.ListaCSS.Add(ViewBag.BaseUrlContent + "/" + Es.Riam.Util.UtilArchivos.ContentOntologias + "/Archivos/" + FichaDocumento.ItemLinked.ToString().Substring(0, 3) + "/" + FichaDocumento.ItemLinked.ToString() + ".css?v=" + FichaDocumento.ItemLinkedFotoVersion);
        ViewBag.ListaJS.Add(ViewBag.BaseUrlContent + "/" + Es.Riam.Util.UtilArchivos.ContentOntologias + "/Archivos/" + FichaDocumento.ItemLinked.ToString().Substring(0, 3) + "/" + FichaDocumento.ItemLinked.ToString() + ".js?v=" + FichaDocumento.ItemLinkedFotoVersion);
    }
}

@functions {
    private bool EsMateria(Guid pCategoriaID)
    {
        if (!pCategoriaID.Equals(Guid.Empty))
        {
            CategoryModel categoria = ((List<CategoryModel>)ViewBag.Comunidad.Categories).Find(cat => cat.Key == pCategoriaID);

            if (categoria != null && categoria.ParentCategoryKey.Equals(new Guid("22f7c07b-ea37-45a1-a16b-8b0605f6c98f")))
            {
                return true;
            }
            else if (categoria != null)
            {
                return EsMateria(categoria.ParentCategoryKey);
            }
        }
        return false;
    }
}

@section breadcrumb{
    <div class="breadcrumb" id="breadcrumb">
        <div class="box">
            <p>@Html.GetText("COMMON", "ESTASEN")</p>
            <ol>
                <li><a href="@Comunidad.Url"><strong>@Html.GetText("COMMON", "HOME")</strong></a></li>
                @{
                    string urlPestanya = Comunidad.Url + "/" + ViewBag.NombreUrlPestanya;
                    string nombrePestanya = ViewBag.NombrePestanya;
                }
                <li><a href="@urlPestanya">@nombrePestanya</a></li>
                <li>@FichaDocumento.Title</li>
            </ol>
        </div>
    </div>
}

<div id="col02" class="col col-xs-12 col-md-9">
    <div>
        <div>
            @if (!FichaDocumento.LastVersion.Equals(FichaDocumento.Key))
            {
                <div>
                    <div class="group utils-1 noUltVer">
                        <img src="@ViewBag.BaseUrlStatic/img/comunidades/icoNoVigilado.gif" />
                        <p>@Html.Raw(Html.GetText("PERFILBASERECURSOSFICHA", "NOULTIMAVERSION", (string)ViewBag.UrlPagina.Replace(FichaDocumento.Key.ToString(), FichaDocumento.LastVersion.ToString())))</p>      
                    </div>
                </div>
            }
            <div typeof="sioc_t:Item" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:sioc_t="http://rdfs.org/sioc/types#" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:sioc="http://rdfs.org/sioc/ns#" class="resource resource-main">
                <div class="box description">
                    <div class="wrapDescription">
						<div class="group title groupTitleCabecera">
                        @{
                            string titulo = FichaDocumento.Title;
                            string subtitulo = "";
                            string rdfaTitulo = "";

                            SemanticPropertyModel propTitulo = Model.SemanticFrom.GetPropertyByPath("http://purl.org/dc/elements/1.1/title");

                            SemanticPropertyModel propSubTitulo = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#subtitle");

                            if (propTitulo != null)
                            {
                                titulo = propTitulo.FirstPropertyValue.Value;
                                rdfaTitulo = propTitulo.GetRDFA();
                            }
                            if (propSubTitulo != null)
                            {
                                subtitulo = propSubTitulo.FirstPropertyValue.Value;
                            }
                            string claseCssAsignatura = "";
                            claseCssAsignatura = Es.Riam.Util.UtilCadenas.RemoveAccentsWithRegEx(titulo.Substring(0, titulo.IndexOf(" ")).ToLower());

							<p class="pageTitle"><a href="https://didactalia.net/comunidad/materialeducativo/cuadernos">@Html.Translate("Cuadernos de didactalia")</a></p>
							<h1  property="dcterms:title" class="@claseCssAsignatura">
								<span class="icono"></span>
								<span @rdfaTitulo>@titulo</span>        
							</h1>

							<p class="resourceType semantico @FichaDocumento.RdfType">
								<span>tipo de documento</span>
								@if (!string.IsNullOrEmpty(subtitulo))
        {
									<a>@subtitulo</a>
        }
								@{
                                    string materia = string.Empty;
                                    foreach (CategoryModel categoria in FichaDocumento.Categories)
                                    {
                                        if (EsMateria(categoria.Key))
                                        {
                                            materia = categoria.Name;
                                            break;
                                        }
                                    }
                                    if (!string.IsNullOrEmpty(materia))
                                    {
										<a class="materia">@materia</a>
                                    }
								}
							</p>

                            SemanticPropertyModel propValorPrecio = Model.SemanticFrom.GetPropertyByPath("http://purl.org/goodrelations/v1#hasPriceSpecification");
                            SemanticPropertyModel propValorFormato = Model.SemanticFrom.GetPropertyByPath("http://purl.org/dc/elements/1.1/format");                           
                            SemanticPropertyModel propEdades = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#age");
                            
                                string valorPrecio = "";
                                string urlValorPrecio = "";
                                if (propValorPrecio != null)
                                {
                                    valorPrecio = propValorPrecio.FirstPropertyValue.Value.Replace(" â‚¬", "");
                                    urlValorPrecio = Comunidad.Url + "/recursos?rdf:type=notebook&gr:hasPriceSpecification=" + valorPrecio;
                                }

                                string valorFormato = "";
                                string urlValorFormato = "";
                                if (propValorFormato != null)
                                {
                                    valorFormato = propValorFormato.FirstPropertyValue.Value;
                                    urlValorFormato = Comunidad.Url + "/recursos?rdf:type=notebook&dce:format=" + valorFormato;
                                }
                            }
						</div>

                        @if (FichaDocumento.Publisher != null)
                        {
                            <div class="componenteAutorUtilsAccionesRedes clearfix">
                                <div class="group author">
                                    @Html.PartialView("_FichaPublicador", FichaDocumento)
                                    @if (FichaDocumento.Publisher.Key != IdentidadActual.KeyIdentity && FichaDocumento.Publisher.TypeProfile != ProfileType.Organization && FichaDocumento.Publisher.TypeProfile != ProfileType.ProfessionalCorporate)
                                    {
                                        <p class="acc_seguir @(FichaDocumento.Publisher.Actions != null && FichaDocumento.Publisher.Actions.FollowingProfile ? "activo" : "")">
                                        @if (!IdentidadActual.IsGuestIdentity)
                                        {
                                            if (FichaDocumento.Publisher.Actions != null && FichaDocumento.Publisher.Actions.FollowingProfile)
                                            {
                                                <a onclick="Didactalia_AccionPerfil_NoSeguir(this, '@FichaDocumento.Publisher.ListActions.UrlUnfollow')">@Html.GetText("COMMON", "NOSEGUIR")<span class="icono"></span></a>
                                            }
                                            else
                                            {
                                                <a onclick="Didactalia_AccionPerfil_Seguir(this, '@FichaDocumento.Publisher.ListActions.UrlFollow')">@Html.GetText("COMMON", "SEGUIR")<span class="icono"></span></a>
                                            }
                                        }
                                        </p>
                                    }
                                </div>
                                <div class="resource-utils clearfix">
                                    <ul>
                                        @Html.PartialView("_FichaVotos", FichaDocumento.Votes)
                                        @{
                                    string textoVisitas = Html.GetText("LISTARECURSOS", "VISITAS");
                                    if (FichaDocumento.NameImage == "video" || FichaDocumento.NameImage == "audio")
                                    {
                                        textoVisitas = Html.GetText("LISTARECURSOS", "REPRODUCCIONES");
                                    }
                                        }
                                        @if (!Model.HideWebsiteVisits)
                                        {
                                            <li class="visitas">
                                                <span class="literal">@textoVisitas </span>
                                                <strong>@FichaDocumento.NumVisits</strong>
                                            </li>
                                        }
                                        <li class="comentarios">
                                            <span class="literal">@Html.GetText("CONFIGURACIONFACETADO", "CONTCOMR")</span>
                                            <strong>@FichaDocumento.NumComments</strong>
                                        </li>
                                        @if ((FichaDocumento.Actions != null && FichaDocumento.Actions.AddToMyPersonalSpace) || FichaDocumento.IsInMyPersonalSpace)
                                        {
                                            string accionAgregarAMiEspacio = "";
                                            if (!FichaDocumento.IsInMyPersonalSpace)
                                            {
                                                if (!IdentidadActual.IsGuestUser)
                                                {
                                                    @*FichaDocumento.ListActions.UrlLoadActionAddToPersonalSpace*@
                                                    accionAgregarAMiEspacio = "DesplegarAccionMVC('" + FichaDocumento.CompletCardLink + "/load-action/add-personal-space', this, 'despAccionRec_" + FichaDocumento.Key + "', 'AccionRecurso_AgregarABR');operativaVentanaModalEspacioPersonal($(this));";
                                                }
                                                else
                                                {
                                                    accionAgregarAMiEspacio = "lanzarRegistroAccionInvitado.init();";
                                                }
                                            }
                                            <li class="guardar @(FichaDocumento.IsInMyPersonalSpace ? "activo" : "")">
                                                <a onclick="@accionAgregarAMiEspacio" data-toggle="modal" data-target="#recursoModal_@FichaDocumento.Key" class="guardar_@FichaDocumento.Key">
                                                    <span class="literal">@Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARABRPERSONAL")</span>
                                                </a>
                                            </li>
                                        }
                                        @Html.PartialView("_FichaAccionesMenu", Model)
                                    </ul>
                                </div>
                            </div>
                        }
                        @if (!Model.HideUtilsResource)
                        {
                            <div id="panUtils1" class="group utils-1 js-activado">
                                <p class="info"><strong>@Html.GetText("PERFILBASERECURSOSFICHA", "ACERCADEESTERECURSO")</strong></p>
                                
                                @if (FichaDocumento.Certification.Key != Guid.Empty)
                                {
                                    <div id="contCertificado">
                                        <p class="certificado">
                                            @Html.GetText("PERFILBASERECURSOSFICHA", "RECURSOCERTIFICADO"):
                                            <strong>@MvcHtmlString.Create(FichaDocumento.Certification.Value)</strong>
                                        </p>
                                    </div>
                                }
                                
                            </div>

                        }

						<!-- CONTENIDO ESTATICO PARA POSTERIOR CAMBIO EN BACK -->

                        @{
                        
                            SemanticPropertyModel propValorPortada = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#image");
                            SemanticPropertyModel propValorImagen = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#internalSmallImage");
                            SemanticPropertyModel propValorContenido = Model.SemanticFrom.GetPropertyByPath("http://purl.org/dc/elements/1.1/description");
                            SemanticPropertyModel propValorPautas = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#guidelines");
                            SemanticPropertyModel propValorEscritura = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#writing");
                            SemanticPropertyModel propValorTipoOperacion = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#operationType");
                            SemanticPropertyModel propValorPaginas = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#page");
                            SemanticPropertyModel propValorOjetivo = Model.SemanticFrom.GetPropertyByPath("http://purl.org/net/mlo/objective");
                            SemanticPropertyModel propValorColeccion = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#collection");
                            SemanticPropertyModel propValorActividad = Model.SemanticFrom.GetPropertyByPath("http://www.notebook.com/20140725#activity");
                            
                            string valorPortada = "";
                            if (propValorPortada != null)
                            {
                                valorPortada = propValorPortada.FirstPropertyValue.Value;
                            }
                            string valorImagen = "";
                            if (propValorImagen != null)
                            {
                                valorImagen = propValorImagen.FirstPropertyValue.Value;
                            }
                            string valorContenido = "";
                            if (propValorContenido != null)
                            {
                                valorContenido = propValorContenido.FirstPropertyValue.Value;
                            }
                            string valorColeccion = "";
                            string urlValorColeccion = "";
                            if (propValorColeccion != null)
                            {
                                valorColeccion = propValorColeccion.FirstPropertyValue.Value;
                                urlValorColeccion = Comunidad.Url + "/recursos?rdf:type=notebook&nb:collection=" + valorColeccion;
                            }
                            string valorActividad = "";
                            string urlValorActividad = "";
                            if (propValorActividad != null)
                            {
                                valorActividad = propValorActividad.FirstPropertyValue.Value;
                                urlValorActividad = Comunidad.Url + "/recursos?rdf:type=notebook&nb:activity=" + valorActividad;
                            }
                            string valorPautas = "";
                            string urlValorPautas = "";
                            if (propValorPautas != null)
                            {
                                valorPautas = propValorPautas.FirstPropertyValue.Value;
                                urlValorPautas = Comunidad.Url + "/recursos?rdf:type=notebook&nb:guidelines=" + valorPautas;
                            }
                            string valorEscritura = "";
                            string urlValorEscritura = "";
                            if (propValorEscritura != null)
                            {
                                valorEscritura = propValorEscritura.FirstPropertyValue.Value;
                                urlValorEscritura = Comunidad.Url + "/recursos?rdf:type=notebook&nb:writing=" + valorEscritura;
                            }
                            string valorTipoOperacion = "";
                            string urlValorTipoOperacion = "";
                            if (propValorTipoOperacion != null)
                            {
                                valorTipoOperacion = propValorTipoOperacion.FirstPropertyValue.Value;
                                urlValorTipoOperacion = Comunidad.Url + "/recursos?rdf:type=notebook&nb:writing=" + valorTipoOperacion;
                            }
                            string valorPaginas = "";
                            string urlValorPaginas = "";
                            if (propValorPaginas != null)
                            {
                                valorPaginas = propValorPaginas.FirstPropertyValue.Value;
                                urlValorPaginas = Comunidad.Url + "/recursos?rdf:type=notebook&nb:operationType=" + valorPaginas;
                            }
                            string valorOjetivo = "";
                            if (propValorOjetivo != null)
                            {
                                valorOjetivo = propValorOjetivo.FirstPropertyValue.Value;
                            }
                        }

						<div class="cabeceraCuaderno clearfix">
							<div class="fotoCurso col-xs-12">
								<div class="portada col col-xs-12 col-md-4">
									<img src="@ViewBag.BaseUrlContent/@valorPortada" />
								</div>
								<div class="hojaCuaderno col col-xs-12 col-md-8">
									<img src="@ViewBag.BaseUrlContent/@valorImagen" />
								</div>

							</div>
						</div>
						<div class="informacionCuaderno clearfix">
							<div class="datosBasicosInformacion col-xs-12">
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Contenido</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<span>@valorContenido</span>
									</div>
								</div>
                                                             
                                @if (propValorActividad != null)
        {
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Actividad</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<span>
											<a href="@urlValorColeccion">@valorActividad</a>
										</span>
									</div>
								</div>
        }
                                @if (propValorColeccion != null)
        {
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>ColecciÃ³n</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<span>
											<a href="@urlValorColeccion">@valorColeccion</a>
										</span>
									</div>
								</div>
        }
								@if (propValorPautas != null)
        {
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Pautas</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<span>
											<a href="@urlValorPautas">@valorPautas</a>
										</span>
									</div>
								</div>
        }
								@if (propValorEscritura != null)
        {
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Escritura</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<a href="@urlValorEscritura">@valorEscritura</a>
									</div>
								</div>
        }
								@if (propValorTipoOperacion != null)
        {
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Tipo de operacion</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<a href="@urlValorTipoOperacion">@valorTipoOperacion</a>
									</div>
								</div>
        }
                                @if (propEdades != null && propEdades.PropertyValues != null && propEdades.PropertyValues.Count() > 0)
                                {
                                    <div class="row">
									    <div class="col1 col-xs-12 col-md-6">
										    <span class="icono"></span>
										    <strong>Edad</strong>
									    </div>
									    <div class="col2 col-xs-12 col-md-6">
                                            <span>

                                    @{
                                        int numEdades = propEdades.PropertyValues.Count();
                                        int cont = 1;
                                    }
                                    @foreach (SemanticPropertyModel.PropertyValue propEdad in propEdades.PropertyValues)
                                    { 
                                        string valorEdad = propEdad.Value;
                                        string urlValorEdad = Comunidad.Url + "/recursos?rdf:type=notebook&nb:age=" + valorEdad;
                                        
                                        if(cont == numEdades)
                                        {
                                            <a href="@urlValorEdad">@valorEdad</a><span> aÃ±os</span>
                                        }else{
                                            <a href="@urlValorEdad">@valorEdad</a><span>,</span>
                                        }
                                        cont++;
                                    }
                                            </span>
                                        </div>
								    </div> 
                                    }																		

                                <div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Formato</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<a href="@urlValorFormato">@valorFormato</a>
									</div>
								</div> 
								<div class="row">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>PÃ¡ginas</strong>
									</div>
									<div class="col2 col-xs-12 col-md-6">
										<span>@valorPaginas</span>
									</div>
								</div> 
								<div class="rowButton clearfix">
									<div class="col1 col-xs-12 col-md-6">
										<span class="icono"></span>
										<strong>Precio</strong>
									</div>
									<div class="col2 col-xs-12 col-md-3">
                                        <a href="@urlValorPrecio">@(valorPrecio)â‚¬</a>
									</div>                                        
									<div class="col3 col-xs-12 col-md-3">
										<a class="addToCart" href="#" rel="@FichaDocumento.Key" subtitulo="@subtitulo" title="@titulo" precio="@valorPrecio" formato="@valorFormato" default-text="AÃ±adir" active-text="AÃ±adido"><span class="icono"></span><span class="literal">AÃ±adir</span></a>
									</div>
								</div>
							</div>
						</div>
						<div class="objetivosCuaderno clearfix">
							<span>
								@Html.Raw(valorOjetivo)
							</span>
						</div>
						
                        <script type="text/javascript">
                            $(document).ready(function () {
                                MontarFechas();

                                cargarGadgets();
                            });

                            function cargarGadgets() {
                                var gadgets = "";
                                $('#divContPanGadgets div.group.resources:empty').each(function () {
                                    if ($(this).attr("id") != undefined && $(this).attr("id") != "") {
                                        gadgets += $(this).attr("id") + ",";
                                    }
                                });

                                if (gadgets != "") {
                                    var dataPostGadgets = {
                                        callback: "CargarGadgets",
                                        gadgetsID: gadgets
                                    }

                                    $.post('@ViewBag.UrlPagina', dataPostGadgets, function (data) {
                                        for (var i in data) {
                                            if (data[i].updateTargetId.indexOf("FichaGadget_") == 0) {
                                                var panID = data[i].updateTargetId.substr(12);
                                                var htmlGadget = data[i].html;
                                                if (htmlGadget == "") {
                                                    $('#divContPanGadgets').find("#" + panID).remove();
                                                }
                                                else {
                                                    $('#divContPanGadgets').find("#" + panID).replaceWith(htmlGadget);
                                                }
                                            }
                                        }
                                        cargarGadgets();
                                    });
                                }
                                else {
                                    customizarCol01DivDoblePestana.init();
                                }
                            }

                            @if (FichaDocumento.Graphs.Count > 0)
                            {
                                @:var urlPaginaCallBackGrafos = '@FichaDocumento.ListActions.UrlCallbackGraph';
                                                                                                                                                                                                                                                                                                
                                Guid docID = FichaDocumento.Key;
                                string tituloGrafo = FichaDocumento.Title.Replace("'", "\\'");
                                Guid proyID = Comunidad.Key;
                                string UrlIntragnoss = Model.UrlIntragnoss;

                                ViewBag.ListaJS.Add(ViewBag.BaseURL + "/jsweb/arbor.js?v=" + ViewBag.Version);
                                ViewBag.ListaJS.Add(ViewBag.BaseURLStatic + "/jsNuevo/grafos/js/grafo.gnoss.js?v=" + ViewBag.Version);
                                ViewBag.ListaJS.Add(ViewBag.BaseURLStatic + "/jsNuevo/grafos/js/jquery.qtip.min.js?v=" + ViewBag.Version);
                                ViewBag.ListaCSS.Add(ViewBag.BaseURLStatic + "/jsNuevo/grafos/css/jquery.qtip.min.css?v=" + ViewBag.Version);

                                foreach (ResourceModel.GrafoRecurso grafo in FichaDocumento.Graphs)
                                {
                                    @Html.Raw(" var dataPost = {urlintragnoss: '" + UrlIntragnoss + "', propEnlace: '" + grafo.PropEnlace + "', nodosLimiteNivel: 30,extra: '" + grafo.Extra + "', idioma: $('input.inpt_Idioma').val(), tipoRecurso: '" + grafo.TipoRecurso + "'};");

                                    @Html.Raw(" $(function(){MontarGrafoFicRec('" + docID + "', '" + tituloGrafo + "', '" + proyID + "', '" + grafo.PropEnlace + "', 30, '" + UrlIntragnoss + "', '" + grafo.Extra + "', '" + grafo.UrlBusqueda + "', '" + grafo.TipoRecurso + "'); GnossPeticionAjax('" + FichaDocumento.ListActions.UrlLoadGraph + "', dataPost, true).done(function(data){FinTraerDatosGrafoAJAX(data)});});");
                                }
                            }
                        </script>

                        @if (FichaDocumento.TypeDocument != ResourceModel.DocumentType.Semantico)
                        {
                            @Html.PartialView("_FichaDescripcion", FichaDocumento)
                        }

                        @if (Model.SemanticFrom != null && !Model.SemanticFrom.SemCmsDrawOverMenu)
                        {
                            @Html.PartialView("../Shared/SemCms/_GeneradorSemCms", Model.SemanticFrom);
                        }

                        @if (FichaDocumento.Graphs.Count > 0)
                        {
                        <div class="group grafo-relaciones" style="display:none">
                            <p class="group-title">Mapa Conceptual sobre @FichaDocumento.Title</p>
                            <a class="lanzarVentana" href="#">Ver grafo a pantalla completa</a>
                            <div id="divContGrafo"></div>
                            <div>
                                <div>
                                    <div class="leyendaGrafo" id="leyendaGrafo">
                                        <p class="presentacion">Este mapa de relaciones estÃ¡ construido utilizando los contenidos y la ontologÃ­a de DBpedia (Wikipedia semÃ¡ntica) y permite enriquecer los contenidos educativos de Didactalia, ofreciendo un uso educativo de Wikipedia, y vivecersa.</p>
                                        <ul>
                                            <li class="item01"><span></span>Recursos de Didactalia</li>
                                            <li class="item02"><span></span>Entidades relacionadas de Wikipedia</li>
                                            <li class="item03"><span></span>Definiciones de Wikipedia</li>
                                        </ul>
                                    <p>Esta pÃ¡gina contiene enlaces y contenidos de Wikipedia. Didactalia no puede garantizar que los recursos educativos de la comunidad no convoquen algÃºn <a style="text-decoration:underline" target="_blank" href="http://es.wikipedia.org/wiki/Wikipedia:Aviso_de_contenido">contenido ofensivo o inadecuado de Wikipedia</a>. En caso de existir alguno, Didactalia emprenderÃ¡ las acciones precisas para eliminarlo en el menor tiempo posible. Si detectan algÃºn contenido inapropiado puede comunicarse a <a style="text-decoration:underline" href="mailto: didactalia@didactalia.net">didactalia@didactalia.net</a>. Para mÃ¡s informaciÃ³n ver: <a style="text-decoration:underline" target="_blank" href="https://didactalia.net/comunidad/materialeducativo/condiciones-uso#Responsabilidades">Condiciones de Uso de Didactalia.</a></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }                        

                        @if (!Model.HideUtilsResource && Model.Resource.Actions.Edit)
                        {
                            <div class="group utils-2" id="contAutoresEditoresLectores">
                                @Html.PartialView("_FichaAutoresEditoresLectores", FichaDocumento)
                            </div>
                        }

                        @Html.PartialView("_FichaCategorias", FichaDocumento)

                        @Html.PartialView("_FichaEtiquetas", FichaDocumento)

                        @if (FichaDocumento.Version > 0)
                        {
                            <div class="group version">
                                <p>
                                    @Html.GetText("LISTARECURSOS", "VERSIONES")@FichaDocumento.Version
                                </p> 
                            </div>
                        }                        
                        @if (FichaDocumento.Licence != "")
                        {
                            <div class="group license">
                                <p class="licencia creativeCommonds">@Html.Raw(FichaDocumento.Licence)</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (FichaDocumento.Comments != null)
    {
        <div class="resource-comments">
            <div class="box comments" id="comments">
                <div class="commentsTop input-group">
                    <div class="comentariosLiteral">
                        <p>Comentar</p>
                    </div>  
                    <div class="totalComentarios">
                        <p class="what"><span class="icono"></span>@FichaDocumento.NumComments</p>
                    </div>              
                </div>
                @if (!IdentidadActual.IsGuestIdentity)
                {
                    if (FichaDocumento.AllowComments)
                    {
                        ViewBag.ListaJS.Add(ViewBag.BaseURL + "/ckeditor/ckeditor.js?v=" + ViewBag.Version);
                        ViewBag.ListaJS.Add(ViewBag.BaseURL + "/ckeditor/adapters/jquery.js?v=" + ViewBag.Version);


                        string urlFotoUsuario = "";
                        if (string.IsNullOrEmpty(perfil.Foto))
                        {
                            urlFotoUsuario = Html.GetBaseUrlStatic() + "/personalizacion/theme/resources/anonimo_peque.png";
                        }
                        else
                        {
                            urlFotoUsuario = ViewBag.BaseUrlContent + perfil.Foto;
                        }


                        string urlUsuario = "";
                        string nombreUsuario = perfil.Name;
                        
                        <div class="divEscribirComentario">
                            <div class="userImage">
                                <a class="userComment" href="@urlUsuario"><img src="@urlFotoUsuario"></a>
                            </div>
                            <div class="datosUsuario">
                                <a href="@urlUsuario" typeof="foaf:Person"><span property="foaf:name">@nombreUsuario</span></a>
                                <textarea class="cke comentarios" id="txtNuevoComentario_@FichaDocumento.Key" rows="2" cols="20"></textarea>
                                @{
                        string funcionComentario_CrearComentario = "Comentario_CrearComentario('" + FichaDocumento.ListActions.UrlCreateComment + "', '" + FichaDocumento.Key + "');"; 
                                }
                                <input type="button" class="text medium" value="@Html.GetText("COMMON", "ENVIAR") >" onclick="@funcionComentario_CrearComentario" />
                            </div>
                        </div>
                    }
                    else
                    {
                        <label><span>@Html.GetText("CONTROLESDOCUMENTACION", "COMENTARIOSBLOQUEADOS")</span></label>
                    }
                }
                else
                {   
                <div class="inicioSesionComentarios">
                    <p>@Html.GetText("CONTROLESDOCUMENTACION", "QUIERESCOMENTAR") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "HAZTEMIEMBRO")">@Html.GetText("COMMON", "REGISTRARSE")</a> @Html.GetText("PERFIL", "VISITANTEPERFILO") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "LOGIN")">@Html.GetText("COMINICIOLOGIN", "INICIASESION")</a></p>
                </div>
                }
                <div id="panComentarios">
                @foreach (CommentModel comentario in FichaDocumento.Comments)
                {
                    @Html.PartialView("_FichaComentario", comentario)
                }
                </div>
                @if (FichaDocumento.Comments.Count > 2)
                {
                <div class="desplegarComentarios">
                    <span class="literal">Ver todos<span class="icono"></span></span>
                </div>
                 
                }
            </div>
        </div>
    }
</div>
<div id="col01" class="col col-xs-12 col-md-3">
    @if (ViewBag.FormularioRegistro != null)
    {
        <div>
            @Html.PartialView("_FormularioRegistroShared", (AutenticationModel)(ViewBag.FormularioRegistro))
        </div>
    }
    <div id="panVinculadosInt">
        @Html.PartialView("_FichaVinculados", FichaDocumento)
    </div>
    @if (FichaDocumento.Gadgets != null && FichaDocumento.Gadgets.Count > 0)
    {
        <div id="divContPanGadgets" class="recursosGadgets">
            @foreach (GadgetModel gadget in ((List<GadgetModel>)FichaDocumento.Gadgets).OrderBy(gadget => gadget.Order))
            {
                @Html.PartialView("ControlesMVC/_FichaGadget", gadget)
            }
        </div>
    }
</div>

<div id="palco" class="palco @FichaDocumento.RdfType" style="display: none;">
    <div class="palcoHead">
        <div class="headRow01 input-group">
            <div class="corporativo btn btn-default btn-descubre input-group-btn" id="corporativo">
                <div class="content ">
                    <div class="logoCustomRIAM">
						<a href="@Comunidad.Url">                                
							<img style="height:21px;" src="@ViewBag.BaseUrlStatic/personalizacion/theme/resources/logo-didactalia-blanco-movil.png" title="@Comunidad.Name" alt="@Comunidad.Name" class="logoMovil" />
						</a>
					</div>
                </div>
            </div>
            <div class="webSiteTitle btn btn-default btn-descubre input-group-btn" id="webSiteTitle">
                <h2>
                    @if (string.IsNullOrEmpty(FichaDocumento.UrlDocument))
                    {
                        @FichaDocumento.Title
                    }
                    else
                    {
                        string claseEnviarAccGogAnac = "";
                        if (FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.Imagen || FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.FicheroServidor)
                        {
                            claseEnviarAccGogAnac = "class=\"linkDescargaFichero\"";
                        }

                        if (FichaDocumento.OpenInNewWindow)
                        {
                            @FichaDocumento.Title
                        }
                        else
                        {
                            @FichaDocumento.Title
                        }
                    }
                </h2>
            </div>
            <div class="closeButton btn btn-default btn-descubre input-group-btn" id="closeButton">
                <a href="#" class="cerrar">x</a>
            </div>            
        </div>
    </div>
    <div class="grafoContent"></div>
</div>
