@model AdministrarObjetosConocimientoViewModel

@{
    Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/administracion.css?v=" + Html.GetVersion());
}

<div class="content">
    <h1>@Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "TITULO")</h1>
    <div>
        <form autocomplete="off">
            @{
                string idiomas = "";
                
                foreach(string idiomaKey in Model.ListaIdiomas.Keys)
                {
                    idiomas += idiomaKey + "|" + Model.ListaIdiomas[idiomaKey] + "&&&";
                }
            }
            <input type="hidden" id="idiomasComunidad" value="@idiomas" />
            <input type="hidden" id="idiomaDefecto" value="@Model.IdiomaPorDefecto"/>
		    <p>
			    @Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "INFOTITULO")
		    </p>
            <input type="button" class="guardarTodo" value="@Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "GUARDARTODO")" />
            <div class="panAniadir">
                @Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "INFOADDFACETA")
			    <select id="ontology">
                    @foreach (string ontologia in Model.ListaOntologiasCom.Keys)
                    { 
                        if(!Model.ListaObjetosConocimiento.Any(oc => oc.Ontologia.ToLower().Equals(ontologia.ToLower())))
                        {
                            <option value="@ontologia">@Model.ListaOntologiasCom[ontologia]</option>
                        }
                    }
                </select>
                <input type="button" class="addObjetoConocimiento" value="@Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "ADDOBJETOCONOCIMIENTO")" />
            </div>
		    <ol class="table" id="sortable">
                @foreach (ObjetoConocimientoModel objetoConocimiento in Model.ListaObjetosConocimiento)
                {
                    @Html.PartialView("_EdicionObjetoConocimiento", objetoConocimiento);
                }
            </ol>
        </form>
    </div>
    <input type="button" class="guardarTodo" value="@Html.GetText("COMADMINOBJETOSCONOCIMIENTO", "GUARDARTODO")" />
</div>

<script type="text/javascript" src="@Html.GetBaseUrlStatic()/jsUnificar/jquery.ui.sortable.min.js?v=@Html.GetVersion()"></script>
<script type="text/javascript" src="@Html.GetBaseUrlStatic()/jsUnificar/jquery.ui.touch-punch.min.js?v=@Html.GetVersion()"></script>
<script type="text/javascript" src="@Html.GetBaseUrlStatic()/jsUnificar/jquery.ui.tooltip.js?v=@Html.GetVersion()"></script>
<script type="text/javascript" src="@Html.GetBaseUrlStatic()/jsNuevo/jquery.demo.js?v=@Html.GetVersion()"></script>
<script>
    var OperativaOrdenacion = {
        init: function () {
            this.config();
            this.engancharComportamiento();
        },
        config: function () {
            this.propiedades = $('.propiedadesSortable');
            return;
        },
        engancharComportamiento: function () {
            var that = this;
            that.propiedades.each(function () {
                $(this).sortable({
                    handle: 'span.handle.propiedad',
                    items: 'li.row.propiedad',
                    cancel: ".ui-state-disabled",
                    maxLevels: 1

                });
            });

            $('.header', that.propiedades).disableSelection();
            return;
        }
    }

    var OperativaAcciones = {
        init: function (panelID) {
            this.config(panelID);
            if (this.id == '') {
                this.engancharComportamiento();
            }
            this.engancharComportamientoObjetoConocimientos();
            this.engancharMultiIdioma();
        },
        config: function (panelID) {
            this.urlPagina = document.location.href;
            this.cargarIdiomas();
            this.id = '';

            if (typeof panelID != 'undefined' && panelID != '') {
                this.id = '#' + panelID + ' ';
            }
            return;
        },
        engancharMultiIdioma: function () {
            var that = this;
            if (that.ListaIdiomas.length > 1) {
                $(that.id + 'input[name="Name"]:not(:disabled)').each(function () {
                    var inputName = $(this);
                    that.montarMultidioma(inputName);

                    $('#texto_' + that.IdiomaPorDefecto, inputName.parent()).keyup(function () {
                        inputName.val($(this).val());
                        inputName.trigger('keyup');
                    }).blur(function () {
                        inputName.val($(this).val());
                        inputName.trigger('blur');
                    });
                });

                $(that.id + 'input[name="ShortNameOntology"]:not(:disabled)').each(function () {
                    var inputName = $(this);
                    that.montarMultidioma(inputName);

                    $('#texto_' + that.IdiomaPorDefecto, inputName.parent()).keyup(function () {
                        inputName.val($(this).val());
                        inputName.trigger('keyup');
                    }).blur(function () {
                        inputName.val($(this).val());
                        inputName.trigger('blur');
                    });
                });
                
                $(that.id + 'input[name="TabUrl"]:not(:disabled)').each(function () {
                    var inputUrl = $(this);
                    that.montarMultidioma(inputUrl);

                    $('#texto_' + that.IdiomaPorDefecto, inputUrl.parent()).blur(function () {
                        inputUrl.trigger('blur');
                    });
                });
                componenteTabulado.init();
            }
        },
        obtenerTextoYClaveDeIdioma: function (texto) {
            var that = this;
            var idioma = that.IdiomaPorDefecto;
            var textoIdioma = texto;
            if (textoIdioma.length > 3) {
                var indice = 3;
                var auxIdioma = textoIdioma.substr(textoIdioma.length - 3);
                if (auxIdioma[0] == '-' && textoIdioma.length > 6) {
                    indice = 6;
                    auxIdioma = textoIdioma.substr(textoIdioma.length - 6);
                }
                if (auxIdioma[0] == '@('@')') {
                    idioma = auxIdioma.substr(1);
                    textoIdioma = textoIdioma.substr(0, textoIdioma.length - indice);
                }
            }
            return { "key": idioma, "value": textoIdioma };
        },
        montarMultidioma: function (input) {
            var that = this;

            input.attr("type", "hidden");
            var textoMultiIdioma = input.val().split('|||')
            var listaTextos = [];
            $.each(textoMultiIdioma, function () {
                if (this != "") {
                    var objetoIdioma = that.obtenerTextoYClaveDeIdioma(this);
                    listaTextos.push(objetoIdioma);
                }
            });

            var htmlMultIdioma = '<div class=" block tabsGroup" id="edicion_multiidioma" ><div class=" acciones tabspresentation "><ul>';

            $.each(that.ListaIdiomas, function (id, idioma) {
                var key = idioma.key;
                var value = idioma.value;
                var esIdiomaPorDefecto = (key == that.IdiomaPorDefecto);
                htmlMultIdioma += '<li class="' + (esIdiomaPorDefecto ? 'active' : '') + '"><a rel="' + id + '" href="#">' + value + (esIdiomaPorDefecto ? ' *' : '') + '</a></li>';
            });

            htmlMultIdioma += '</ul></div>';

            $.each(that.ListaIdiomas, function (id, idioma) {
                var key = idioma.key;
                var value = idioma.value;
                var esIdiomaPorDefecto = (key == that.IdiomaPorDefecto);
                var textoIdioma = listaTextos.findValueByKey(key);
                if (textoIdioma == null || textoIdioma == '') {
                    if (key.indexOf('-') > 0) {
                        var keyAux = key.substr(0, key.indexOf('-'));
                        textoIdioma = listaTextos.findValueByKey(keyAux);
                    }
                    if (textoIdioma == null || textoIdioma == '') {
                        if (esIdiomaPorDefecto && listaTextos.length > 0) {
                            textoIdioma = listaTextos[0].value;
                        }
                        else {
                            textoIdioma = '';
                        }
                    }
                }
                htmlMultIdioma += '<div rel="' + id + '" class=" block " id="edicion_' + key + '" style="' + (esIdiomaPorDefecto ? '' : 'display: none;') + '"><p><input type="text" id="texto_' + key + '" class="text big" value="' + textoIdioma + '"></p></div>';
            });

            htmlMultIdioma += '</div>';

            input.before(htmlMultIdioma);
        },
        engancharComportamientoObjetoConocimientos: function () {
            var that = this;
            $(that.id + 'span.eliminar').click(function () {
                that.eliminarObjetoConocimiento($(this));
            });
            $(that.id + 'span.editar').click(function () {
                that.editarObjetoConocimiento($(this));
            });
            $(that.id + 'input[name="Name"]').keyup(function () {
                that.cambiarNombreObjetoConocimiento($(this));
            }).blur(function () {
                that.cambiarAuxNombreObjetoConocimiento($(this));
            });
            $(that.id + '.linkConfigurarSubtipos').click(function () {
                that.configurarSubtipos($(this));
            });
            $(that.id + '.addSubTipo').click(function () {
                that.anyadirSubtipo($(this));
            });
            $(that.id + '.addProperty').click(function () {
                that.anyadirPropiedad($(this));
            });
            $(that.id + 'span.tipo').each(function () {
                if ($(this).attr("title") != null && $(this).attr("title") != '') {
                    $(this).append("<span class='conToolTip' title='" + $(this).attr("title") + "' >?</span>");
                    $(this).removeAttr("title");
                }
            });

            $(that.id + '.conToolTip').tooltip();
            return;
        },
        anyadirPropiedad: function (botonAddPropiedad) {
            MostrarUpdateProgress();
            GnossPeticionAjax(
               this.urlPagina + '/add-property',
               null,
               true
           ).done(function (data) {
               var listaPropiedad = botonAddPropiedad.parent().find('ol.propiedadesSortable');

               listaPropiedad.append(data);
               var propiedadNuevo = listaPropiedad.children().last();

               var idPanel = propiedadNuevo.attr('id');
               OperativaAcciones.init(idPanel);

               propiedadNuevo.find('span.editar').trigger('click');
           }).fail(function (data) {
               console.log("ERROR =>" + data);
           }).always(function () {
               OcultarUpdateProgress();
           });
        },
        anyadirSubtipo: function (botonAddSubTipo) {
            MostrarUpdateProgress();
            GnossPeticionAjax(
               this.urlPagina + '/add-subtipo',
               null,
               true
           ).done(function (data) {
               var listaSubtipos = botonAddSubTipo.parent().find('ol.subtipos');

               listaSubtipos.append(data);
               var subtipoNuevo = listaSubtipos.children().last();

               var idPanel = subtipoNuevo.attr('id');
               OperativaAcciones.init(idPanel);

               subtipoNuevo.find('span.editar').trigger('click');
           }).fail(function (data) {
               console.log("ERROR =>" + data);
           }).always(function () {
               OcultarUpdateProgress();
           });
        },
        configurarSubtipos: function (botonEditar) {
            var fila = botonEditar.closest('.row');
            fila.find('.configurarSubtipos').show();
            botonEditar.parent().remove();
        },
        cargarIdiomas: function (bototnEditar) {
            var that = this;

            that.IdiomaPorDefecto = $('#idiomaDefecto').val();

            var idiomasComunidad = $('#idiomasComunidad').val().split('&&&');
            that.ListaIdiomas = []

            $.each(idiomasComunidad, function () {
                if (this != "") {
                    that.ListaIdiomas.push({ "key": this.split('|')[0], "value": this.split('|')[1] });
                }
            });
        },
        comprobarCamposVacios: function () {
            var that = this;
            var error = false;
            var inputsNombre = $('.row.propiedad:not(".ui-state-disabled") input[name="NombreProp"]');
            inputsNombre.each(function () {
                if ($(this).val() == "") {
                    that.mostrarErrorCampoVacio($(this));
                    error = true;
                }
            });
            var inputsNombre = $('.row.propiedad:not(".ui-state-disabled") input[name="PresentacionProp"]');
            inputsNombre.each(function () {
                if ($(this).val() == "") {
                    that.mostrarErrorCampoVacio($(this));
                    error = true;
                }
            });
            return error;
        },
        mostrarErrorCampoVacio: function (input) {
            var that = this;
            input.after("<span class=\"error\">El campo no puede estar vacio</span>");
            var fila = input.closest('.row');
            $('.panEdicion', fila).addClass('edit');
        },
        comprobarNombresVacios: function () {
            var that = this;
            var error = false;
            var inputsNombre = $('.row:not(".ui-state-disabled") input[name="Name"]:not(":disabled")');
            inputsNombre.each(function () {
                if (that.comprobarNombreVacio($(this))) {
                    error = true;
                }
            });
            return error;
        },
        comprobarNombresCortosVacios: function () {
            var that = this;
            var inputsNombre = $('.row:not(".ui-state-disabled") input[name="ShortNameOntology"]:not(":disabled")');
            inputsNombre.each(function () {
                that.comprobarNombreVacio($(this));
            });
            return false;
        },
        comprobarNamespacesVacios: function () {
            var that = this;
            var error = false;
            var inputsNombre = $('.row:not(".ui-state-disabled") input[name = "Namespace"]');
            inputsNombre.each(function () {
                if ($(this).val() == "") {
                    that.mostrarErrorCampoVacio($(this));
                    error = true;
                }
            });
            return error;
        },
        comprobarNombreVacio: function (inputName) {
            var that = this
            $('.error', inputName.parent()).remove();

            var panMultiIdioma = $('#edicion_multiidioma', inputName.parent());
            var listaTextos = [];
            if (that.ListaIdiomas.length > 1 && panMultiIdioma.length > 0) {
                var textoMultiIdioma = "";

                var textoIdiomaDefecto = panMultiIdioma.find('#edicion_' + that.IdiomaPorDefecto + ' input').val();
                if (textoIdiomaDefecto == null || textoIdiomaDefecto == "") {
                    that.mostrarErrorNombreVacio(inputName.closest('.row'));
                    return true;
                }

                $.each(that.ListaIdiomas, function () {
                    var idioma = this.key;
                    var textoIdioma = panMultiIdioma.find('#edicion_' + idioma + ' input').val();
                    if (textoIdioma == null || textoIdioma == "") {
                        textoIdioma = textoIdiomaDefecto;
                    }
                    else {
                        textoMultiIdioma += textoIdioma + "@("@")" + idioma + "|||";
                }
                    listaTextos.push({ "key": idioma, "value": textoIdioma });
                });
            inputName.val(textoMultiIdioma);
        }

            return false;
        },
        mostrarErrorNombreVacio: function (fila) {
            var that = this;
            var inputUrl = $('input[name = "Name"]', fila).first();
            inputUrl.after("<span class=\"error\">@Html.GetText("COMADMINPESTANYAS", "ERRORNOMBREVACIO", Model.ListaIdiomas[Model.IdiomaPorDefecto])</span>");
            $('.panEdicion', fila).addClass('edit');
        },
        cambiarNombreObjetoConocimiento: function (inputName) {
            var nombreObjetoConocimiento = inputName.val();
            var fila = inputName.closest('.row');
            var header = fila.children('.header');
            var nombreFila = header.find('.nombre');

            if (nombreObjetoConocimiento == '') {
                nombreFila.text(nombreFila.attr('aux'));
            }
            else {
                nombreFila.text(nombreObjetoConocimiento);
            }
        },
        cambiarAuxNombreObjetoConocimiento: function (inputName) {
            var that = this;

            $('.error', inputName.parent()).remove()

            var nombreObjetoConocimiento = inputName.val();
            var fila = inputName.closest('.row');
            var header = fila.children('.header');
            var nombreFila = header.find('.nombre');

            if (nombreObjetoConocimiento == '') {
                nombreFila.text(nombreFila.attr('aux'));
                //inputName.val(nombreFila.attr('aux'));
                that.mostrarErrorNombreVacio(fila);
            }
            else {
                nombreFila.text(nombreObjetoConocimiento);
                nombreFila.attr('aux', nombreObjetoConocimiento);
                //inputName.val(nombreObjetoConocimiento);
            }
        },
        engancharComportamiento: function () {
            var that = this;
            $('input.addObjetoConocimiento').click(function () {
                that.anyadirObjetoConocimiento();
            });
            $('input.guardarTodo').click(function () {
                that.guardarTodasObjetoConocimientos();
            });
            return;
        },
        deshacerEliminarObjetoConocimiento: function (botonDeshacer) {
            var fila = botonDeshacer.closest('.row');

            fila.removeClass('ui-state-disabled');

            var panEditar = fila.children('.panEdicion');
            panEditar.find('[name="TabEliminada"]').val('false');

            var panCabecera = fila.children('.header');
            panCabecera.removeClass('deleted');

            var deshacer = panCabecera.children('.deshacer');
            var eliminada = panCabecera.children('.eliminada');
            deshacer.remove();
            eliminada.remove();
        },
        eliminarObjetoConocimiento: function (botonEliminar) {
            var that = this;
            var fila = botonEliminar.closest('.row');
            var filas = fila.find('.row');

            fila.addClass('ui-state-disabled');
            filas.addClass('ui-state-disabled');

            var panelesEditar = fila.find('.panEdicion');
            panelesEditar.removeClass('edit');
            panelesEditar.find('[name="TabEliminada"]').val('true');

            var panelesCabecera = fila.find('.header:not(.deleted)');
            panelesCabecera.addClass('deleted');
            panelesCabecera.append('<span class="deshacer">@Html.GetText("COMADMINFACETAS", "DESHACER")</span>')
            panelesCabecera.prepend('<span class="eliminada">(@Html.GetText("COMADMINFACETAS", "ELIMINADA"))</span>')

            panelesCabecera.find('span.deshacer').click(function () {
                that.deshacerEliminarObjetoConocimiento($(this));
            });
        },
        editarObjetoConocimiento: function (botonEditar) {
            var fila = botonEditar.closest('.row');
            var panEditar = fila.children('.panEdicion');

            if (panEditar.hasClass('edit')) {
                panEditar.removeClass('edit');
            }
            else {
                panEditar.addClass('edit');
            }
        },
        anyadirObjetoConocimiento: function () {
            MostrarUpdateProgress();

            var params = {
                ontology: $('#ontology').val()
            }

            GnossPeticionAjax(
                this.urlPagina + '/new-oc',
                params,
                true
            ).done(function (data) {
                var ultimaObjetoConocimiento = $('#sortable').children().last();
                var panelEdicionUltimaObjetoConocimiento = ultimaObjetoConocimiento.children('.panEdicion');

                $('#sortable').append(data);
                var ObjetoConocimientoNueva = $('#sortable').children().last();
                var idPanel = ObjetoConocimientoNueva.attr('id');
                OperativaAcciones.init(idPanel);
                ObjetoConocimientoNueva.find('span.editar').trigger('click');
            }).fail(function (data) {
                console.log("ERROR =>" + data);
            }).always(function () {
                OcultarUpdateProgress();
            });
        },
        guardarTodasObjetoConocimientos: function () {
            var that = this;
            $('.ok.general').remove();
            $('.error').remove();
            if (!that.comprobarErroresGuardado()) {
                that.ListaObjetosConocimiento = {};
                var cont = 0;
                $('.row.ObjetoConocimiento').each(function () {
                    that.obtenerDatosObjetoConocimiento($(this), cont++);
                });
                that.guardar();
            }
            else {
                that.mostrarErrorGuardado();
            }
        },
        mostrarErrorGuardado: function () {
            $('input.guardarTodo').before('<div class="error general">@Html.GetText("COMADMINPESTANYAS", "GUARDARERROR")</div>');
        },
        comprobarErroresGuardado: function () {
            var that = this;
            var error = false;
            if (that.comprobarNombresVacios()) {
                error = true;
            }
            if (!error && that.comprobarNamespacesVacios()) {
                error = true;
            }
            if (!error && that.comprobarCamposVacios()) {
                error = true;
            }

            return error;
        },
        guardar: function () {
            var that = this;

            MostrarUpdateProgress();
            GnossPeticionAjax(
                that.urlPagina + '/save',
                that.ListaObjetosConocimiento,
                true
            ).done(function (data) {
                that.mostrarGuardadoOK();
            }).fail(function (data) {
                var error = data.split('|||');
                that.mostrarErrorGuardado();
                if (error[0] == "NOMBRE VACIO") {
                    that.mostrarErrorNombreVacio($('#' + error[1]));
                }
            }).always(function () {
                OcultarUpdateProgress();
            });
        },
        mostrarGuardadoOK: function () {
            $('input.guardarTodo').before('<div class="ok general">@Html.GetText("COMADMINPESTANYAS", "GUARDAROK")</div>');
        },
        obtenerDatosObjetoConocimiento: function (fila, num) {
            var that = this;

            var id = fila.attr('id');

            var panelEdicion = fila.children('.panEdicion');
            var prefijoClave = 'ListaObjetosConocimiento[' + num + ']';

            that.ListaObjetosConocimiento[prefijoClave + '.Ontologia'] = fila.attr('id');
            that.ListaObjetosConocimiento[prefijoClave + '.Deleted'] = panelEdicion.find('[name="TabEliminada"]').val();
            that.ListaObjetosConocimiento[prefijoClave + '.Name'] = panelEdicion.find('[name="Name"]').val();
            that.ListaObjetosConocimiento[prefijoClave + '.ShortNameOntology'] = panelEdicion.find('[name="ShortNameOntology"]').val();
            that.ListaObjetosConocimiento[prefijoClave + '.Namespace'] = panelEdicion.find('[name="Namespace"]').val();
            that.ListaObjetosConocimiento[prefijoClave + '.NamespaceExtra'] = panelEdicion.find('[name="NamespaceExtra"]').val();
            that.ListaObjetosConocimiento[prefijoClave + '.NombreTesauroExclusivo'] = panelEdicion.find('[name="NombreTesauroExclusivo"]').val();

            that.ListaObjetosConocimiento[prefijoClave + '.CachearDatosSemanticos'] = $('[name="CachearDatosSemanticos"]', panelEdicion).is(':checked');
            that.ListaObjetosConocimiento[prefijoClave + '.EsBuscable'] = $('[name="EsBuscable"]', panelEdicion).is(':checked');

            var panelSubTipos = panelEdicion.find('.configurarSubtipos');
            var numSubTipo = 0;
            $('.row.subTipo', panelSubTipos).each(function () {
                var panSubTipo = $(this).children('.panEdicion');

                var prefijoSubTipoClave = prefijoClave + '.Subtipos[' + numSubTipo + ']';

                that.ListaObjetosConocimiento[prefijoSubTipoClave + '.Key'] = panSubTipo.find('[name="Tipo"]').val();
                that.ListaObjetosConocimiento[prefijoSubTipoClave + '.Value'] = panSubTipo.find('[name="Nombre"]').val();
                numSubTipo++;
            });


            var panelPresentacionListado = panelEdicion.find('.PresentacionListado');
            var prefijoPresentacionListadoClave = prefijoClave + '.PresentacionListado';

            var numPropListado = 0;
            $('.row.propiedad:not(.ui-state-disabled)', panelPresentacionListado).each(function () {
                var panPropiedadListado = $(this).children('.panEdicion');

                var prefijoPropiedadesListadoClave = prefijoPresentacionListadoClave + '.ListaPropiedades[' + numPropListado + ']';

                that.ListaObjetosConocimiento[prefijoPropiedadesListadoClave + '.Orden'] = numPropListado;
                that.ListaObjetosConocimiento[prefijoPropiedadesListadoClave + '.Propiedad'] = panPropiedadListado.find('[name="Nombre"]').val();
                that.ListaObjetosConocimiento[prefijoPropiedadesListadoClave + '.Presentacion'] = encodeURIComponent(panPropiedadListado.find('[name="Presentacion"]').val());
                numPropListado++;
            });

            that.ListaObjetosConocimiento[prefijoPresentacionListadoClave + '.MostrarDescripcion'] = panelPresentacionListado.find('[name="MostrarDescripcion"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionListadoClave + '.MostrarPublicador'] = panelPresentacionListado.find('[name="MostrarPublicador"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionListadoClave + '.MostrarEtiquetas'] = panelPresentacionListado.find('[name="MostrarEtiquetas"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionListadoClave + '.MostrarCategorias'] = panelPresentacionListado.find('[name="MostrarCategorias"]').is(':checked');


            var panelPresentacionMosaico = panelEdicion.find('.PresentacionMosaico');
            var prefijoPresentacionMosaicoClave = prefijoClave + '.PresentacionMosaico';

            var numPropMosaico = 0;
            $('.row.propiedad:not(.ui-state-disabled)', panelPresentacionMosaico).each(function () {
                var panPropiedadMosaico = $(this).children('.panEdicion');

                var prefijoPropiedadesMosaicoClave = prefijoPresentacionMosaicoClave + '.ListaPropiedades[' + numPropMosaico + ']';

                that.ListaObjetosConocimiento[prefijoPropiedadesMosaicoClave + '.Orden'] = numPropMosaico;
                that.ListaObjetosConocimiento[prefijoPropiedadesMosaicoClave + '.Propiedad'] = panPropiedadMosaico.find('[name="Nombre"]').val();
                that.ListaObjetosConocimiento[prefijoPropiedadesMosaicoClave + '.Presentacion'] = encodeURIComponent(panPropiedadMosaico.find('[name="Presentacion"]').val());
                numPropMosaico++;
            });

            that.ListaObjetosConocimiento[prefijoPresentacionMosaicoClave + '.MostrarDescripcion'] = panelPresentacionMosaico.find('[name="MostrarDescripcion"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMosaicoClave + '.MostrarPublicador'] = panelPresentacionMosaico.find('[name="MostrarPublicador"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMosaicoClave + '.MostrarEtiquetas'] = panelPresentacionMosaico.find('[name="MostrarEtiquetas"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMosaicoClave + '.MostrarCategorias'] = panelPresentacionMosaico.find('[name="MostrarCategorias"]').is(':checked');


            var panelPresentacionMapa = panelEdicion.find('.PresentacionMapa');
            var prefijoPresentacionMapaClave = prefijoClave + '.PresentacionMapa';

            var numPropMapa = 0;
            $('.row.propiedad:not(.ui-state-disabled)', panelPresentacionMapa).each(function () {
                var panPropiedadMapa = $(this).children('.panEdicion');

                var prefijoPropiedadesMapaClave = prefijoPresentacionMapaClave + '.ListaPropiedades[' + numPropMapa + ']';

                that.ListaObjetosConocimiento[prefijoPropiedadesMapaClave + '.Orden'] = numPropMapa;
                that.ListaObjetosConocimiento[prefijoPropiedadesMapaClave + '.Propiedad'] = panPropiedadMapa.find('[name="Nombre"]').val();
                that.ListaObjetosConocimiento[prefijoPropiedadesMapaClave + '.Presentacion'] = encodeURIComponent(panPropiedadMapa.find('[name="Presentacion"]').val());
                numPropMapa++;
            });

            that.ListaObjetosConocimiento[prefijoPresentacionMapaClave + '.MostrarDescripcion'] = panelPresentacionMapa.find('[name="MostrarDescripcion"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMapaClave + '.MostrarPublicador'] = panelPresentacionMapa.find('[name="MostrarPublicador"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMapaClave + '.MostrarEtiquetas'] = panelPresentacionMapa.find('[name="MostrarEtiquetas"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionMapaClave + '.MostrarCategorias'] = panelPresentacionMapa.find('[name="MostrarCategorias"]').is(':checked');


            var panelPresentacionRelacionados = panelEdicion.find('.PresentacionRelacionados');
            var prefijoPresentacionRelacionadosClave = prefijoClave + '.PresentacionRelacionados';

            var numPropRelacionados = 0;
            $('.row.propiedad:not(.ui-state-disabled)', panelPresentacionRelacionados).each(function () {
                var panPropiedadRelacionados = $(this).children('.panEdicion');

                var prefijoPropiedadesRelacionadosClave = prefijoPresentacionRelacionadosClave + '.ListaPropiedades[' + numPropRelacionados + ']';

                that.ListaObjetosConocimiento[prefijoPropiedadesRelacionadosClave + '.Orden'] = numPropRelacionados;
                that.ListaObjetosConocimiento[prefijoPropiedadesRelacionadosClave + '.Propiedad'] = panPropiedadRelacionados.find('[name="Nombre"]').val();
                that.ListaObjetosConocimiento[prefijoPropiedadesRelacionadosClave + '.Presentacion'] = encodeURIComponent(panPropiedadRelacionados.find('[name="Presentacion"]').val());
                numPropRelacionados++;
            });

            that.ListaObjetosConocimiento[prefijoPresentacionRelacionadosClave + '.MostrarDescripcion'] = panelPresentacionRelacionados.find('[name="MostrarDescripcion"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionRelacionadosClave + '.MostrarPublicador'] = panelPresentacionRelacionados.find('[name="MostrarPublicador"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionRelacionadosClave + '.MostrarEtiquetas'] = panelPresentacionRelacionados.find('[name="MostrarEtiquetas"]').is(':checked');
            that.ListaObjetosConocimiento[prefijoPresentacionRelacionadosClave + '.MostrarCategorias'] = panelPresentacionRelacionados.find('[name="MostrarCategorias"]').is(':checked');
        }
    }

$(document).ready(function () {
    Array.prototype.findValueByKey = function (key) {
        var resultado = $.grep(this, function (array) {
            return array.key == key;
        });

        if (resultado[0] != null) {
            return resultado[0].value;
        }

        return null;
    };

    OperativaAcciones.init();
    OperativaOrdenacion.init();
});

</script>

<style>
            
    ol.table li.row section.panEdicion ol.subtipos {
        border: 0;
        padding: 0;
    }
    ol#sortable li.row section.panEdicion ol.subtipos li.row {
        padding-top: 0;
        margin-bottom: 0;
        margin-left: 20px;
       border-bottom: 0;
    }
    ol#sortable li.row section.panEdicion ol.subtipos li.row:last-of-type {
        border-bottom: 1px solid;
    }
    ol.subtipos li.row.subTipo section.panEdicion{
        width: 760px;
    }
    ol.subtipos li.row.subTipo section.panEdicion p {
        width: 730px;
    }
    ol.subtipos li.row.subTipo section.panEdicion .bloque {
       margin-bottom: 0;
       border-bottom: 0;
    } 
    ol.subtipos li.row.subTipo input[type="text"], 
    ol.subtipos li.row.subTipo textarea {
        width: 520px;
    }
    
    ol#sortable li.row section.panEdicion input.addProperty, 
    ol#sortable li.row section.panEdicion input.addSubTipo{
        margin-left: 20px; 
        margin-bottom: 15px;
    }

    ol#sortable li.row section.panEdicion ol.propiedadesSortable{
        margin-left: 20px; 
        padding-left: 0;
    }
    ol#sortable li.row section.panEdicion ol.propiedadesSortable li{
        border-bottom: 1px solid;
    }
    ol#sortable li.row section.panEdicion ol.propiedadesSortable section.panEdicion {
        width: 739px;
    }
    ol#sortable li.row section.panEdicion ol.propiedadesSortable section.panEdicion p {
        width: 720px;
    }
    ol#sortable li.row section.panEdicion ol.propiedadesSortable section.panEdicion .tipo {
        width: 170px;        
    }
    
</style>
