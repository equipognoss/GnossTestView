@model RegisterDataViewModel

@{
    CommunityModel Comunidad = Html.GetComunidad();
}

<form method="post" id="formDatosRegistro">
    <div class="fieldset fieldset01 formularioRegistroUsuarios">
        <fieldset class="smallLabels">
            <legend class="oculto">Información de la cuenta</legend>
            <div class="fieldsetContent">
                <p class="infoCamposObligatorios">
                    (* todos los campos obligatorios)
                </p>
                <span id="contenedorFoto">
                    <p rel="subirFoto" class="wrapImagen customizeFileUpload">
                        <span>
                            @{
                                string urlFoto = Html.GetBaseUrlContent() + "/imagenes/personas/anonimo_grande.png";
                                if (!string.IsNullOrEmpty(Model.Foto))
                                {
                                    urlFoto = Html.GetBaseUrlContent() + "/" + Model.Foto;
                                }
                            }
                            <a href="#" onclick="ImagenClick();">
                                <img id="imgFotoRegistro" style="border-width: 0px;" alt="Imagen Usuario" src="@urlFoto" />
                            </a>
                        </span>
                        <a title="Cambiar imagen" onclick="ImagenClick();" class="cambiarFoto">Cambiar imagen</a>
                        <span class="ko" id="lblErrorImagen"></span>
                    </p>
                </span>
                <div style="display: none;" class="subirRecReg">
                    <input type="file" accept="image/*" style="width: 355px;" id="fuFotoPerfil" />
                    @*                    <input type="hidden" id="txtFotoPerfil" />*@
                </div>
                <p class="wrapNombre">
                    <label class="datoObligatorio">Nombre:</label>
                    <input type="text" disabled="disabled" class="text big" value="@Model.Name" />
                </p>
                <p class="wrapApellidos">
                    <label class="datoObligatorio">Apellidos:</label>
                    <input type="text" disabled="disabled" class="text big" value="@Model.LastName" />
                </p>
                @if (Model.AskLocation)
                {
                    <p class="wrapPoblacion">
                        <label id="lblPoblacion" class="datoObligatorio">Localidad:</label>
                        <input type="text" placeholder="Localidad *" class="text big datoObligatorio" @Html.Raw((!string.IsNullOrEmpty(Model.Location)?"disabled=\"disabled\" value=\"" + Model.Location + "\"":"name=\"txtPoblacion\" id=\"txtPoblacion\"")) />
                    </p>
                }
                @if (Model.AskCountry)
                {
                    <p>
                        <label id="lblPais" class="datoObligatorio">País:</label>
                        <select style="max-width: 230px" id="ddlPais" name="ddlPais" class="dato select medium" @Html.Raw((Model.CountryID != null && !Model.CountryID.Equals(Guid.Empty)?"disabled=\"disabled\"":""))>
                            <option value="@Guid.Empty">@Html.GetText("REGISTRO", "SINESPECIFICAR")</option>
                            @{
                                Guid paisSeleccionadoID = Model.CountryDefaultID;
                                if (Model.CountryID != Guid.Empty)
                                {
                                    paisSeleccionadoID = Model.CountryID;
                                }
                            }
                            @foreach (Guid paisID in Model.CountryList.Keys)
                            { 
                                <option value="@paisID" @Html.Raw((paisSeleccionadoID == paisID?"selected=\"selected\"":""))>@Model.CountryList[paisID]</option>
                            }
                        </select>
                    </p>
                }
                @if (Model.AskRegion)
                {
                    <p>
                        @{bool visibleSelect = false;}
                        <label for="ddlProvincia" id="lblProvincia" class="datoObligatorio">@Html.GetText("REGISTRO", "PROVINCIASIMPLE")</label>
                        @if (Model.CountryID != null && Model.CountryID != Guid.Empty && Model.CountryList[Model.CountryID].Equals("España"))
                        {
                            visibleSelect = true;
                        }
                        <select id="ddlProvincia" name="ddlProvincia" class="select medium" @(visibleSelect ? "style=max-width:230px;display:block" : "style=max-width:230px;display:none") @if (Model.RegionID != null && !Model.RegionID.Equals(Guid.Empty)){<text>disabled="disabled"</text>}>
                            <option value="@Guid.Empty">@Html.GetText("REGISTRO", "SINESPECIFICAR")</option>
                            @foreach (Guid provinciaID in Model.RegionList.Keys)
                            { 
                                <option value="@provinciaID" @if (Model.RegionID == provinciaID)
                                                        {<text>selected="selected" disabled="disabled"</text>}>@Model.RegionList[provinciaID]</option>
                            }
                        </select>
                        <input type="text" class="text medium" id="txtProvincia" name="txtProvincia" @(visibleSelect ? "style=display:none" : "style=display:block") @if (Model.RegionID != null && Model.RegionID.Equals(Guid.Empty) && !string.IsNullOrEmpty(Model.Region))
                                                                                                                                                                     {<text>disabled="disabled" value="@Model.Region"</text>} />
                    </p>
                }
                @if (Model.AskGender)
                {
                    <p>
                        <label for="ddlSexo" class="datoObligatorio" id="lblSexo"><span>@Html.GetText("REGISTRO", "SEXO")</span></label>
                        <select id="ddlSexo" class="text small dato" name="ddlSexo" @if (Model.Gender == "H" || Model.Gender == "M"){<text>disabled="disabled"</text>}>
	                        <option  value="0"  @if (Model.Gender == "0"){<text>selected="selected"</text>}>@Html.GetText("REGISTRO", "SINESPECIFICAR")</option>
                            <option  value="H" @if (Model.Gender == "H"){<text>selected="selected"</text>}>@Html.GetText("REGISTRO", "HOMBRE")</option>
                            <option  value="M" @if (Model.Gender == "M"){<text>selected="selected"</text>}>@Html.GetText("REGISTRO", "MUJER")</option>
                        </select>
                    </p>
                }

                @if (Model.AdditionalFields != null && Model.AdditionalFields.Count > 0)
                {
                    <div id="panCamposConfigurablesProyecto">
                        @foreach (AdditionalFieldAutentication campoExtra in Model.AdditionalFields)
                        {                        
                            <p>
                                <label for="@campoExtra.FieldName" @if (campoExtra.Required)
                                                                   { <text>class="datoObligatorio"</text> }>@campoExtra.Title</label>
                                @if (campoExtra.Options != null && campoExtra.Options.Count > 0)
                                { 
                                    <select name="@campoExtra.FieldName" id="@campoExtra.FieldName" class="dato select medium @campoExtra.FieldName">
                                        <option value="@Guid.Empty">@Html.GetText("REGISTRO", "SINESPECIFICAR")</option>
                                        @foreach (Guid idCampo in campoExtra.Options.Keys)
                                        {
                                            bool selected = campoExtra.FieldValue == idCampo.ToString();
                                            <option @if (selected)
                                                    {<text>selected="selected"</text>} value="@idCampo">@campoExtra.Options[idCampo]</option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    string claseInput = "text medium";
                                    if (campoExtra.AutoCompleted)
                                    {
                                        claseInput += " txtBusqueda autocompletar " + campoExtra.FieldName;
                                    }
                                    <input type="text" class="@claseInput" id="@campoExtra.FieldName" name="@campoExtra.FieldName" @if (campoExtra.FieldValue != null)
                                                                                                                                   {<text>value="@campoExtra.FieldValue"</text>}/>
                                
                                    if (campoExtra.AutoCompleted)
                                    {
                                        string inputHack = campoExtra.FieldName + "hack";
                                        <input type="hidden" id="@inputHack" class="@inputHack" />
                                    }
                                }
                            </p>
                        }
                    </div>
                }

                <div id="divContenedorError">
                </div>
            </div>
        </fieldset>
    </div>
    @if (Model.IsSearched != null || Model.IsExternalSearched != null)
    {
        <div class="fieldset fieldset02">
            <fieldset>
                <legend>
                    @if (Html.GetNombreProyectoEcosistema().Contains("GNOSS"))
                    {
                        <strong class="logognoss">GNOSS</strong>
                    }
                    @Html.GetText("REGISTRO", "PORQUEPRIVACIDAD", Html.GetNombreProyectoEcosistema())
                </legend>
                <div class="fieldsetContent">
                    <ul class="radioList">
                        @if (Model.IsSearched != null)
                        {
                            <li>
                                <input type="checkbox" name="chkListarPerfil" id="chkListarPerfil" @if (Model.IsSearched.Value)
                                                                                                   {<text>checked="checked"</text>} />
                                <label for="chkListarPerfil">@Html.GetText("REGISTRO", "LISTARPERFILCORTO", Html.GetNombreProyectoEcosistema())</label>
                            </li>
                        }
                        @if (Model.IsExternalSearched != null)
                        {
                            <li>
                                <input type="checkbox" name="chkListarPerfilExterno" id="chkListarPerfilExterno"@if (Model.IsExternalSearched.Value)
                                                                                                                {<text>checked="checked"</text>} />
                                <label for="chkListarPerfilExterno">@Html.GetText("REGISTRO", "LISTARPERFILEXTERNOSCORTO")</label>
                            </li>
                        }
                        <li>
                            <em class="help ">
                                <a onclick="javascript:MostrarVisibilidadPerfil();" style="cursor: pointer;">
                                    @Html.GetText("REGISTRO", "TITULOINFOVISIBILIDADPERFIL")
                                </a>
                            </em>
                        </li>
                    </ul>
                </div>
                <div style="display: none;" id="despleRegUp">
                    <div style="display: none;" class="stateShowForm" id="panels">
                        <div class="loading" id="loading">
                            <p>Cargando formulario, un momento por favor</p>
                        </div>
                        <div id="menssages">
                            <div class="ok"></div>
                            <div class="ko"></div>
                        </div>
                        <div class="box form activeForm" id="action">
                            <div id="despleRegUpInt"></div>
                        </div>
                        <div class="box form activeForm" id="aux_despleRegUpInt"></div>
                        <p class="cerrar">
                            <a onclick="CerrarPanelAccion('despleRegUp')" title="cerrar formulario">cerrar x</a>
                        </p>
                    </div>
                </div>
                <div class="oculto">
                    <div id="panVisibilidadPerfil">
                        <fieldset>
                            <legend>
                                <span id="lblTituloInfoVisiblePerfil">@MvcHtmlString.Create(Html.GetText("INFOVISIBILIDADPERFIL", "TITULO"))</span>
                            </legend>
                        </fieldset>
                        <fieldset id="lblInfoVisibilidadPerfil">
                            @MvcHtmlString.Create(Html.GetText("INFOVISIBILIDADPERFIL", "INFO"))
                        </fieldset>
                        <p>
                            <input type="button" value="@Html.GetText("COMMON", "ACEPTAR")" onclick="CerrarPanelAccion('despleRegUp')" />
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>
    }
    <div class="fieldset actionButtons">
        <fieldset>
            <p>
                <input type="hidden" name="paginaOriginal" value="@Model.ReferrerPage"/>
                <input type="hidden" name="paginaDatos" value="true" />
                <input type="hidden" name="tienePaginaDatosRegistro" value="@Model.TabData.ToString().ToLower()" />
                <input type="submit" onclick="if (ComprobarDatos()) { return false; }" class="submit principal" value="CONTINUAR" />
            </p>
        </fieldset>
    </div>
</form>


<script type="text/javascript">
    $(document).ready(function () {
        @Html.PartialView("ControlesMVC/_AutoCompletarCampoExtra", Model.AdditionalFields);
        $('#ddlPais').change(function () {
            if ($('#ddlPais option:selected')[0].text == 'España') {
                $('#ddlProvincia').show().addClass('inlineBlockProv');
                $('#txtProvincia').hide().removeClass('inlineBlockProv');
            }
            else {
                $('#ddlProvincia').hide().removeClass('inlineBlockProv');
                $('#txtProvincia').show().addClass('inlineBlockProv');
            }
        });
    });


    function ComprobarDatos() {
        var error = "";

        @if (Model.CountryList != null && Model.CountryList.Count > 0)
        {
            if (string.IsNullOrEmpty(Model.Location))
            {
                <text>error += AgregarErrorReg(error, ValidarPoblacionOrg('txtPoblacion', 'lblPoblacion'));</text>
            }
            <text>error += AgregarErrorReg(error, ValidarPais('ddlPais', 'lblPais'));</text>
        }

        error += RecogerDatosExtra();

        if (error.length > 0) {
            if (error.length > 0) {
                crearError(error, '#divContenedorError', false);
            }
            else {
                $('#divContenedorError').html('');
            }
            return true;
        } else {
            $('#divContenedorError').html('');
            return false;
        }
    }

    function RecogerDatosExtra() {
        var error = '';
        $('#panCamposConfigurablesProyecto label[title=\'campo obligatorio\']').each(function () {
            var label = $(this);
            var campo = $(this).next();
            if (campo.is('select')) {
                error += AgregarErrorReg(error, ValidarCampoSelectObligatorio(campo, label));
            }
            else {
                error += AgregarErrorReg(error, ValidarCampoObligatorio(campo, label));
            }
        });
        return error;
    }

    function MostrarVisibilidadPerfil() {
        MostrarPanelAccionDesp('despleRegUp', $('#panVisibilidadPerfil').html());
        return false;
    }

    function ImagenClick() {
        $('#fuFotoPerfil').trigger('click');
    }

    $("#fuFotoPerfil").change(function () {
        $('#lblErrorImagen').html('');

        var data = new FormData();
        var files = $("#fuFotoPerfil").get(0).files;
        if (files.length > 0) {
            data.append("ImagenRegistroUsuario", files[0]);
        }
        $.ajax({
            url: document.location.href,
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {
                //code after success
                if (response.indexOf('imagenes/') === 0) {
                    $('#imgFotoRegistro').attr('src', '@Html.GetBaseUrlContent()' + '/' + response);
                }
                else {
                    $('#lblErrorImagen').html(response);
                }
            },
            error: function (er) {
                $('#lblErrorImagen').html(er.statusText);
            }

        });
    });


</script>
