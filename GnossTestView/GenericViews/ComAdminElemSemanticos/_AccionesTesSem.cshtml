@model ComAdminSemanticElemModel

@{
    string bkUrlSoruce = Model.SemanticThesaurus.OntologyUrl + "|" + Model.SemanticThesaurus.SourceSemanticThesaurus;
}

<div id="updPanCrearCategoria">
    <div id="panCrearCategoria" style="display: none" class="box">
        <div id="panCrearCategoriaCategoriaInterior" class="fieldset">
            <fieldset class="labels">
                <div class="fieldsetContent">
                    <p>
                        @Html.GetText("COMADMINCATEGORIAS", "CREAREN")
                        <select id="cmbCrearCategoriaEn">
                            @foreach (string categoriaID in Model.SemanticThesaurus.ParentCategoriesForCreateNewsCategories.Keys)
                            {
                                <option value="@categoriaID">@Model.SemanticThesaurus.ParentCategoriesForCreateNewsCategories[categoriaID]</option>
                            }
                        </select>
                    </p>
                    <p>
                        @Html.GetText("COMADMIN", "IDENTIFICADOR")
                        <input type="text" id="txtIdentificacionCreacion" />
                    </p>
                    <p>
                        @if (Model.SemanticThesaurus.SemThesaurusLanguajes == null || Model.SemanticThesaurus.SemThesaurusLanguajes.Count == 0)
                        {
                            @Html.GetText("COMADMINCATEGORIAS", "NOMBRE")
                            <input type="text" id="txtNombreCatPadreCreacion" />
                        }
                        else
                        {
                            <br />
                            @Html.GetText("COMADMINCATEGORIAS", "NOMBRE")
                            foreach (string idioma in Model.SemanticThesaurus.SemThesaurusLanguajes.Keys)
                            {
                                <label>@Model.SemanticThesaurus.SemThesaurusLanguajes[idioma]</label>
                                <input type="text" class="txtNombreCatPadreCreacion @idioma" />
                                <br />
                            }
                        }
                    </p>
                    @if (Model.SemanticThesaurus.ThesaurusEditorModel.ExtraPropertiesCategories.Count > 0)
                    {
                        <div class="propTesSemExtra">
                            <strong>@Html.GetText("COMADMINCATEGORIAS", "PROPSEXTRA")</strong>
                            @foreach (string nomPropExtra in Model.SemanticThesaurus.ThesaurusEditorModel.ExtraPropertiesCategories.Keys)
                            {
                                Es.Riam.Semantica.OWL.Propiedad propiedad = Model.SemanticThesaurus.ThesaurusEditorModel.ExtraPropertiesCategories[nomPropExtra];
                                //string idControl = "txtExtraCat_" + propiedad.NombreGeneracionIDs;
                                string posibleNombrePropiedad = propiedad.EspecifPropiedad.NombrePropiedad(false);

                                if (posibleNombrePropiedad == null)
                                {
                                posibleNombrePropiedad = nomPropExtra;
                                }

                                <p>
                                    
                                    @if (propiedad.Tipo == Es.Riam.Semantica.OWL.TipoPropiedad.ObjectProperty || Model.SemanticThesaurus.SemThesaurusLanguajes == null || Model.SemanticThesaurus.SemThesaurusLanguajes.Count == 0)
                                    {
                                        string objProp = "";
                                        string id = "ck_" + Guid.NewGuid().ToString();

                                        if (propiedad.Tipo == Es.Riam.Semantica.OWL.TipoPropiedad.ObjectProperty)
                                        {
                                            objProp = "objProp=\"true\"";
                                        }

                                        <label>@posibleNombrePropiedad</label>

                                        if (propiedad.Tipo != Es.Riam.Semantica.OWL.TipoPropiedad.ObjectProperty && propiedad.EspecifPropiedad.TipoCampo == Es.Riam.Semantica.Plantillas.TipoCampoOntologia.Tiny)
                                        {
                                            <textarea id="@id" type="text" class="txtExtraCat cke recursos" prop="@propiedad.Nombre"></textarea>
                                        }
                                        else
                                        {
                                            <input type="text" class="txtExtraCat" prop="@propiedad.Nombre" @Html.Raw(objProp) />
                                        }
                                    }
                                    else
                                    {
                                        <br />
                                        <label>@posibleNombrePropiedad</label>
                                        foreach (string idioma in Model.SemanticThesaurus.SemThesaurusLanguajes.Keys)
                                        {
                                            string id = "ck_" + Guid.NewGuid().ToString();
                                            <label>@Model.SemanticThesaurus.SemThesaurusLanguajes[idioma]</label>
                                            if (propiedad.EspecifPropiedad.TipoCampo == Es.Riam.Semantica.Plantillas.TipoCampoOntologia.Tiny)
                                            {
                                                <textarea id="@id" type="text" class="txtExtraCat cke recursos" prop="@propiedad.Nombre" lang="@idioma"></textarea>
                                            }
                                            else
                                            {
                                                <input type="text" class="txtExtraCat" prop="@propiedad.Nombre" lang="@idioma" />
                                            }
                                            <br />
                                        }
                                    }
                                </p>
                            }
                        </div>
                    }
                    <p>
                        <input id="lbCrearCategoria" class="submit" type="button" value="@Html.GetText("COMADMINCATEGORIAS", "CREAR")" />
                    </p>
                </div>
            </fieldset>
        </div>
    </div>
</div>
<div id="updPanCambiarNombre">
    <div id="panCambiarNombreCategoria" style="display: none" class="box">
        <div id="panCambiarNombreCategoriaInterior" class="fieldset">
            <fieldset class="labels">
                <div class="fieldsetContent">
                    <p>
                        @Html.GetText("COMADMINCATEGORIAS", "RENOMBRARCAT")
                        <span ID="lblNombreAntiguoCat"></span>
                        @Html.GetText("COMADMINCATEGORIAS", "RENOMBRARCATA")   
                    </p>                                    
                    <p>
                        @if (Model.SemanticThesaurus.SemThesaurusLanguajes == null || Model.SemanticThesaurus.SemThesaurusLanguajes.Count == 0)
                        {
                            <input type="text" id="txtNuevoNombre" />
                        }
                        else
                        {
                            <br />
                            @Html.GetText("COMADMINCATEGORIAS", "NOMBRE")
                            foreach (string idioma in Model.SemanticThesaurus.SemThesaurusLanguajes.Keys)
                            {
                                <label>@Model.SemanticThesaurus.SemThesaurusLanguajes[idioma]</label>
                                <input type="text" class="txtNuevoNombre @idioma" />
                                <br />
                            }
                        }
                        <input id="lbCambiarNombreCategoria" class="submit" type="button" value="@Html.GetText("COMADMINCATEGORIAS", "RENOMBRAR")"/>
                    </p>
                </div>   
            </fieldset>
        </div>
    </div>
</div>
<div id="updMoverCategorias">
    @if (Model.SemanticThesaurus.CategoryNamesToMove != null && Model.SemanticThesaurus.CategoryNamesToMove.Count > 0)
    {
        <div id="panMoverCategoria" style="display: none" class="box">
            <div id="panMoverCategoriaInterior" class="fieldset">
                <fieldset class="labels">
                    <div class="fieldsetContent">
                        <p>
                            @if (Model.SemanticThesaurus.CategoryNamesToMove.Count == 1)
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "MOVERCATTEXT")
                            }
                            else
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "MOVERCATSTEXT")
                            }
                            @{
                                string sep = "";

                                foreach (string nombreCatMover in Model.SemanticThesaurus.CategoryNamesToMove)
                                {
                                    @Html.Raw(sep + nombreCatMover);
                                    sep = ", ";
                                }
                            }
                            @Html.GetText("COMADMINCATEGORIAS", "YAMOVER")
                        </p>
                    </div>
                    <div>
                        <select id="cmbCategoriasMover">
                            @foreach (string categoriaID in Model.SemanticThesaurus.ParentCategoriesForMoveCategories.Keys)
                            {
                                <option value="@categoriaID">@Model.SemanticThesaurus.ParentCategoriesForMoveCategories[categoriaID]</option>
                            }
                        </select>
                        <input id="lbMoverCategoria" class="submit" type="button" value="@Html.GetText("COMADMINCATEGORIAS", "MOVER")"/>
                    </div>
                </fieldset>
            </div>
        </div>
    }
</div>
@*<div id="updOrdenarCategorias"> NO BORRAR, EN BREVE SE VA A EVOLUCIONAR LA PÁGINA PARA QUE USE ÉSTO
    @if (Model.SemanticThesaurus.CategoryNamesToOrder != null && Model.SemanticThesaurus.CategoryNamesToOrder.Count > 0)
    {
        <div id="panOrdenarCategoria" style="display: none" class="box">
            <div id="panOrdenarCategoriaInterior" class="fieldset">
                <fieldset class="labels">
                    <div class="fieldsetContent">
                        <p>
                            @if (Model.SemanticThesaurus.CategoryNamesToOrder.Count == 1)
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "ORDENARCATTEXT")
                            }
                            else
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "ORDENARCATSTEXT")
                            }

                            @{
                                string sep = "";

                                foreach (string nombreCatOrdenar in Model.SemanticThesaurus.CategoryNamesToOrder)
                                {
                                    @Html.Raw(sep + nombreCatOrdenar);
                                    sep = ", ";
                                }
                            }
                            
                            @if (Model.SemanticThesaurus.CategoryNamesToOrder.Count == 1)
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "AORDENAR")
                            }
                            else
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "AORDENARLAS")
                            }
                        </p>
                    </div>
                    <div>
                        <select id="cmbCategoriasOrdenar">
                            @foreach (Guid categoriaID in Model.SemanticThesaurus.ParentCategoriesForOrderCategories.Keys)
                            {
                                <option value="@categoriaID.ToString()">@Model.SemanticThesaurus.ParentCategoriesForOrderCategories[categoriaID]</option>
                            }
                        </select>
                        <input id="lbOrdenarCategoria" class="submit" type="button" value="@Html.GetText("COMADMINCATEGORIAS", "ORDENAR")"/>
                    </div>
                </fieldset>
            </div>
        </div>
    }
</div>*@
<div id="udpPanEliminar">
    @if (Model.SemanticThesaurus.CategoryNamesToDelete != null && Model.SemanticThesaurus.CategoryNamesToDelete.Count > 0)
    {
        <div id="panEliminarCategoria" style="display: none" class="box">
            <div id="panEliminarCategoriaInterior" class="fieldset">
                <fieldset class="labels">
                    <div class="fieldsetContent">
                        <p>
                            @if (Model.SemanticThesaurus.CategoryNamesToDelete.Count == 1)
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "ELIMINARCATTEXT")
                            }
                            else
                            {
                                @Html.GetText("COMADMINCATEGORIAS", "ELIMINARCATSTEXT")
                            }

                            @{
                                string sep = "";

                                foreach (string nombreCatElim in Model.SemanticThesaurus.CategoryNamesToDelete)
                                {
                                    @Html.Raw(sep + nombreCatElim);
                                    sep = ", ";
                                }
                            }

                            @Html.GetText("COMADMINCATEGORIAS", "YMOVERELEMENTOSVIN")
                            @Html.GetText("COMADMINCATEGORIAS", "YMOVERELEMENTOSVINA")
                        </p>
                    </div>
                    <div class="clear"></div>
                    <div>
                        <select id="cmbMoverATrasEliminar">
                            @foreach (string categoriaID in Model.SemanticThesaurus.ParentCategoriesForDeleteCategories.Keys)
                            {
                                <option value="@categoriaID">@Model.SemanticThesaurus.ParentCategoriesForDeleteCategories[categoriaID]</option>
                            }
                        </select>
                        <span id="btMoverTrasEliminar">
                            <input id="lbMoverTodoTrasEliminarCategoria" class="submit" type="button" value="@Html.GetText("COMADMINCATEGORIAS", "MOVER")"/>
                        </span>
                    </div>
                </fieldset>
            </div>
        </div>
    }
</div> 
@if (Model.SemanticThesaurus.ThesaurusEditorModel.ExtraPropertiesCategories.Count > 0)
{
    <div id="udpPanEditarPropExtra">
        <div id="panEditarPropExtra" style="display: none" class="box">
            <div id="panEditarPropExtraInterior" class="fieldset">
                <fieldset class="labels">
                    <div class="fieldsetContent">
                        <p id="pTitEditPropExtra">@Html.GetText("", "EDITARPROPSEXTRADE") <strong></strong></p>
                        <div class="divContEditarPropExtra"></div>
                    </div>
                    <span id="btMoverTrasEliminar">
                        <input id="lbEditarPropExtra" class="submit" type="button" value="@Html.GetText("COMMON", "GUARDAR")" />
                    </span>
                </fieldset>
            </div>
        </div>
    </div>
}      
    
<div class="box">
    <fieldset>
        <input type="hidden" id="txtHackAccionActual" />
        <input type="hidden" id="txtCategoriasSeleccionadas" />
        <input type="hidden" id="txtCategoriasExpandidas" />
        <input type="hidden" id="txtHackSaltarValidacion" />
        <input type="hidden" id="txtAccionesTesauroHack" value="@Model.SemanticThesaurus.ActionsBackUp" />
        <input type="hidden" id="txtHackUrlSourceTesSem" value="@bkUrlSoruce" />
        <input type="hidden" id="txtHackExtraPropsTesSem" value="@Model.SemanticThesaurus.ExtraSemanticPropertiesValuesBK" />
        <div id="updLblError">
            <div id="divlblError"></div>
            <div id="adminAnyadirCategorias" class="box">
                <div id="updTesauro">
                    <div ID="PanParaSelectorCategorias">
                        @Html.PartialView("EditorTesauro/_EditorTesauro", Model.SemanticThesaurus.ThesaurusEditorModel)
                    </div>
                </div>
            </div>
        </div>  
    </fieldset>
</div>

