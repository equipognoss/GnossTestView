@model AdministracionConflictosCambiosViewModel
@using Es.Riam.Gnoss.Web.MVC.Models.IntegracionContinua;
@{
    Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/administracion.css?v=" + Html.GetVersion());
}
@helper DibujarTabla(IEnumerable<KeyValuePair<DateTime, List<ChangesContinuosIntegration>>> pModelo, bool pPintamosEnlace, string pMensaje,string pNombreEntonro)
{
KeyValuePair<DateTime, List<ChangesContinuosIntegration>> cambioMasAntiguo = pModelo.FirstOrDefault();
if (pModelo.Any())
{
        <p>@pMensaje</p>
        <thead>
            <tr>
                <th>Fecha desde último cambio</th>
                <th>Nombre del Archivo </th>
                <th>Entorno origen del cambio</th>
                <th>Tipo de archivo</th>
            </tr>
        </thead>
}
    <tbody>
        @foreach (var KeyValue in pModelo)
        {
            CommunityModel Comunidad = Html.GetComunidad();
            List<ChangesContinuosIntegration> cambiosIntegracionContinua = KeyValue.Value;
            foreach (var cambio in cambiosIntegracionContinua)
            {
                <tr>
                    <td>@TimeZone.CurrentTimeZone.ToLocalTime(KeyValue.Key)</td>
                    @if (pPintamosEnlace && cambioMasAntiguo.Key == KeyValue.Key)
                    {
                        <td><a href="@Comunidad.Url/@Html.GetText("URLSEM", "ADMINISTRARFUSIONCONFLICTOS")?Entorno=@cambio.Entorno&Fecha=@KeyValue.Key.Ticks&Tipo=@cambio.Tipo&FilePath=@HttpUtility.UrlEncode(cambio.Path)">@cambio.NombreArchivo</a></td>
                    }
                    else
                    {
                        <td>@cambio.NombreArchivo</td>
                    }
                    <td>@pNombreEntonro</td>
                    <td>@cambio.Tipo</td>
                </tr>
            }
        }
    </tbody>
}
<div class="content">
    @if (!string.IsNullOrEmpty(Model.Error))
    {
        <p>Ha ocurrido el siguiente error</p>
        <div class="alert">
            <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
            <strong>Error</strong> @Model.Error
        </div>
    }
    else
    {
        if (!Model.DiccionarioConflictos.Any())
        {
            <p>No existe ningun cambio</p>
        }
        else
        {
            <table class="tableSection">
                    @DibujarTabla(Model.DiccionarioConflictos, true, "Tabla con los cambios que requieren fusión","Develop")
            </table>
            

        }
    }
</div>
<style>
    .alert {
        padding: 20px;
        background-color: #f44336; /* Red */
        color: white;
        margin-bottom: 15px;
    }

    .closebtn {
        margin-left: 15px;
        color: white;
        font-weight: bold;
        float: right;
        font-size: 22px;
        line-height: 20px;
        cursor: pointer;
        transition: 0.3s;
    }

        .closebtn:hover {
            color: black;
        } 
</style>
