@model Es.Riam.Gnoss.Web.MVC.Models.Administracion.AdministrarOpcionesAvanzadasPlataformaViewModel
@{
    Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/administracion.css?v=" + Html.GetVersion());
}

<div class="content">
    <h1>Configurar opciones avanzadas de la plataforma</h1>
    <div>
        <form autocomplete="off">


            <h4>Usuarios</h4>
            <p>
                <input type="checkbox" id="EcosistemaSinBandejaSuscripciones" @(Model.EcosistemaSinBandejaSuscripciones ? "checked" : "") /> Los usuarios de esta plataforma van a tener disponible la bandeja de suscripciones
            </p>
            <p>
                <input type="checkbox" id="EcosistemaSinContactos" @(Model.EcosistemaSinContactos ? "checked" : "") /> Los usuarios de esta plataforma van a tener disponible la opción de hacerse contacto
            </p>
            <p>
                <input type="checkbox" id="CVUnicoPorPerfil" @(Model.CVUnicoPorPerfil ? "checked" : "") /> Los usuarios van a tener un único CV por perfil, en vez de uno por comunidad
            </p>
            <p>
                <input type="checkbox" id="DatosDemograficosPerfil" @(Model.DatosDemograficosPerfil ? "checked" : "") /> Los usuarios deben rellenar sus datos de ciudad, provincia y país en el registro
            </p>
            <p>
                <input type="checkbox" id="PanelMensajeImportarContactos" @(Model.PanelMensajeImportarContactos ? "checked" : "") /> Los usuarios pueden personalizar el mensaje que se envía al invitar a un usuario a la comunidad
            </p>
            <p>
                <input type="checkbox" id="PerfilGlobalEnComunidadPrincipal" @(Model.PerfilGlobalEnComunidadPrincipal ? "checked" : "") /> El enlace al perfil del usuario aunta al perfil global en la comunidad principal
            </p>
            <p>
                <input type="checkbox" id="PestanyaImportarContactosCorreo" @(Model.PestanyaImportarContactosCorreo ? "checked" : "") /> Los usuarios pueden invitar por email a otros usuarios a las comunidades de la plataforma
            </p>
            <p>
                <input type="checkbox" id="RegistroAutomaticoEcosistema" @(Model.RegistroAutomaticoEcosistema ? "checked" : "") /> Los usuarios deben entrar automáticamente al registrarse. Si no se marca esta opción, el usuario no podrá entrar hasta que el administrador acepte la solicitud
            </p>
            <p>
                <input type="checkbox" id="SeguirEnTodaLaActividad" @(Model.SeguirEnTodaLaActividad ? "checked" : "") /> Los usuarios siguen a otros usuarios en todas sus comunidades (no se pueden suscribir a comunidades individuales)
            </p>
            <p>
                <input type="checkbox" id="UsarSoloCategoriasPrivadasEnEspacioPersonal" @(Model.UsarSoloCategoriasPrivadasEnEspacioPersonal ? "checked" : "") /> Los usuarios sólo pueden usar las categorías privadas de su espacio personal para subir contenido
            </p>
            <p>
                <input type="checkbox" id="EcosistemaSinHomeUsuario" @(Model.EcosistemaSinHomeUsuario ? "checked" : "") /> Los usuarios no disponen de una home de usuario conectado, donde ven la actividad de todas sus comunidades
            </p>
            <p>
                <input type="checkbox" id="NotificacionesAgrupadas" @(Model.NotificacionesAgrupadas ? "checked" : "") /> Las notificaciones de invitaciones y comentarios llegan a una misma bandeja
            </p>
            <p>
                <input type="checkbox" id="RecibirNewsletterDefecto" @(Model.RecibirNewsletterDefecto ? "checked" : "") /> Los usuarios van a estar suscritos por defecto a la newsletter o no en todas las comunidades de la plataforma
            </p>
            <p>
                <input type="checkbox" id="PerfilPersonalDisponible" @(Model.PerfilPersonalDisponible ? "checked" : "") /> Los usuarios de esta plataforma van a tener perfil personal
            </p>
            <p>
                <input type="checkbox" id="MostrarGruposIDEnHtml" @(Model.MostrarGruposIDEnHtml ? "checked" : "") /> Se debe cargar un input hidden en el HTML con los grupos en los que participa el usuario
            </p>
            <p>
                <input type="checkbox" id="GenerarGrafoContribuciones" @(Model.GenerarGrafoContribuciones ? "checked" : "") /> Los usuarios tienen un grafo de contribuciones
            </p>
            <p>
                <input type="checkbox" id="MantenerSesionActiva" @(Model.MantenerSesionActiva ? "checked" : "") /> Mantener la sesión del usuario activa mientras esté abierta la pestaña del navegador
            </p>
            <p>
                Edad mínima con la que los usuarios pueden registrarse en la plataforma (por defecto 18 años)
                <input type="text" id="EdadLimiteRegistroEcosistema" style="width:50px;" value="@(Model.EdadLimiteRegistroEcosistema > 0 ? Model.EdadLimiteRegistroEcosistema.ToString() : "")" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
            </p>
            <p>
                Visibilidad del perfil
            </p>
            <p>
                Formato: Cadena de 4 digitos, los dos primeros configuran visibilidad en la comunidad, los dos últimos visibilidad en todo internet. De cada pareja de digitos, el primero indica si el check es visible y el segundo si está marcado
            </p>
            <p>
                Ejemplo: 0111 -> es visible únicamente el check de "visible en todo internet" pero ambos están marcados
                <input type="text" id="VisibilidadPerfil" value="@Model.VisibilidadPerfil" />
            </p>
            <p>
                Nombre que se le va a dar al espacio personal del usuario
            </p>
            <p>
                Ejemplo: Mi espacio personal@es|||My personal space@en|||Meu espaco pessoal@pt
                <input type="text" id="NombreEspacioPersonal" value="@Model.NombreEspacioPersonal" />
            </p>
            <p>
                Define la URL a la que se le va a redireccionar al usuario tras el login. Puede ser una url absoluta, una url que exista en el archivo de idiomas, o una url de una página del CMS.
            </p>
            <p>
                Ejemplo: http://www.gnoss.com/home
                <input type="text" id="UrlHomeConectado" value="@Model.UrlHomeConectado" />
            </p>
            <p>
                Indica las ontologías que no deben ir a la actividad reciente de los usuarios. Separadas por '|'
            </p>
            <p>
                Ejemplo: LearningOpportunitySpecification.owl|LearningOpportunityInstance.owl|request.owl|frequentRequest.owl
                <input type="text" id="OntologiasNoLive" value="@Model.OntologiasNoLive" />
            </p>
            <p>
                Duración de la Cookie de Usuario
                @{ 
                    string duracionCookie = Model.DuracionCookieUsuario;
                    string letra = string.Empty;
                    string digitos = string.Empty;
                    int cantidad = 0;
                    if (!string.IsNullOrEmpty(duracionCookie))
                    {
                        letra = duracionCookie.Substring(duracionCookie.Length - 1).ToLower();
                        digitos = duracionCookie.Substring(0, duracionCookie.Length - 1);
                        int.TryParse(digitos, out cantidad);
                    }
                    <input type="text" id="InputDuracionCookieUsuario" style="width:50px;" value="@(cantidad > 0 ? cantidad.ToString() : "")" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
                    <select id="SelectDuracionCookieUsuario" style="width:200px;">
                        <option value="d" @(letra.Equals("d") ? "selected=\"selected\"" : "")>Dias</option>
                        <option value="h" @(letra.Equals("h") ? "selected=\"selected\"" : "")>Horas</option>
                        <option value="m" @(letra.Equals("m") ? "selected=\"selected\"" : "")>Minutos</option>
                    </select>
                }
            </p>

            <h4>Sistemas</h4>
            <p>
                <input type="checkbox" id="VersionFotoDocumentoNegativo" @(Model.VersionFotoDocumentoNegativo ? "checked" : "") /> La versión de la foto de un recurso puede ser negativa. Esto sucede cuando se elimina la imagen de un recurso, para que al volver a ponerle foto se versione correctamente
            </p>
            <p>
                Número máximo de segundos que la sesión debe permanecer bloqueada. Si una petición está esperando más de lo especifiado aquí, iniciará una nueva sesión
                <input type="text" id="SegundosMaxSesionBloqueada" style="width:50px;" value="@(Model.SegundosMaxSesionBloqueada > 0 ? Model.SegundosMaxSesionBloqueada.ToString() : "")" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
            </p>
            <p>
                Número de conexiones máximo que tendrá el pool de conexiones de Redis
                <input type="text" id="TamanioPoolRedis" style="width:50px;" value="@(Model.TamanioPoolRedis > 0 ? Model.TamanioPoolRedis.ToString() : "")" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
            </p>
            <p>
                Ubicación de los logs
                <select id="UbicacionLogs" style="width:200px;">
                    <option value="0" @(Model.UbicacionLogs.Equals(0) ? "selected=\"selected\"" : "")>Archivo de texto</option>
                    <option value="1" @(Model.UbicacionLogs.Equals(1) ? "selected=\"selected\"" : "")>Application Insights</option>
                    <option value="2" @(Model.UbicacionLogs.Equals(2) ? "selected=\"selected\"" : "")>Ambos</option>
                </select>
            </p>
            <p>
                Ubicación de las trazas
                <select id="UbicacionTrazas" style="width:200px;">
                    <option value="0" @(Model.UbicacionTrazas.Equals(0) ? "selected=\"selected\"" : "")>Archivo de texto</option>
                    <option value="1" @(Model.UbicacionTrazas.Equals(1) ? "selected=\"selected\"" : "")>Application Insights</option>
                    <option value="2" @(Model.UbicacionTrazas.Equals(2) ? "selected=\"selected\"" : "")>Ambos</option>
                </select>
            </p>
            <p>
                Código de google analytics que se le va a asignar a cada proyecto nuevo según su tipo.
            </p>
            <p>
                Formato: tipoProyecto=codigo|tipoProyecto=codigo
            </p>
            <p>
                Tipos de proyecto: 0 publico, 1 privado, 2 acceso restringido, 3 reservado
            </p>
            <p>
                Ejemplo: 0=UA-XXXXXXXX-1|2=UA-YYYYYYYY-1
                <input type="text" id="CodigoGoogleAnalyticsProyecto" value="@Model.CodigoGoogleAnalyticsProyecto" />
            </p>
            <p>
                URL en la que van a estar disponibles las comunidades nuevas según su tipo 
            </p>
            <p>
                Formato: tipoProyecto=codigo|tipoProyecto=codigo
            </p>
            <p>
                Tipos de proyecto: 0 publico, 1 privado, 2 acceso restringido, 3 reservado
            </p>
            <p>
                Ejemplo: 0=http://prered.gnoss.com|2=http://prered.gnoss.com|1=https://preredprivada.gnoss.com|3=https://preredprivada.gnoss.com
                <input type="text" id="UrlsPropiasProyecto" value="@Model.UrlsPropiasProyecto" />
            </p>
            <p>
                Conexión al API del entorno de preproducción para los pasos a producción
            </p>
            <p>
                Formato: UrlAPI|ConsumerKey|ConsumerSecret|Token|TokenSecret
            <p>
                Ejemplo: http://preapi.gnoss.com|CC1166B9779C4BD44C|C50C327F1B7F4B1E14C38|7FqSvpmpuV1TK3C|2aP5EjyH/xIl860=
                <input type="text" id="ConexionEntornoPreproduccion" value="@Model.ConexionEntornoPreproduccion" />
            </p>
            <p>
                Identificador de application insights para subir la telemetría de la aplicación
            </p>
            <p>
                Ejemplo: bd094430-818d-4b03-a0fc-72850e6ffc31
                <input type="text" id="ImplementationKey" value="@Model.ImplementationKey" />
            </p>
            <p>
                Indica el token secreto de Google Recaptcha. Si se configura aquí y se añade a una vista, el servidor validará en esa página que la petición llega con un token Google Recaptcha correcto
            </p>
            <p>
                Ejemplo: 6Le3TyUTAAAAAIwjDX8D6XLuJAs9LG-yBK7icasc
                <input type="text" id="GoogleRecaptchaSecret" value="@Model.GoogleRecaptchaSecret" />
            </p>


            <h4>Redes sociales</h4>
            <p>
                Datos de la aplicación de facebook para hacer login en la plataforma
            </p>
            <p>
                Ejemplo: id|||579839168701703@@@@@@clientsecret|||b959a4481d0e88182834e4149b5d47c7
                <input type="text" id="LoginFacebook" value="@Model.LoginFacebook" />
            </p>
            <p>
                Datos de la aplicación de Google para hacer login en la plataforma
            </p>
            <p>
                Ejemplo: id|||88000341-r84hn261rtct94ucn.apps.googleusercontent.com@@@@@@clientsecret|||0d8iEeZDl-qV0XRnCCB54n
                <input type="text" id="LoginGoogle" value="@Model.LoginGoogle" />
            </p>
            <p>
                Datos de la aplicación de Twitter para hacer login en la plataforma
            </p>
            <p>
                Ejemplo: consumerkey|||lUwbKMGlYF9H6lPj4DY@@@@@@consumersecret|||2vY81oR1GFCAL818jafYyRglC8N7xf1Z1HN5sUA6jf
                <input type="text" id="LoginTwitter" value="@Model.LoginTwitter" />
            </p>
            <p>
                Hash tag que ira en todas las publicaciones en twitter que se hagan de esta comunidad
            </p>
            <p>
                Ejemplo: #gnoss
                <input type="text" id="HashTagEntorno" value="@Model.HashTagEntorno" />
            </p>
            <p>
                Cuentas válidas para hacer login con redes sociales. Si la cuenta de email con la que se han logueado no es una de las especificadas aquí, no se logueará al usuario
            </p>
            <p>
                Ejemplo: @@opendeusto.es,@@deusto.es
                <input type="text" id="DominiosEmailLoginRedesSociales" value="@Model.DominiosEmailLoginRedesSociales" />
            </p>


            <h4>Dominios y correos electrónicos</h4>
            <p>
                Correo al que van a llegar las solicitudes de nuevas comunidades
                <input type="text" id="CorreoSolicitudes" value="@Model.CorreoSolicitudes" />
            </p>
            <p>
                Correo de sugerencias
                <input type="text" id="CorreoSugerencias" value="@Model.CorreoSugerencias" />
            </p>
            <p>
                Dominios que no pueden lleva un iframe, porque sus servidores lo rechazan
            </p>
            <p>
                Ejemplo:scribd.com|prezi.com|sites.google.com
                <input type="text" id="DominiosSinPalco" value="@Model.DominiosSinPalco" />
            </p>


            <h4>Datos del ecosistema</h4>  
            <p>
                <input type="checkbox" id="EcosistemaSinMetaproyecto" @(Model.EcosistemaSinMetaproyecto ? "checked" : "") /> La plataforma actual no tiene un metaproyecto (mygnoss)
            </p>
            <p>
                Lista de idiomas disponibles en la plataforma
            </p>
            <p>
                Ejemplo: es|Español&&&en|English&&&pt|Portuguese&&&ca|Català&&&eu|Euskera&&&gl|Galego&&&fr|Français&&&de|Deutsch&&&it|Italiano
                <input type="text" id="Idiomas" value="@Model.Idiomas" />
            </p>

            <p>
                Lista de extensiones de imágenes permitidas en la plataforma para la edición de componentes multimedia
            </p>
            <p>
                Ejemplo: .jpg&&&.jpeg&&&.png&&&.gif (estas son las extensiones por defecto si no se indica ninguna)
                <input type="text" id="ExtensionesImagenesCMSMultimedia" value="@Model.ExtensionesImagenesCMSMultimedia" />
            </p>

            <p>
                Lista de extensiones de documentos permitidas en la plataforma para la edición de componentes multimedia
            </p>
            <p>
                Ejemplo: .pdf&&&.txt&&&.doc&&&.docx (estas son las extensiones por defecto si no se indica ninguna)
                <input type="text" id="ExtensionesDocumentosCMSMultimedia" value="@Model.ExtensionesDocumentosCMSMultimedia" />
            </p>

            <p>
                Copyright de la plataforma
            </p>
            <p>
                Ejemplo: RIAM I+L lab
                <input type="text" id="Copyright" value="@Model.Copyright" />
            </p>

                        @*

                        FALTAN: PersonalizacionEcosistemaID y ComunidadPrincipalID

                        *@
            
        </form>
    </div>
    <input type="button" class="guardarTodo" value="Guardar Todo" />
</div>

<script>
    var OperativaAcciones = {
        init: function () {
            this.config();
            this.engancharComportamiento();
        },
        config: function (panelID) {
            this.urlPagina = document.location.href;
            return;
        },
        engancharComportamiento: function () {
            var that = this;
            $('input.guardarTodo').click(function () {
                that.guardarTodo();
            });
            $('input#VistasActivadas').click(function () {
                that.editarVistasActivas($(this));
            });
            
            return;
        },
        editarVistasActivas: function (chkVistasActivas) {
            var panEditarVista = chkVistasActivas.parents('form').children('.editarVista');

            if (panEditarVista.length > 0) {
                if (chkVistasActivas.is(':checked')) {
                    panEditarVista.show();
                }
                else {
                    panEditarVista.hide();
                }
            }
        },
        guardarTodo: function () {
            var that = this;
            $('.ok.general').remove();
            $('.error').remove();
            if (!that.comprobarErroresGuardado()) {
                that.Options = {};
                that.obtenerDatos();
                that.guardar();
            }
            else {
                that.mostrarErrorGuardado();
            }
        },
        mostrarErrorGuardado: function () {
            $('input.guardarTodo').before('<div class="error general">Ha habido errores en el guardado de los ObjetoConocimientos, revisa los errores marcados</div>');
        },
        comprobarErroresGuardado: function () {
            var that = this;
            var error = false;

            return error;
        },
        guardar: function () {
            var that = this;

            MostrarUpdateProgress();
            GnossPeticionAjax(
            that.urlPagina + '/save',
            that.Options,
            true
            ).done(function (data) {
                that.mostrarGuardadoOK();
            }).fail(function (data) {
                var error = data.split('|||');
                that.mostrarErrorGuardado();
            }).always(function () {
                OcultarUpdateProgress();
            });
        },
        mostrarGuardadoOK: function () {
            $('input.guardarTodo').before('<div class="ok general">Los cambios se han guardado correctamente</div>');
        },
        obtenerDatos: function () {
            var that = this;

            that.Options['EcosistemaSinBandejaSuscripciones'] = $("#EcosistemaSinBandejaSuscripciones").is(':checked');
            that.Options['EcosistemaSinContactos'] = $("#EcosistemaSinContactos").is(':checked');
            that.Options['VersionFotoDocumentoNegativo'] = $("#VersionFotoDocumentoNegativo").is(':checked');
            that.Options['CVUnicoPorPerfil'] = $("#CVUnicoPorPerfil").is(':checked');
            that.Options['DatosDemograficosPerfil'] = $("#DatosDemograficosPerfil").is(':checked');
            that.Options['EcosistemaSinMetaproyecto'] = $("#EcosistemaSinMetaproyecto").is(':checked');
            that.Options['PanelMensajeImportarContactos'] = $("#PanelMensajeImportarContactos").is(':checked');
            that.Options['PerfilGlobalEnComunidadPrincipal'] = $("#PerfilGlobalEnComunidadPrincipal").is(':checked');
            that.Options['PestanyaImportarContactosCorreo'] = $("#PestanyaImportarContactosCorreo").is(':checked');
            that.Options['RegistroAutomaticoEcosistema'] = $("#RegistroAutomaticoEcosistema").is(':checked');
            that.Options['SeguirEnTodaLaActividad'] = $("#SeguirEnTodaLaActividad").is(':checked');
            that.Options['UsarSoloCategoriasPrivadasEnEspacioPersonal'] = $("#UsarSoloCategoriasPrivadasEnEspacioPersonal").is(':checked');
            that.Options['EcosistemaSinHomeUsuario'] = $("#EcosistemaSinHomeUsuario").is(':checked');
            that.Options['NotificacionesAgrupadas'] = $("#NotificacionesAgrupadas").is(':checked');
            that.Options['RecibirNewsletterDefecto'] = $("#RecibirNewsletterDefecto").is(':checked');
            that.Options['PerfilPersonalDisponible'] = $("#PerfilPersonalDisponible").is(':checked');
            that.Options['MostrarGruposIDEnHtml'] = $("#MostrarGruposIDEnHtml").is(':checked');
            that.Options['GenerarGrafoContribuciones'] = $("#GenerarGrafoContribuciones").is(':checked');
            that.Options['MantenerSesionActiva'] = $("#MantenerSesionActiva").is(':checked');

            that.Options['EdadLimiteRegistroEcosistema'] = $("#EdadLimiteRegistroEcosistema").val();
            that.Options['SegundosMaxSesionBloqueada'] = $("#SegundosMaxSesionBloqueada").val();
            that.Options['TamanioPoolRedis'] = $("#TamanioPoolRedis").val();
            that.Options['UbicacionLogs'] = $("#UbicacionLogs").val();
            that.Options['UbicacionTrazas'] = $("#UbicacionTrazas").val();
            that.Options['CodigoGoogleAnalyticsProyecto'] = $("#CodigoGoogleAnalyticsProyecto").val();
            that.Options['UrlsPropiasProyecto'] = $("#UrlsPropiasProyecto").val();
            that.Options['ConexionEntornoPreproduccion'] = $("#ConexionEntornoPreproduccion").val();
            that.Options['CorreoSolicitudes'] = $("#CorreoSolicitudes").val();
            that.Options['CorreoSugerencias'] = $("#CorreoSugerencias").val();
            that.Options['DominiosSinPalco'] = $("#DominiosSinPalco").val();
            that.Options['HashTagEntorno'] = $("#HashTagEntorno").val();
            that.Options['Idiomas'] = $("#Idiomas").val();
            that.Options['LoginFacebook'] = $("#LoginFacebook").val();
            that.Options['LoginGoogle'] = $("#LoginGoogle").val();
            that.Options['LoginTwitter'] = $("#LoginTwitter").val();
            that.Options['NombreEspacioPersonal'] = $("#NombreEspacioPersonal").val();
            that.Options['Copyright'] = $("#Copyright").val();
            that.Options['VisibilidadPerfil'] = $("#VisibilidadPerfil").val();
            that.Options['OntologiasNoLive'] = $("#OntologiasNoLive").val();
            that.Options['ImplementationKey'] = $("#ImplementationKey").val();
            that.Options['UrlHomeConectado'] = $("#UrlHomeConectado").val();
            that.Options['GoogleRecaptchaSecret'] = $("#GoogleRecaptchaSecret").val();
            that.Options['DominiosEmailLoginRedesSociales'] = $("#DominiosEmailLoginRedesSociales").val();
            that.Options['DuracionCookieUsuario'] = $("#InputDuracionCookieUsuario").val() + $("#SelectDuracionCookieUsuario").val();
            that.Options['ExtensionesImagenesCMSMultimedia'] = $("#ExtensionesImagenesCMSMultimedia").val();
            that.Options['ExtensionesDocumentosCMSMultimedia'] = $("#ExtensionesDocumentosCMSMultimedia").val();
        }
    }

    $(document).ready(function () {
        OperativaAcciones.init();
    });
</script>
<style>
    div.content {
        margin: 50px;
    }

        div.content form {
            margin: 30px;
        }

    div#confCorreo .bloque {
        border: 1px solid;
        padding: 10px;
    }

    div.error.general {
        background-color: Red;
        color: white;
        padding: 10px 20px;
        margin-left: 20px;
        margin-bottom: 5px;
    }

    div.ok.general {
        background-color: limegreen;
        color: white;
        padding: 10px 20px;
        margin-left: 20px;
        margin-bottom: 5px;
    }

    div.content input.guardarTodo {
        float: right;
    }

    div.content input[type='text'],
    div.content input[type='password'],
    div.content select {
        width: 100%;
        margin-bottom:10px;
    }
    h4 {
        padding-top:20px;
        padding-bottom:20px;
    }
</style>