@model AdministrarConsultasSPARQLViewModel
@{
    Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/administracion.css?v=" + Html.GetVersion());
    CommunityModel Comunidad = Html.GetComunidad();
}
<div class="JustifyCenter">
    <form id="myForm" action="javascript:void(0)" method="get">
        <fieldset>
            <p>Prefijos de la aplicación:</p>
            <br />
            @{int i = 0;}
            @foreach (var item in Model.nomPrefijos)
                {
                    if (i < 3)
                {
                    <p>prefix @item.Value</p>
                }
                else
                {
                    <p name="namespace" style="display:none">prefix @item.Value</p>
                }

                i++;
            }
            <br />
            <a id="enlaceNamespace" onclick="verNamespaces()"> <label for="" class="n">Ver más.... </label> </a>
            <br />
            <br />
            
            <label for="pSelect">SELECT</label><br />
            <input type="text" name="pSelect" id="pSelect" value="Select ?s ?p ?o" size="80" />
            <br /><br />
            <label for="pFrom" class="n" name="labelFrom">From</label><br />
            <select name="pFrom" class="pFrom" >
                <option value="default" selected="selected">Selecciona un grafo</option>
                @foreach (var element in Model.listaNomOntologias)
                {
                    <option value="@element">@element</option>
                }
                <option value="@Comunidad.Key">grafo de búsqueda</option>
            </select>
            <br /><br />
            <a id="enlace" style="display:block" onclick="addFrom()"> <label for="pMasFrom" class="n">Consultar más de un grafo. </label> </a> 
            <br /><br />
            <label for="pWhere">WHERE</label><br />
            <textarea title="" class="masterTooltip" rows="18" cols="80" name="pWhere" id="pWhere" onchange="javascript: (this)">Where {?s ?p ?o} &#13;&#10;limit 100</textarea>
            <br /><br />
            <input type="submit" name="submitButton" id="submitButton" value="Ejecutar" />
        </fieldset>
    </form>
</div>
<style>
    .JustifyCenter {
        margin-top: 5px;
        margin-left: 5px;
    }

    .alert {
        padding: 20px;
        background-color: #f44336;
        color: white;
        opacity: 1;
        transition: opacity 0.6s;
        margin-bottom: 15px;
    }
    textarea[class*="masterTooltip"]
    {
        height:100%;
        width:99.4%;
    }
    p {
        color: inherit;
    }
</style>

<script>


    function doSomething(numero)
    {
        quitFrom(numero);
    }

    var numeroCombosActual = 1;
    function addFrom() {
        var numeGrafos = $('.pFrom')[0].length - 1
        if (numeroCombosActual < numeGrafos) {
            numeroCombosActual++;
            $('#pSelect').after("<div id=\"" + numeroCombosActual + "\"><br/><br/><label for=\"pFrom\" class=\"n\" name=\"labelFrom\">From</label><br />             <select name=\"pFrom\" class=\"pFrom\" >                 <option value=\"default\" selected=\"selected\">Selecciona un grafo</option>                 @foreach (var element in Model.listaNomOntologias)                 {                     <option value=\"@element\">@element</option>                 }                 <option value=\"@Comunidad.Key\">grafo de búsqueda</option>             </select> <span class=\"action eliminar\" style=\"margin-right: 800px;\" onclick=doSomething(" + numeroCombosActual + ")>Eliminar</span></div>");
            $('#enlace').text("Añadir otro grafo")
        } else {
            borrarEnlace();
        }
        if (numeroCombosActual == numeGrafos) {
            borrarEnlace();
        }
    }

    function quitFrom(numero) {
        var from = document.getElementsByName("pFrom");
        var div = document.getElementById(numero);
        var numGrafos = from.length;
        if (numGrafos == 1) {
            ponerEnlace();
        } else {
            div.parentNode.removeChild(div);
            numero = numero - 1;
            numeroCombosActual = numeroCombosActual - 1;
            ponerEnlace();
            numGrafos = numGrafos - 1;
        }
    }

    var n = 1;
    function verNamespaces() {
        var namespaces = document.getElementsByName("namespace");
        var i;
        if (n == 1) {
            for (i = 0; i < namespaces.length; i++) {
                namespaces[i].style.display = "block";
                $('#enlaceNamespace').text("Ver Menos...");
            }
            n = n + 1;
        } else {
            for (i = 0; i < namespaces.length; i++) {
                namespaces[i].style.display = "none";
                $('#enlaceNamespace').text("Ver Más...");
            }
            n = 1;
        }
    }

    function borrarEnlace() {
        var enlace = document.getElementById("enlace");
        enlace.style.display = "none";
    }

    function ponerEnlace() {
        var enlace = document.getElementById("enlace");
        enlace.style.display = "block";
    }

</script>
<script>


    var OperativaAcciones = {
        init: function () {
            this.config();
            this.engancharComportamiento();
        },
        config: function () {
            this.urlPagina = document.location.href;
            return;
        },
        mostrarInformacion: function (data) {
            $('#errorSpam').remove();
            $('.sparql').remove();
            $('#myForm').after(data);
        },
        mostrarErrorGuardado: function () {
            $('#errorSpam').remove();
            $('.sparql').remove();
            $('#myForm').after("</br> <div id=\"errorSpam\" class=\"alert\"> <p>" + arguments[0] + "</p></div>");
        },
        guardar: function () {
            var that = this;
            that.Options = {};

            var error = false
            var valoresFrom = '';
            var valor = 1;
            $('.pFrom').each(function () {
                var valorFrom = this.value
                if (valorFrom == 'default') {
                    that.mostrarErrorGuardado("Elige un valor para el campo FROM")
                    error = true
                }
                if (numeroCombosActual == valor) {
                    valoresFrom +=  valorFrom;
                } else if (numeroCombosActual != 1)  {
                    valoresFrom += valorFrom + ',';
                } else {
                    valoresFrom += valorFrom;
                }
                valor = valor + 1;
            });

            if (error) {
                return
            }

            var valorSelect = $('#pSelect').val()
            if (!valorSelect) {
                that.mostrarErrorGuardado("El campo SELECT no puede estar vacío")
                return;
            }
            that.Options['pSelect'] = valorSelect;
            that.Options['pFrom'] = valoresFrom;
            that.Options['pWhere'] = $('#pWhere').val();
            MostrarUpdateProgress();
            GnossPeticionAjax(
            that.urlPagina + '/save',
            that.Options,
            true
            ).done(function (data) {
                that.mostrarInformacion(data);
            }).fail(function (data) {
                if (data) {
                    that.mostrarErrorGuardado(data);
                } else {
                    that.mostrarErrorGuardado("Error al ejecutar la consulta");
                }
            }).always(function () {
                OcultarUpdateProgress();
            });

        },
        engancharComportamiento: function () {
            var that = this;
            $('#submitButton').click(function () {
                that.guardarTodoFusion();
            });
            return;
        },
        guardarTodoFusion: function () {
            var that = this;
            that.guardar();
        }
    }

    $(document).ready(function () {
        OperativaAcciones.init();
    });
</script>

