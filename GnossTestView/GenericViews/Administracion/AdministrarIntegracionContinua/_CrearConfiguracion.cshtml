@{
    CommunityModel Comunidad = Html.GetComunidad();
}
<form id="formulario" action="javascript:void(0)" method="post">

    @if (string.IsNullOrEmpty(Model.Master) && string.IsNullOrEmpty(Model.Release))
    {
        <span> Elige cuantos <strong>entornos</strong> contiene el proyecto</span>

        <select id="entornos" onchange="entornosChange()">
            <option id="1" selected>1</option>
            <option id="2">2</option>
            <option id="3">3</option>
        </select>
    }
    else if (string.IsNullOrEmpty(Model.Master))
    {
        <span>El entorno de <strong>Producción</strong> no esta configurado</span>

        <select id="entornos" onchange="entornosChange()">
            <option id="2" selected>2</option>
            <option id="3">3</option>
        </select>
    }
    else
    {
        <span>Al tener los entornos creado se pone por defecto los 3 <strong>entornos</strong>.</span>

        <select id="entornos">
            <option id="3" selected>3</option>
        </select>
    }
    <!-- -->
    <br />
    <br />
    <div>
        <div id="nomEntornos">
            <p>Para poder hacer el despliegue en todos los entornos, necesitamos conocer la URL del API de despliegues en cada entorno. </p>
            <p>Para obtener esa url, tienes que acceder a la url del API de Despliegues de cada entorno. </p>

            @if (string.IsNullOrEmpty(Model.Develop))
            {
                <p>Por ejemplo, la URL seria: http://serviciospruebas.gnoss.net/despliegues/api </p>
                    <div id="Develop">
                        <span>URL de <strong>Develop</strong></span><input type="text" id="TxtDevelop" value="@Model.Develop" />
                    </div>
            }
            else
            {
                <p>Por ejemplo, en el entorno actual, la URL es: <a href="@Model.Develop">@Model.Develop</a></p>
                    <div id="Develop">
                        <span>URL de <strong>Develop</strong>: @Model.Develop</span><input type="hidden" id="TxtDevelop" value="@Model.Develop" />
                    </div>
            }
            @if (string.IsNullOrEmpty(Model.Release))
            {
                <div id="Release" style="display:none">
                    <span>URL de <strong>Release</strong></span><input type="text" id="TxtRelease" value="@Model.Release" />
                </div>
            }
            else
            {
                <div id="Release">
                    <span>URL de <strong>Release</strong>: @Model.Release</span><input type="hidden" id="TxtRelease" value="@Model.Release" />
                </div>
            }
            @if (string.IsNullOrEmpty(Model.Master))
            {
                <div id="Master" style="display:none">
                    <span>URL de <strong>Master</strong></span><input type="text" id="TxtMaster" value="@Model.Master" />
                </div>
            }
            else
            {
                <div id="Master">
                    <span>URL de <strong>Master</strong>: @Model.Master</span><input type="hidden" id="TxtMaster" value="@Model.Master" />
                </div>
            }
        </div>
        @{
            string disabled = "";
            if (Model.Iniciado)
            {
                disabled = "disabled";
            }
        }

        @if (Model.Iniciado)
        {
            <br />
            <br />
            <span>El repositorio ya esta iniciado y se ha subido al repositorio escogido por lo que solo se van a poder añadir los entornos de despliegues.</span>
            <br />
        }
        
        <br />
        <span> Elige que <strong>repositorio</strong> vas a utilizar</span>
        @if (string.IsNullOrEmpty(Model.Repositorio))
        {
            <select id="repositorios" onchange="repositoriosChange()">
                <option id="bitbucket" selected>bitbucket</option>
                <option id="github">github</option>
                <option id="bitbucketserver">bitbucketserver</option>
                <option id="gitlab">gitlab</option>
            </select>
        }
        else
        {
            <select id="repositorios" onchange="repositoriosChange()" @Html.Raw(disabled)>
                @if (Model.Repositorio.Equals("bitbucket"))
                {
                    <option id="bitbucket" selected>bitbucket</option>
                    <option id="github">github</option>
                    <option id="bitbucketserver">bitbucketserver</option>
                    <option id="gitlab">gitlab</option>
                }
                else if (Model.Repositorio.Equals("github"))
                {
                    <option id="bitbucket">bitbucket</option>
                    <option id="github" selected>github</option>
                    <option id="bitbucketserver">bitbucketserver</option>
                    <option id="gitlab">gitlab</option>
                }
                else if (Model.Repositorio.Equals("bitbucketserver"))
                {
                    <option id="bitbucket">bitbucket</option>
                    <option id="github">github</option>
                    <option id="bitbucketserver" selected>bitbucketserver</option>
                    <option id="gitlab">gitlab</option>
                }
                else
                {
                    <option id="bitbucket">bitbucket</option>
                    <option id="github">github</option>
                    <option id="bitbucketserver">bitbucketserver</option>
                    <option id="gitlab" selected>gitlab</option>
                }
            </select>
        }

        <br />
        <br />
        
        <div id="bitbucketGit">
            <p>Tenemos que crearnos una cuenta en las distintas opciones que os presentamos: Bitbucket, Github y BitbucketServer</p>
            <p>Para elegir la ruta del repositorio tenemos que situarnos en la página principal y escoger la URL del proyecto terminado con.git</p>
            <p>Es necesario que una vez creado el repositorio, se creen <strong>3 ramas, Develop, Release y Master</strong></p>
            @if (!string.IsNullOrEmpty(Model.UrlRepo))
            {
                <div id="URLRepo">
                    <span>URL del <strong>Repositorio</strong></span><input type="text" id="TxtURL" value="@Model.UrlRepo" @Html.Raw(disabled)/>
                </div>
            }
            else
            {
                <div id="URLRepo">
                    <span>URL del <strong>Repositorio</strong></span><input type="text" id="TxtURL" value="" />
                </div>
            }


            <br />
            <p>Es necesario crear una autentificación OAuth para poder hacer la integración por lo que tenéis que crear una en los repositorios de: Bitbucket, Github y GitLab, para ello es necesario ir a la configuración del repositorio y hacer una autorización para </p>
            <p>Tambien hay que configurar para que cuando se cree esta autentificación OAuth nos redirija a la página donde tenemos el api de integración continua. Por ejemplo:
            
            @if (!string.IsNullOrEmpty(Model.URLAPIIntegracionContinua))
            {
                <strong>@Model.URLAPIIntegracionContinua/autorizacion/authorize</strong>
            }
            else
            {
                <strong>@Model.URLApiIntegracionContinua/integracionContinua/api/autorizacion/authorize</strong>
            }
            </p>
            @if (!string.IsNullOrEmpty(Model.RepoClave) && !string.IsNullOrEmpty(Model.RepoSecret))
            {
                <div id="oAuth">
                    <span>Clave del <strong>Repositorio </strong></span><input type="text" id="TxtRepoClave" value="@Model.RepoClave" @Html.Raw(disabled)/>
                    <br />
                    <span>Secret del <strong>Repositorio </strong></span><input type="text" id="TxtRepoSecret" value="@Model.RepoSecret" @Html.Raw(disabled) />
                </div>
            }
            else
            {
                <div id="oAuth">
                    <span>Clave del <strong>Repositorio </strong></span><input type="text" id="TxtRepoClave" value="" />
                    <br />
                    <span>Secret del <strong>Repositorio </strong></span><input type="text" id="TxtRepoSecret" value="" />
                </div>
            }

        </div>
        <span><strong>Es necesario ingresar la primera vez con el usuario que ha creado el repositorio.</strong></span>
        <br />
        @if (!string.IsNullOrEmpty(Model.Repositorio) && Model.Repositorio.Equals("bitbucketserver") && !string.IsNullOrEmpty(Model.User) && !string.IsNullOrEmpty(Model.Pass))
        {
            <div id="bitbucketServer" style="display:none">
                <div id="Autenti">
                    <span><strong>Usuario</strong> de Repositorio</span><input type="text" id="TxtUser" value="" />
                    <br />
                    <span><strong>Contraseñas</strong> de Repositorio</span><input type="text" id="TxtPass" value="" />
                </div>
            </div>
        }
        else
        {
            <div id="bitbucketServer" style="display:none">
                <div id="Autenti">
                    <span><strong>Usuario</strong> de Repositorio</span><input type="text" id="TxtUser" value="" />
                    <br />
                    <span><strong>Contraseñas</strong> de Repositorio</span><input type="text" id="TxtPass" value="" />
                </div>
            </div>
        }

        <input type="button" class="guardarTodo" id="Crear" value="Crear" />
    </div>
</form>

<script>
    function entornosChange() {
        var selected = $("#entornos").val();
        if (selected == 3) {
            $('#Master').show();
            $('#Release').show();
        } else if (selected == 2) {
            $('#Release').show();
            $('#TxtMaster').val('');
            $('#Master').hide();
        } else {
            $('#TxtRelease').val('');
            $('#Release').hide();
            $('#TxtMaster').val('');
            $('#Master').hide();
        }
    }
    function repositoriosChange() {
        var selected = $("#repositorios").val();
        if (selected == "bitbucketserver") {
            $('#bitbucketServer').show();
        } else {
            $('#TxtUser').val('');
            $('#TxtPass').val('');
            $('#bitbucketServer').hide();
        }
    }

</script>
<script>
    var OperativaAcciones = {
        init: function () {
            this.config();
            this.engancharComportamiento();
        },
        config: function () {
            this.urlPagina = document.location.href;
            return;
        },
        mostrarErrorGuardado: function (data) {
            if (data)
            {
                $('#formulario').after('<div class="error general">'+data+'</div>');
            } else
            {
                $('#formulario').after('<div class="error general">Ha habido errores en el guardado</div>');
            }

        },
        guardar: function () {
            var that = this;
            MostrarUpdateProgress();
            GnossPeticionAjax(
            that.urlPagina + '/Guardar',
            that.Options,
            true
            ).fail(function (data) {
                that.mostrarErrorGuardado(data);
            }).always(function () {
                OcultarUpdateProgress();
            });
        },
        engancharComportamiento: function () {
            var that = this;
            $('#Crear').click(function () {
                that.guardarTodo();
            });
            return;
        },
        guardarTodo: function () {
            var that = this;
            $('.ok.general').remove();
            $('.error').remove();
            if (!that.comprobarErroresGuardado()) {
                that.Options = {};
                that.obtenerDatos();
                that.guardar();
            }
            else {
                that.mostrarErrorNombreRama();
            }
        },
        mostrarErrorNombreRama: function(){
            $('#formulario').after('<div class="error general">Introducir datos de todos los campos.</div>');
        },
        obtenerDatos: function () {
            var that = this;
            var selected = $('#entornos').val();
            var repositorios = $('#repositorios').val();
            that.Options['Develop'] = $("#TxtDevelop").val();
            that.Options['RepoClave'] = $("#TxtRepoClave").val();
            that.Options['RepoSecret'] = $("#TxtRepoSecret").val();
            that.Options['URLRepo'] = $("#TxtURL").val();
            that.Options['Repositorio'] = repositorios;
            if (selected == 3) {
                that.Options['Master'] = $("#TxtMaster").val();
                that.Options['Release'] = $("#TxtRelease").val();
            } else if (selected == 2){
                that.Options['Release'] = $("#TxtRelease").val();
            }


            if (repositorios == 'bitbucketserver') {
                that.Options['User'] = $("#TxtUser").val();
                that.Options['Pass'] = $("#TxtPass").val();
            }
        },
        comprobarErroresGuardado: function () {
            var selected = $("#entornos").val();
            var repositorios = $("#repositorios").val();
            if (repositorios == 'bitbucketserver') {
                if (selected == 3) {
                    if ($("#TxtDevelop").val() == '' || $("#TxtRelease").val() == '' || $("#TxtMaster").val() == '' || $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '' || $("#TxtURL").val() == '' || $("#TxtUser").val() == '' || $("#TxtPass").val() == '') {
                        return true;
                    } else{
                        return false;
                    }
                } else if (selected == 2){
                    if ($("#TxtRelease").val() == '' || $("#TxtDevelop").val() == '' || $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '' || $("#TxtURL").val() == '' || $("#TxtUser").val() == '' || $("#TxtPass").val() == '') {
                        return true;
                    } else{
                        return false;
                    }
                } else {
                    if ($("#TxtDevelop").val() == '' ||  $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '' || $("#TxtURL").val() == '' || $("#TxtUser").val() == '' || $("#TxtPass").val() == '') {
                        return true;
                    } else {
                        return false;
                    }
                }
            } else {
                if (selected == 3) {
                    if ($("#TxtDevelop").val() == '' || $("#TxtRelease").val() == '' || $("#TxtMaster").val() == '' || $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '') {
                        return true;
                    } else {
                        return false;
                    }
                } else if (selected == 2) {
                    if ($("#TxtRelease").val() == '' || $("#TxtDevelop").val() == '' || $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '' ) {
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    if ($("#TxtDevelop").val() == '' ||  $("#TxtURL").val() == '' || $("#TxtRepoClave").val() == '' || $("#TxtRepoSecret").val() == '') {
                        return true;
                    } else {
                        return false;
                    }
                }
            }
        },
    }
    $(document).ready(function () {
        OperativaAcciones.init();
    });
</script>
<style>
    input[type=text] {
        width: 20%;
        margin-left: 10px;
    }

    input[type=button] {
        float: initial;
    }
</style>

