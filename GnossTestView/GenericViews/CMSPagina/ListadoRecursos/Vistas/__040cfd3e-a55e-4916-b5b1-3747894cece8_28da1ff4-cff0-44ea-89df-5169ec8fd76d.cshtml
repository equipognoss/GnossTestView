@using Es.Riam.Util;
@model ResourceModel
@if (Model != null)
{    

   <div class="resource resourceCuaderno listado-@Model.RdfType col-xs-12" attr-description="@Html.Translate("Objetivos")" rel="@Model.Key" > 
        <div class="box description">
            @if (!Html.GetComunidad().IsCatalog && !string.IsNullOrEmpty(Model.UrlPreview))
            {
                <div class="miniatura col-xs-12 col-md-6">
                    <a href="@Model.CompletCardLink">
                        <img class="imagenDestacada" title="@Model.Title" alt="@Model.Title" src='@Model.UrlPreview'>
                    </a>
                </div>
            }
            <div class="wrapDescription col-xs-12 col-md-6">           
                @if (Html.GetComunidad().IsCatalog && !string.IsNullOrEmpty(Model.UrlPreview))
                {
                    <div class="group miniaturaListado">
                        <p class="miniatura">
                            <a href="@Model.CompletCardLink">
                                <img title="@Model.Title" alt="@Model.Title" src="@Model.UrlPreview" />
                            </a>
                        </p>
                    </div>
                }

                @{
                    string claveObjetivo = "mlo:objective";
                    string valorObjetivo = "";   
                    string valorObjetivoResumido="";

                    if (Model.ViewSettings != null && Model.ViewSettings.SemanticProperties!=null )
                    {
                        if(Model.ViewSettings.SemanticProperties.ContainsKey(claveObjetivo))
                        {
                            valorObjetivo = Model.ViewSettings.SemanticProperties[claveObjetivo][0].Name;
                            valorObjetivoResumido=  valorObjetivo;
                            if(valorObjetivoResumido.Length>50)
                            {
                                 valorObjetivoResumido=valorObjetivoResumido.Substring(0,50)+"...";
                            }                          
                        }   
                    }  
                } 

                <div class="wrapDescription">
                    <div class="group cabecera">
                        <p>@Html.Translate("Cursos Didactalia")</p>
                    </div>
                    <div class="group titulo">
                        <h2><a href="@Model.CompletCardLink">@Model.Title</a></h2>
                        <p><strong>@Html.Translate("Objetivos:")</strong> @valorObjetivoResumido</p>
                    </div>

                    <div class="group content">
                        @{
                            string claseExtraDescripcion = "";
                            if ((Model.ViewSettings != null && ((!Model.MapView && (Model.ViewSettings.DescriptionOnList || Model.ViewSettings.DescriptionOnMosaic)) || (Model.MapView && Model.ViewSettings.DescriptionOnMap))))
                            {
                                if (Model.ViewSettings != null)
                                {
                                    if (!Model.ViewSettings.DescriptionOnList)
                                    {
                                        claseExtraDescripcion += " noListView";
                                    }
                                    if (!Model.ViewSettings.DescriptionOnMosaic)
                                    {
                                        claseExtraDescripcion += " noGridView";
                                    }
                                }
                            }
                        }
                        @if (Model.ViewSettings != null)
                        {
                            if (!Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.InfoExtraList))
                            {
                            <div class="listado">
                                
                            @{
                                string claveModalidad = "dc:type";
                                string valorModalidad = "";

                                string clavePrecioCurso = "gr:hasPriceSpecification";
                                string valorPrecioCurso = "";                                

                                string claveEdadCuaderno = "nb:age";
                                string valorEdadCuaderno = "";

                                string claveFormatoCuaderno = "dc:format";
                                string valorFormatoCuaderno = "";

                                string clavePrecio = "gr:hasPriceSpecification";
                                string valorPrecio="";

                                string claveSubtitulo = "nb:subtitle";
                                string valorSubtitulo="";

                                string claveFormato = "dc:format";
                                string valorFormato="";

                                string claveHoras = "mlo:duration";
                                string valorHoras="";                                

                                if (Model.ViewSettings != null && Model.ViewSettings.SemanticProperties!=null )
                                {
                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveModalidad))
                                    {
                                        valorModalidad = Model.ViewSettings.SemanticProperties[claveModalidad][0].Name;
                                    }  

                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(clavePrecioCurso))
                                    {
                                        valorPrecioCurso = Model.ViewSettings.SemanticProperties[clavePrecioCurso][0].Name;
                                    }

                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveEdadCuaderno))
                                    {
                                        valorEdadCuaderno = Model.ViewSettings.SemanticProperties[claveEdadCuaderno][0].Name;
                                    }  

                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveFormatoCuaderno))
                                    {
                                        valorFormatoCuaderno = Model.ViewSettings.SemanticProperties[claveFormatoCuaderno][0].Name;
                                    }  
                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(clavePrecio))
                                    {
                                        valorPrecio = Model.ViewSettings.SemanticProperties[clavePrecio][0].Name.Replace(" €","");
                                    }
                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveSubtitulo))
                                    {
                                        valorSubtitulo = Model.ViewSettings.SemanticProperties[claveSubtitulo][0].Name;
                                    }
                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveFormato))
                                    {
                                        valorFormato = Model.ViewSettings.SemanticProperties[claveFormato][0].Name;
                                    }   
                                    if(Model.ViewSettings.SemanticProperties.ContainsKey(claveHoras))
                                    {
                                        valorHoras = Model.ViewSettings.SemanticProperties[claveHoras][0].Name;
                                    }  
                                }  
                            }    

                            <div class="datosCurso clearfix">

                                <div class="horasPrecio"> 
                                    <div class="horas col col-xs-6">
                                        <span class="icono"></span>
                                        <p class="valor">@valorHoras @Html.Translate("horas")</p>
                                    </div> 
                                    <div class="precio col col-xs-6">
                                        <p>@valorPrecioCurso €</p> 
                                    </div>                                    
                                </div>                               
                            </div>                            

                            </div>   
                            }
                            if (!Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.InfoExtraMosaic))
                            {
                            <div class="mosaico">
                                @MvcHtmlString.Create(Model.ViewSettings.InfoExtraMosaic)
                            </div>   
                            }
                            if (Model.MapView && !string.IsNullOrEmpty(Model.ViewSettings.InfoExtraMap))
                            {
                            <div class="mapa">
                                @MvcHtmlString.Create(Model.ViewSettings.InfoExtraMap)
                            </div>   
                            }

                        }
                    </div>
                    @if (Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.PublisherOnList || Model.ViewSettings.PublisherOnMosaic)) || (Model.MapView && Model.ViewSettings.PublisherOnMap))
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.PublisherOnList)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.PublisherOnMosaic)
                            {
                                claseExtra += " noGridView";
                            }
                        }
                        <div class="group utils-2 @claseExtra" >
                            <p>
                                @if (Model.TypePublication == ResourceModel.PublicationType.Published)
                                {
                                    @Html.GetText("BASERECURSOS", "PUBLICADOPORCUANDO", Model.PublishDate.Day.ToString(), Model.PublishDate.Month.ToString(), Model.PublishDate.Year.ToString())
                                }
                                else
                                {
                                    @Html.GetText("BASERECURSOS", "COMPARTIDOPORCUANDO", Model.PublishDate.Day.ToString(), Model.PublishDate.Month.ToString(), Model.PublishDate.Year.ToString())
                                }

                                @if (Model.Publisher.TypeProfile == ProfileType.Personal || Model.Publisher.TypeProfile == ProfileType.Teacher)
                                {
                                    <span><a property="foaf:name" typeof="foaf:Person" href="@Model.Publisher.UrlPerson">@Model.Publisher.NamePerson</a></span>
                                }
                                else if (Model.Publisher.TypeProfile == ProfileType.ProfessionalPersonal)
                                {
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlPerson">@Model.Publisher.NamePerson · @Model.Publisher.NameOrganization</a></span>
                                }
                                else if (Model.Publisher.TypeProfile == ProfileType.ProfessionalCorporate && !string.IsNullOrEmpty(Model.Publisher.NamePerson))
                                {
                                    string idTemp = Guid.NewGuid().ToString();
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlOrganization">@Model.Publisher.NameOrganization</a><span class="userAuthor"><span style="display:none;" id="@idTemp"> (@Model.Publisher.NamePerson) </span><a onclick="javascript:DesplegarImgMas(this, '@idTemp');" style="cursor:pointer;">
                                        <img src="@Html.GetBaseUrlStatic()/img/verMas.gif" alt="+"></a></span></span>
                                }
                                else
                                {
                                    <span><a property="foaf:name" typeof="foaf:Group" href="@Model.Publisher.UrlOrganization">@Model.Publisher.NameOrganization</a></span>
                                }
                            </p>
                        </div>
                    }
                    @if ((Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.CategoriesOnList || Model.ViewSettings.CategoriesOnMosaic)) || (Model.MapView && Model.ViewSettings.CategoriesOnMap)) && Model.Categories != null && Model.Categories.Count() > 0)
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.CategoriesOnList)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.CategoriesOnMosaic)
                            {
                                claseExtra += " noGridView";
                            }
                        }
                    
                        <div class="group categorias @claseExtra">
                            <p>
                                @Html.GetText("COMMON", "CATEGORIAS"):  
                            </p>
                            <ul id="listCat">
                                @{
                        int cont = 0;
                        foreach (CategoryModel categoria in Model.Categories)
                        {
                            string separador = "";
                            if (cont > 0) { separador = ", "; }
                                    <li>@separador<a href="@Model.UrlSearch/@Html.GetText("URLSEM", "CATEGORIA")/@Html.EliminarCaracteresUrlSem(categoria.Name)/@categoria.Key/"><span>@categoria.Name</span></a></li>
                            cont++;
                        }
                                }
                            </ul>
                        </div>  
                    }

                    @if ((Model.ViewSettings == null || (!Model.MapView && (Model.ViewSettings.TagsOnList || Model.ViewSettings.TagsOnMosaic)) || (Model.MapView && Model.ViewSettings.TagsOnMap)) && Model.Tags != null && Model.Tags.Count() > 0)
                    {
                        string claseExtra = "";
                        if (Model.ViewSettings != null)
                        {
                            if (!Model.ViewSettings.TagsOnList)
                            {
                                claseExtra += " noListView";
                            }
                            if (!Model.ViewSettings.TagsOnMosaic)
                            {
                                claseExtra += " noGridView";
                            }
                        }                    
                        <div class="group etiquetas @claseExtra">
                            <p>
                                @Html.GetText("COMMON", "ETIQUETAS"):
                            </p>
                            <ul class="listTags">
                                @{
                        int cont = 0;
                        foreach (string tag in Model.Tags)
                        {
                            string separador = "";
                            if (cont > 0) { separador = ", "; }
                                    
                                    <li>@separador<a resource="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag" rel="sioc:topic" href="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag"><span about="@Model.UrlSearch/@Html.GetText("URLSEM", "TAG")/@tag" property="dcterms:name" typeof="sioc_t:Tag">@tag</span></a></li>
                            cont++;
                        }
                                }
                            </ul>
                        </div>
                    }
                    <div id="accionesListado_@Model.Key.ToString()_@Guid.NewGuid()_@Html.GetComunidad().Key.ToString()" class="group acciones noGridView">
                    </div>
                    <div class="divContAccList"></div>
                </div>
            </div>
        </div>
    </div>
}
