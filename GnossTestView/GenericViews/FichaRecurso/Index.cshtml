@model ResourceViewModel
@{
    ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();

    if (Comunidad.IsCatalog)
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaCatalogo comGnoss");
    }
    else if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Semantico)
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaRecurso fichaCatalogo comGnoss");
    }
    else
    {
        Html.SetBodyClass("layout03 fichaComunidad fichaRecurso comGnoss");
    }

    if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Semantico)
    {
        Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/formsemactic.js?v=" + Html.GetVersion());
        Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/formsemactic.css?v=" + Html.GetVersion());
    }

    string url = Html.GetUrlContext(FichaDocumento.CompletCardLink, FichaDocumento.Key, Html.GetComunidad().ShortName);

    bool PresentacionNoSocial = Comunidad.ProyectType == CommunityModel.TypeProyect.CatalogoNoSocial || Comunidad.ProyectType == CommunityModel.TypeProyect.CatalogoNoSocialConUnTipoDeRecurso;
}

@section breadcrumb{
    <div class="breadcrumb" id="breadcrumb">
        <div class="box">
            <p>@Html.GetText("COMMON", "ESTASEN")</p>
            <ol>
                <li><a href="@Comunidad.Url"><strong>@Html.GetText("COMMON", "HOME")</strong></a></li>
                @{
                    string urlPestanya = Comunidad.Url + "/" + Html.GetNombreUrlPestanya();
                    string nombrePestanya = Html.GetNombrePestanya();
                }
                <li><a href="@urlPestanya">@nombrePestanya</a></li>
                <li>@FichaDocumento.Title</li>
            </ol>
        </div>
    </div>
}

<div id="col02">
    <div>
        <div>
            @{
                if (!FichaDocumento.LastVersion.Equals(FichaDocumento.Key))
                {
                    <div>
                        <div class="group utils-1 noUltVer">
                            <img src="@Html.GetBaseUrlStatic()/img/comunidades/icoNoVigilado.gif" />
                            <p>@Html.Raw(Html.GetText("PERFILBASERECURSOSFICHA", "NOULTIMAVERSION", Html.GetUrlPagina().Replace(FichaDocumento.Key.ToString(), FichaDocumento.LastVersion.ToString())))</p>
                        </div>
                    </div>
                }

                string claseItem = "resource";

                if (FichaDocumento.IsDraft)
                {
                    claseItem += " resourceDraft";
                }
            }
            <div typeof="sioc_t:Item" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:sioc_t="http://rdfs.org/sioc/types#" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:sioc="http://rdfs.org/sioc/ns#" class="@claseItem">
                <div class="box description">
                    <div class="wrapDescription">

                        @if (Model.SemanticFrom != null && Model.SemanticFrom.SemCmsDrawOverMenu)
                        {
                            @Html.PartialView("../Shared/SemCms/_GeneradorSemCms", Model.SemanticFrom);
                        }

                        @if (Model.SemanticFrom == null || !Model.SemanticFrom.HideResourceTitle)
                        {
                            <div class="group title">
                                <h1 property="dcterms:title" content="@FichaDocumento.Title">
                                    @if (string.IsNullOrEmpty(FichaDocumento.UrlDocument))
                                    {
                                        @FichaDocumento.Title
                                    }
                                    else
                                    {
                                        string claseEnviarAccGogAnac = "";
                                        if (FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.Imagen || FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.FicheroServidor)
                                        {
                                            claseEnviarAccGogAnac = "class=\"linkDescargaFichero\"";
                                        }

                                        if (FichaDocumento.OpenInNewWindow)
                                        {
                                            <a target="_blank" title="@Html.GetText("PERFILBASE", "ABREVENTANANUEVA")" href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.Title</a>
                                        }
                                        else
                                        {
                                            <a href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.Title</a>
                                        }
                                    }
                                </h1>

                                @{
                                    string privado = "";
                                    if (FichaDocumento.Private)
                                    {
                                        privado = "privado";
                                    }
                                }

                                <p class="resourceType @(FichaDocumento.TypeDocument == ResourceModel.DocumentType.Semantico ? "semantico " + FichaDocumento.RdfType : FichaDocumento.NameImage)  @privado">
                                    <span>tipo de documento</span>
                                    @if (FichaDocumento.Private)
                                    {
                                        <span class="privado">documento privado</span>
                                    }
                                    @if (string.IsNullOrEmpty(FichaDocumento.UrlDocument))
                                    {
                                        <a>@FichaDocumento.RdfTypeName</a>
                                    }
                                    else
                                    {
                                        string claseEnviarAccGogAnac = "";
                                        if (FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.Imagen || FichaDocumento.TypeDocument == Es.Riam.Gnoss.Web.MVC.Models.ResourceModel.DocumentType.FicheroServidor)
                                        {
                                            claseEnviarAccGogAnac = "class=\"linkDescargaFichero\"";
                                        }

                                        if (FichaDocumento.OpenInNewWindow)
                                        {
                                            <a target="_blank" href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.RdfTypeName</a>
                                        }
                                        else
                                        {
                                            <a href="@FichaDocumento.UrlDocument" @Html.Raw(claseEnviarAccGogAnac)>@FichaDocumento.RdfTypeName</a>
                                        }
                                    }
                                </p>
                            </div>
                                    }

                        @if (FichaDocumento.SocialNetworks != null && FichaDocumento.SocialNetworks.Count > 0)
                        {
                            <div class="group redesSocialesCompartir iconsRedesSociales">
                                <ul class="art_social">
                                    @{
                                        int numRedSocial = 0;
                                        foreach (string RedSocial in FichaDocumento.SocialNetworks.Keys)
                                        {
                                            string clase = RedSocial.ToLower();
                                            if (numRedSocial < 3)
                                            {
                                                clase += " big";
                                            }
                                            <li class="@clase">
                                                <a href="#" title="@RedSocial"
                                                   @foreach (string atributo in FichaDocumento.SocialNetworks[RedSocial].Keys) { @Html.Raw(atributo.Replace("onclick", "clickJS") + "=\"" + FichaDocumento.SocialNetworks[RedSocial][atributo] + "\" ") ; }>@RedSocial</a>
                                            </li>
    numRedSocial++;
}
                                    }
                                </ul>
                            </div>
                                        }

                        @if (Model.Resource.Publisher != null)
                        {
                            <div class="group author">
                                <p id="panelPublicador">
                                    @Html.PartialView("_FichaPublicador", FichaDocumento)
                                </p>
                                <p class="publicacion enCajaAuthor" style="display:none" content="@FichaDocumento.PublishDate.ToString("yyyy-MM-ddTHH:mm:ss%K")" property="dcterms:created">@FichaDocumento.PublishDate.ToString("d.M.yyyy")</p>
                            </div>
                        }

                        @if (!Model.HideUtilsResource)
                        {
                            if (!PresentacionNoSocial)
                            {
                                <div id="panUtils1" class="group utils-1 js-activado">
                                    <p class="info"><strong>@Html.GetText("PERFILBASERECURSOSFICHA", "ACERCADEESTERECURSO")</strong></p>
                                    @{
                                        string textoVisitas = Html.GetText("LISTARECURSOS", "VISITAS");
                                        if (FichaDocumento.NameImage == "video" || FichaDocumento.NameImage == "audio")
                                        {
                                            textoVisitas = Html.GetText("LISTARECURSOS", "REPRODUCCIONES");
                                        }
                                    }
                                    @if (!Model.HideWebsiteVisits)
                                    {
                                        <p class="visitas"><span class="literal">@textoVisitas </span><strong>@FichaDocumento.NumVisits</strong></p>
                                    }

                                    @if (FichaDocumento.Votes != null && FichaDocumento.AllowVotes)
                                    {
                                        @Html.PartialView("_FichaVotos", FichaDocumento.Votes)
                                    }

                                    @if (FichaDocumento.Certification.Key != Guid.Empty)
                                    {
                                        <div id="contCertificado">
                                            <p class="certificado">
                                                @Html.GetText("PERFILBASERECURSOSFICHA", "RECURSOCERTIFICADO"):
                                                <strong>@MvcHtmlString.Create(FichaDocumento.Certification.Value)</strong>
                                            </p>
                                        </div>
                                    }
                                </div>
                                            }
                                        }

                        @if (!PresentacionNoSocial || IdentidadActual.IsProyectAdmin || IdentidadActual.IsProyectSupervisor || Model.Resource.Actions.Edit)
                        {
                            @Html.PartialView("_FichaAccionesMenu", Model)
                        }
                        @section javascript{
                            <script type="text/javascript">
                                var urlActionSemCms = '@FichaDocumento.ListActions.UrlActionSemCms';

                                $(document).ready(function () {
                                    MontarFechas();

                                    cargarGadgets();
                                });

                                function cargarGadgets() {
                                    var gadgets = "";
                                    var numGadgets = 0;
                                    //Contextos
                                    $('#divContPanGadgets div.group.resources:empty').each(function () {
                                        if (numGadgets < 3 && $(this).attr("id") != undefined && $(this).attr("id") != "") {
                                            gadgets += $(this).attr("id") + ",";
                                            numGadgets++;
                                        }
                                    });
                                    //Componentes CMS
                                    $('#divContPanGadgets div.group.cmscomponent:empty').each(function () {
                                        if (numGadgets < 3 && $(this).attr("id") != undefined && $(this).attr("id") != "") {
                                            gadgets += $(this).attr("id") + ",";
                                            numGadgets++;
                                        }
                                    });

                                    if (gadgets != "") {
                                        var dataPostGadgets = {
                                            callback: "CargarGadgets",
                                            gadgetsID: gadgets
                                        }

                                        $.post('@Html.GetUrlContext((string)ViewBag.UrlPagina, FichaDocumento.Key, Html.GetComunidad().ShortName)', dataPostGadgets, function (data) {
                                            if(typeof data != "undefined" && data != ""){
                                                for (var i in data) {
                                                    try{
                                                        if (data[i].updateTargetId.indexOf("FichaGadget_") == 0) {
                                                            var panID = data[i].updateTargetId.substr(12);
                                                            var htmlGadget = data[i].html;
                                                            if (htmlGadget == "")
                                                            { $('#divContPanGadgets').find("#" + panID).remove(); }
                                                            else
                                                            { $('#divContPanGadgets').find("#" + panID).replaceWith(htmlGadget); }
                                                        }
                                                    }
                                                    catch(err){}
                                                }
                                            }
                                            $.each(gadgets.split(','), function (index, id) {
                                            if (id.trim() != '' && $('#' + id.trim(), $('#divContPanGadgets')).length > 0 && $('#' + id.trim(), $('#divContPanGadgets')).html().trim() == '')
                                            { $('#' + id.trim(), $('#divContPanGadgets')).remove(); }
                                            });

                                            cargarGadgets();
                                        });

                                    }
                                    else {
                                        CompletadaCargaContextos();
                                    }
                                }

                                @if (FichaDocumento.Graphs.Count > 0)
                                {
                                    @:var urlPaginaCallBackGrafos = '@FichaDocumento.ListActions.UrlCallbackGraph';

                                    Guid docID = FichaDocumento.Key;
                                    string titulo = FichaDocumento.Title.Replace("'", "\\'");
                                    Guid proyID = Comunidad.Key;
                                    string UrlIntragnoss = Model.UrlIntragnoss;

                                    Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/js/arbor.js?v=" + Html.GetVersion());
                                    Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/js/grafo.gnoss.js?v=" + Html.GetVersion());
                                    Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/js/jquery.qtip.min.js?v=" + Html.GetVersion());
                                    Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/jsNuevo/grafos/css/jquery.qtip.min.css?v=" + Html.GetVersion());

                                    int count = 1;
                                    foreach (ResourceModel.GrafoRecurso grafo in FichaDocumento.Graphs)
                                    {
                                        //@Html.Raw(" var dataPost = {callback: 'peticionajaxrelacionesgrafoficharec',urlintragnoss: '" + UrlIntragnoss + "',proyectoID: '" + proyID + "', documentoID: '" + docID + "', propEnlace: '" + grafo.PropEnlace + "', nodosLimiteNivel: 30,extra: '" + grafo.Extra + "', idioma: $('input.inpt_Idioma').val(), tipoRecurso: '" + grafo.TipoRecurso + "'};");
                                        @Html.Raw(" var dataPost" + count + " = {urlintragnoss: '" + UrlIntragnoss + "', propEnlace: '" + grafo.PropEnlace + "', nodosLimiteNivel: 30,extra: '" + grafo.Extra + "', idioma: $('input.inpt_Idioma').val(), tipoRecurso: '" + grafo.TipoRecurso + "'};");

                                                                                                                                                                                                                                                                                         //@Html.Raw(" $(function(){MontarGrafoFicRec('" + docID + "', '" + titulo + "', '" + proyID + "', '" + grafo.PropEnlace + "', 30, '" + UrlIntragnoss + "', '" + grafo.Extra + "', '" + grafo.UrlBusqueda + "', '" + grafo.TipoRecurso + "'); $.post('" + Html.GetUrlPagina() + "', dataPost, FinTraerDatosGrafoAJAX);});");
                                        @Html.Raw(" $(function(){MontarGrafoFicRec('" + docID + "', '" + titulo + "', '" + proyID + "', '" + grafo.PropEnlace + "', 30, '" + UrlIntragnoss + "', '" + grafo.Extra + "', '" + grafo.UrlBusqueda + "', '" + grafo.TipoRecurso + "'); GnossPeticionAjax('" + FichaDocumento.ListActions.UrlLoadGraph + "', dataPost" + count + ", true).done(function(data){FinTraerDatosGrafoAJAX(data)});});");

                                        count++;
                                    }
                                }
                        </script>
                        }
                        @if (FichaDocumento.TypeDocument != ResourceModel.DocumentType.Semantico)
                        {
                            @Html.PartialView("_FichaDescripcion", FichaDocumento)
                        }

                        @if (Model.SemanticFrom != null && !Model.SemanticFrom.SemCmsDrawOverMenu)
                        {
                            @Html.PartialView("../Shared/SemCms/_GeneradorSemCms", Model.SemanticFrom);
                        }

                        @if (!Model.HideUtilsResource)
                        {
                            <div class="group utils-2" id="contAutoresEditoresLectores">
                                @Html.PartialView("_FichaAutoresEditoresLectores", FichaDocumento)
                            </div>
                        }

                        @Html.PartialView("_FichaCategorias", FichaDocumento)

                        @Html.PartialView("_FichaEtiquetas", FichaDocumento)

                        @if (FichaDocumento.Version > 0)
                        {
                            <div class="group version">
                                <p>
                                    @Html.GetText("LISTARECURSOS", "VERSIONES")@FichaDocumento.Version
                                </p>
                            </div>
                        }

                        @if (!Model.HideSharedCommunities)
                        {
                            <div class="group compartida" id="divCompartido">
                                @Html.PartialView("_FichaCompartidos", FichaDocumento)
                            </div>
                        }

                        @if (FichaDocumento.TypeDocument == ResourceModel.DocumentType.Newsletter)
                        {
                            <div class="group newsletter">
                                <p>
                                    <a href="@FichaDocumento.UrlSearch?gnoss:hastipodoc=11">@Html.GetText("PERFILBASERECURSOSFICHA", "VERTODASNEWSLETTERS")</a>
                                </p>
                            </div>
                        }

                        @if (FichaDocumento.Licence != "")
                        {
                            <div class="group license">
                                <p class="licencia creativeCommonds">@Html.Raw(FichaDocumento.Licence)</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (FichaDocumento.Comments != null)
    {
        <div class="resource">
            <div class="box comments" id="comments">
                <div>
                    <div>
                        <p class="what"><strong><span id="numComentarios">@FichaDocumento.NumComments</span>&nbsp;@(FichaDocumento.NumComments == 1 ? Html.GetText("COMMON", "COMENTARIO").ToLower() : Html.GetText("COMMON", "COMENTARIOS").ToLower())</strong></p>
                        @if (!IdentidadActual.IsGuestIdentity)
                        {
                            if (FichaDocumento.AllowComments)
                            {
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/ckeditor/ckeditor.js?v=" + Html.GetVersion());
                                Html.GetListaJS().Add(Html.GetBaseUrlStatic() + "/ckeditor/adapters/jquery.js?v=" + Html.GetVersion());
                                <div id="add-comment">
                                    <div class="comment-content">
                                        <fieldset class="mediumLabels">
                                            <legend>
                                                @Html.GetText("PERFILBASERECURSOSFICHA", "PUBLICARCOMENTARIO")
                                            </legend>
                                            <p>
                                                <textarea cols="20" rows="2" id="txtNuevoComentario_@FichaDocumento.Key" class="cke comentarios"></textarea>
                                            </p>
                                            <p id="error_@FichaDocumento.Key" class="error"></p>
                                            @{
                                                string funcionComentario_CrearComentario = "Comentario_CrearComentario('" + FichaDocumento.ListActions.UrlCreateComment + "', '" + FichaDocumento.Key + "');";
                                            }
                                            <input type="button" class="text medium sendComment" value="@Html.GetText("COMMON", "ENVIAR")" onclick="@funcionComentario_CrearComentario" />
                                            @*<p></p>*@
                                        </fieldset>
                                    </div>
                                </div>
                                                }
                                                else
                                                {
                                                    <label><span>@Html.GetText("CONTROLESDOCUMENTACION", "COMENTARIOSBLOQUEADOS")</span></label>
                                                    }
                                                }
                                                else
                                                {
                                                    <p>@Html.GetText("CONTROLESDOCUMENTACION", "QUIERESCOMENTAR") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "HAZTEMIEMBRO")">@Html.GetText("COMMON", "REGISTRARSE")</a> @Html.GetText("PERFIL", "VISITANTEPERFILO") <a href="@Comunidad.Url/@Html.GetText("URLSEM", "LOGIN")">@Html.GetText("COMINICIOLOGIN", "INICIASESION")</a></p>
                                                }
                        <div id="panComentarios">
                            @foreach (CommentModel comentario in FichaDocumento.Comments)
                            {
                                @Html.PartialView("_FichaComentario", comentario)
                            }
                        </div>
                    </div>
                    @*<div class="oculto comentariosDisponibles"></div>*@
                </div>
            </div>
            <input type="hidden" value="@Html.GetText("FREEBASE", "AVISOLEGAL")" class="inpt_avisoLegal" />
        </div>
                                                }
</div>
<div id="col01">
    <div id="panVinculadosInt">
        @Html.PartialView("_FichaVinculados", FichaDocumento)
    </div>
    @if (FichaDocumento.Gadgets != null && FichaDocumento.Gadgets.Count > 0)
    {
        <div id="divContPanGadgets">
            @foreach (GadgetModel gadget in ((List<GadgetModel>)FichaDocumento.Gadgets).OrderBy(gadget => gadget.Order))
            {
                @Html.PartialView("ControlesMVC/_FichaGadget", gadget)
            }
        </div>
    }
</div>

@if (Model.SemanticFrom != null && Model.SemanticFrom.MapAgregated)
{
    <div class="listado-mapa">
        <div id="listing-preview-map"></div>
    </div>
}


<script language="javascript" type="text/javascript">

$(document).ready(function () {
    MontarFechaCliente();
});

</script>

<script type="text/javascript">
     @Html.Raw(Html.GetJSExtra());
</script>