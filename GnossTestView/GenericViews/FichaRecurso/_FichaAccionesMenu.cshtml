@model ResourceViewModel

@{
    ResourceModel fichaRecurso = Model.Resource;
    ResourceModel.ActionsModel acciones = fichaRecurso.Actions;
}

<div id="divGroupAccionesRec">
    <div id="customAboutResource" class="customAboutResource">
        <div class="group acciones resourceTools">
            <p></p>
            <ul class="principal">
                @*
                //Codigo para el botón de reportar un problema
                <li class="opReportPage">
                    <a class="oReportPage" onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionReportPage', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "REPORTAR_RECURSO_BOTON")</a>
                </li>
                *@
                @if (acciones.AddToMyPersonalSpace)
                {
                    string textoLinkMiEsp = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARABRPERSONAL");
                    if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Pregunta)
                    {
                        textoLinkMiEsp = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARAPREGUNTASPERSONAL");
                    }
                    else if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Debate)
                    {
                        textoLinkMiEsp = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARADEBATESPERSONAL");
                    }
                    textoLinkMiEsp += Es.Riam.Util.UtilCadenas.ObtenerTextoDeIdioma(Model.PersonalSpace, Html.GetUtilIdiomas().LanguageCode, null);
                    <li class="opAddPersonal">
                        <a class="oGuardarEspacioPersonal" onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionAddToPersonalSpace', this, 'despAccionRec_@fichaRecurso.Key', '');" >@textoLinkMiEsp</a>
                    </li>
                }
                @if (acciones.Restore)
                {
                    <li class="opLabel opRestore">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionRestoreVersion', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("HISTORIALVERSIONES", "RESTAURAR")</a>
                    </li>
                }
                @if (acciones.AddCategories)
                {
                    string textoLinkAgCat = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARCATEGORIA");
                    if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Pregunta)
                    {
                        textoLinkAgCat = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARPREGUNTAACATEGORIA");
                    }
                    else if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Encuesta)
                    {
                        textoLinkAgCat = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARENCUESTAACATEGORIA");
                    }
                    else if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Debate)
                    {
                        textoLinkAgCat = Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARDEBATEACATEGORIA");
                    }
                    <li class="opLabel opAddCategories">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionAddCategories', this, 'despAccionRec_@fichaRecurso.Key', '');">@textoLinkAgCat</a>
                    </li>
                }
                @if (acciones.AddTags)
                {
                    <li class="opLabel opAddTags">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionAddTags', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "AGREGARTAGS")</a>
                    </li>
                }
                @if (acciones.Share)
                {
                    <li class="opShare">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionShare', this, 'despAccionRec_@fichaRecurso.Key', 'AccionRecurso_Compartir');">@Html.GetText("PERFILBASERECURSOSFICHA", "COMPARTIR")</a>
                    </li>
                }
                @if (acciones.Duplicate)
                {
                    <li class="opDuplicate">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionDuplicate', this, 'despAccionRec_@fichaRecurso.Key', 'AccionRecurso_Duplicar');">@Html.GetText("PERFILBASERECURSOSFICHA", "DUPLICAR")</a>
                    </li>
                }
                @if (acciones.Edit)
                {
                    <li class="opEdit">
                        <a href="@Model.UrlEdit">@Html.GetText("PERFILBASERECURSOSFICHA", "EDITAR")</a>
                    </li>
                }
                @if (acciones.CreateVersion)
                {
                    <li class="opLabel opCreateVersion">
                        @if (fichaRecurso.TypeDocument != ResourceModel.DocumentType.Semantico)
                        {
                            <a href="@Model.UrlNewVersion">@Html.GetText("PERFILBASERECURSOSFICHA", "CREARVERSION")</a>
                        }
                        else
                        {
                            string accionEnlace = "CrearVersionDocSem('" + Html.GetUrlPagina() + "', '" + fichaRecurso.Key + "')";
                            <a onclick="@accionEnlace">@Html.GetText("PERFILBASERECURSOSFICHA", "CREARVERSION")</a>
                        }
                    </li>
                }
                @if (acciones.ViewHistory)
                {
                    <li class="opLabel opViewHistory">
                        <a href="@Model.UrlHistorial">@Html.GetText("PERFILBASERECURSOSFICHA", "HISTORIAL")</a>
                    </li>
                }
                @if (acciones.BlockComments)
                {
                    string textoLinkBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "BLOQUEARCOMENTARIOS");
                    string textoLinkDesBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "DESBLOQUEARCOMENTARIOS");
                    if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Pregunta)
                    {
                        textoLinkBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "CERRARPREGUNTA");
                        textoLinkDesBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "ABRIRPREGUNTA");
                    }
                    else if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Debate)
                    {
                        textoLinkBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "CERRARDEBATE");
                        textoLinkDesBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "ABRIRDEBATE");
                    }
                    else if (fichaRecurso.TypeDocument == ResourceModel.DocumentType.Encuesta)
                    {
                        textoLinkBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "CERRARENCUESTA");
                        textoLinkDesBloqCom = Html.GetText("PERFILBASERECURSOSFICHA", "ABRIRENCUESTA");
                    }

                    string accionEnlace = "";
                    string textoEnlace = "";

                    if (fichaRecurso.AllowComments)
                    {
                        accionEnlace = "BloquearComentarios(this, '" + textoLinkDesBloqCom + "', '" + fichaRecurso.ListActions.UrlLockComments + "', '" + fichaRecurso.Key + "')";
                        textoEnlace = textoLinkBloqCom;
                    }
                    else
                    {
                        accionEnlace = "DesbloquearComentarios(this, '" + textoLinkBloqCom + "', '" + fichaRecurso.ListActions.UrlUnlockComments + "', '" + fichaRecurso.Key + "')";
                        textoEnlace = textoLinkDesBloqCom;
                    }
                        
                    <li class="opLabel opBlockComments">
                        <a onclick="@accionEnlace">@textoEnlace</a>
                    </li>
                }
                @if (acciones.SendLink)
                {
                    <li class="opSend">
                        <a href="@fichaRecurso.CompletCardLink/@Html.GetText("URLSEM", "ENVIARPORCORREO")" rel="nofollow">@Html.GetText("ENVIOENLACE", "ENVIARENLACE")</a>
                    </li>
                }
                @if (acciones.SendNewsletter)
                {
                    <li class="opLabel opSendNewsletter">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionSendNewsletter', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "ENVIARCORREOTODOSUSUARIO")</a>
                    </li>
                }
                @if (acciones.SendNewsletterGroups)
                {
                    <li class="opLabel opSendNewsletterGroups">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionSendNewsletterGroups', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "ENVIARCORREOGRUPO")</a>
                    </li>
                }
                @if (acciones.LinkUp)
                {
                    <li class="opLabel opLinkUp">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionLinkResource', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("VINCULACIONDOCUMENTACION", "VINCDOC")</a>
                    </li>
                }
                @if (acciones.Certify)
                {
                    <li class="opLabel opCertify">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionCertify', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "CERTIFICAR")</a>
                    </li>
                }
                @if (acciones.Delete)
                {
                    <li class="opDelete toSecondary">
                        <a onclick="DesplegarAccionMVC('@fichaRecurso.ListActions.UrlLoadActionDelete', this, 'despAccionRec_@fichaRecurso.Key', '');">@Html.GetText("PERFILBASERECURSOSFICHA", "ELIMINAR")</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>	
    
<script type="text/javascript">
    $(document).ready(function () {
        herramientasRecursoCompactado.init();
        iconografia.init();
        if (typeof completadaCargaAcciones != "undefined" && completadaCargaAcciones != null) {
            completadaCargaAcciones();
        }
    });
</script>

<div style="display: none;" id ="despAccionRec_@fichaRecurso.Key">
    <div style="display: none;" class="stateShowForm" id="panels">
        <div class="loading" id="loading">
            <p>@Html.GetText("CONTROLDESPLEGAR", "CARGANDO")</p>
        </div>
        <div id="menssages">
            <div class="ok"></div>
            <div class="ko"></div>
        </div>
        <div class="box form activeForm" id="action"></div>
        <p class="cerrar"><a clickJS="CerrarPanelAccion('despAccionRec_@fichaRecurso.Key')" title="@Html.GetText("CONTROLDESPLEGAR", "CERRARFORM")">@Html.GetText("CONTROLDESPLEGAR", "CERRARX")</a></p>
    </div>
</div>