@model ThesaurusEditorModel

@helper PintarCategoria(CategoryModel pCategoriaTesauro)
{
    bool esCategoriaCompartida = false;
    if(Model.SharedCategories != null && Model.SharedCategories.Contains(pCategoriaTesauro.Key))
    {
        esCategoriaCompartida = true;
    }
    <div @Html.Raw(esCategoriaCompartida?"class=\"externo\"":"")>
        @{
            bool tieneHijos = !esCategoriaCompartida && ((List<CategoryModel>)Model.ThesaurusCategories).Count(cat => cat.ParentCategoryKey == pCategoriaTesauro.Key) > 0;
        }

        @if (tieneHijos)
        {
            string img = null;
            
            if (Model.ExpandedCategories == null || !Model.ExpandedCategories.Contains(pCategoriaTesauro.Key))
            {
                img = "verMas.gif";
            }
            else
            {
                img = "verMenos.gif";
            }
            
            <img style="border-width:0px;margin-right:5px;cursor:pointer;" src="@Html.GetBaseUrlStatic()/img/@img" onclick="javascript:MVCDesplegarTreeView(this);" />
        }
        else{
	        <img style="border-width:0px;" src="@Html.GetBaseUrlStatic()/img/miniWhiteSpace.gif" />
        }
        <span class="@pCategoriaTesauro.Key" @Html.GetParam("rel", pCategoriaTesauro.StringKey)>
            @{
                string accionClick = "MarcarCatSelEditorTes(this);";
                string cadenaChecked = "";
                string cadenaDisabled = "";
                if (Model.SelectedCategories.Contains(pCategoriaTesauro.Key))
                {
                    cadenaChecked = "checked=\"checked\"";
                }

                if (Model.DisabledCategories != null && Model.DisabledCategories.Contains(pCategoriaTesauro.Key))
                {
                    cadenaDisabled = "disabled=\"disabled\"";
                    accionClick = "";
                }
            }
        
            <input type="checkbox" onclick="@accionClick" @Html.Raw(cadenaChecked) @Html.Raw(cadenaDisabled) id="chk_arb_@pCategoriaTesauro.Key"/>
            <label for="chk_arb_@pCategoriaTesauro.Key">@pCategoriaTesauro.Name</label>
        </span>
        @if (tieneHijos)
        {
            string display = "";
            
            if (Model.ExpandedCategories == null || !Model.ExpandedCategories.Contains(pCategoriaTesauro.Key))
            {
                display = "display:none;";
            }
            
            <div style="margin-left:15px;@display" class="panHijos">
                @foreach (CategoryModel categoria in ((List<CategoryModel>)Model.ThesaurusCategories).Where(cat => cat.ParentCategoryKey == pCategoriaTesauro.Key).OrderBy(cat => cat.Order))
                {
                    @PintarCategoria(categoria);
                }
                @if (Model.SuggestedThesaurusCategories != null)
                {
                    foreach (CategoryModel categoria in ((List<CategoryModel>)Model.SuggestedThesaurusCategories).Where(cat => cat.ParentCategoryKey == pCategoriaTesauro.Key).OrderBy(cat => cat.Order))
                    {
                        @PintarCategoriaSugerida(categoria);
                    }
                }
            </div>
        }
    </div>
}

@helper PintarCategoriaSugerida(CategoryModel pCategoriaTesauro)
{
    <div>
        <img style="border-width:0px;" src="@Html.GetBaseUrlStatic()/img/miniWhiteSpace.gif" />
        
        <span class="@pCategoriaTesauro.Key" @Html.GetParam("rel", pCategoriaTesauro.StringKey)>
            <input type="checkbox" disabled="disabled" />
            <label style="color:#E37F4F;">@pCategoriaTesauro.Name</label>
            <a onclick="javascript:aceptarSolicitudCategoria('@pCategoriaTesauro.Key');" style="cursor:pointer;">aceptar</a>
             o 
            <a onclick="javascript:rechazarSolicitudCategoria('@pCategoriaTesauro.Key');" style="cursor:pointer;">rechazar</a>
        </span>
    </div>
}


@foreach (CategoryModel categoria in ((List<CategoryModel>)Model.ThesaurusCategories).Where(cat => cat.ParentCategoryKey == Guid.Empty).OrderBy(cat => cat.Order))
{
    @PintarCategoria(categoria);
}
@if (Model.SuggestedThesaurusCategories != null)
{
    foreach (CategoryModel categoria in ((List<CategoryModel>)Model.SuggestedThesaurusCategories).Where(cat => cat.ParentCategoryKey == Guid.Empty).OrderBy(cat => cat.Order))
    {
        @PintarCategoriaSugerida(categoria);
    }
}